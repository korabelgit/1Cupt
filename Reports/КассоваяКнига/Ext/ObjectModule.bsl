#Если Клиент Тогда

Перем НП Экспорт;
Перем ВидЛистаКассовойКниги Экспорт;
Перем мВалютаРегламентированногоУчета Экспорт;

Функция ОрдерПоРегистратору(Регистратор)
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор",Регистратор);
    	
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	             |	ПриходныйКассовыйОрдер.ДокументОснование,
				 |	ПриходныйКассовыйОрдер.Ссылка
	             |ИЗ
	             |	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |ГДЕ
				 |  ПриходныйКассовыйОрдер.ДокументОснование = &Регистратор
				 |";
				 
	Результат=Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Документы.ПриходныйКассовыйОрдер.ПустаяСсылка();
	КонецЕсли;	

	
КонецФункции

Процедура СформироватьЖурналРегистрацииПриходных(ДокументРезультат)
	
	//Вывод шапки
	Макет = ПолучитьМакет("ЖурналРегистрации");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Валюта",Валюта);
    	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитикаБУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация, "Бух");
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	БУ = ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте;
	УчетДСПоОбособленнымПодразделениямВПланеСчетов = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица, "ВидСубконто") = Неопределено, Ложь, Истина);
	Если УчетнаяПолитикаБУ.Количество() > 0 Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитикаБУ.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям И УчетДСПоОбособленнымПодразделениямВПланеСчетов;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		УсловиеПоОбособленномуПодразделению = " И (ПриходныйКассовыйОрдер.Касса.ОбособленноеПодразделение = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	Иначе
		УсловиеПоОбособленномуПодразделению = "";
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК День,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ ПриходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПорядок,
				 |	ПриходныйКассовыйОрдер.НомерОрдера КАК НомерОрдера,
 				 |	ПриходныйКассовыйОрдер.Ссылка КАК Ордер,
				 |	ПриходныйКассовыйОрдер.ВалютаДокумента КАК Валюта,
    			 |	ПриходныйКассовыйОрдер.СуммаДокумента КАК Приход,
				 |	ПриходныйКассовыйОрдер.НазначениеДенежныхСредств КАК Назначение,
				 |	ПриходныйКассовыйОрдер.НазначениеДенежныхСредств.Наименование КАК НаименованиеНазначения,
				 |	ПриходныйКассовыйОрдер.Комментарий КАК Комментарий
				 |ИЗ
				 |		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |	ГДЕ
				 |		(ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(ПриходныйКассовыйОрдер.Организация = &Организация) И
				 |		(ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(ПриходныйКассовыйОрдер.ОтражатьВБухгалтерскомУчете = ИСТИНА) И
				 |		(ПриходныйКассовыйОрдер.Проведен) И
				 |		(ПриходныйКассовыйОрдер.Оплачено ИЛИ НЕ ПриходныйКассовыйОрдер.ОтражатьВУправленческомУчете)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	День,
				 |  НомерОрдераПорядок";
				 
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выбрать();
	
	ТаблицаНазначения = РезультатЗапроса.Выгрузить();
	ТаблицаНазначения.Свернуть("Назначение, НаименованиеНазначения", "Приход");
	ТаблицаНазначения.Колонки.Добавить("НомерКолонки");
	
	//Эти два назначения должны присутствовать в шапке обязательно, в не зависимости от наличия движения по этим назначениям
	МассивОбязательныхНазначений = Новый Массив;
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда);
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.Командировка);
	
	Для каждого Назначение Из МассивОбязательныхНазначений Цикл
		СтрокаНазначения = ТаблицаНазначения.Найти(Назначение, "Назначение");
		Если СтрокаНазначения = Неопределено Тогда
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Назначение;
			СтрокаНазначения.Приход = 0;
		КонецЕсли;
		СтрокаНазначения.НомерКолонки 			= ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 3, 4);
		СтрокаНазначения.НаименованиеНазначения = ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда,
			"На заробітну плату, премії, стипендії", "На відрядження та інші цілі"); 
	КонецЦикла; 
	
	//Проставим номера для оставшихся назначений
	НомерКолонки = 5;
	СтрокиНазначенияКВыводу = ТаблицаНазначения.НайтиСтроки(Новый Структура("НомерКолонки", Неопределено));
	КоличествоСтрок = СтрокиНазначенияКВыводу.Количество();
	Если КоличествоСтрок = 0 Тогда
		//Также если нет движения по другим назначениям, кроме обязательных - необходимо добавить колонку без наименования (колонка 5)
		СтрокаНазначения = ТаблицаНазначения.Добавить();
		СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка();
		СтрокаНазначения.Приход = 0;
		СтрокаНазначения.НаименованиеНазначения = "";
		СтрокаНазначения.НомерКолонки = НомерКолонки;
	Иначе
		Для каждого СтрокаНазначения Из СтрокиНазначенияКВыводу Цикл
			//Пустая должна быть последней колонкой из назначений
			Если СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка() Тогда
				СтрокаНазначения.НомерКолонки = КоличествоСтрок + 4;
				СтрокаНазначения.НаименованиеНазначения = "";
			Иначе
				СтрокаНазначения.НомерКолонки = НомерКолонки;
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли; 		
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаНазначения.Сортировать("НомерКолонки");
	
	КоличествоНазначенийКВыводу = ТаблицаНазначения.Количество();
	ЦентральнаяКолонка = Окр(КоличествоНазначенийКВыводу / 2) + 2;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|ДатаНомер");
	ОбластьМакета.Параметры.ВидДокумента = "Прибутковий документ";
	ДокументРезультат.Вывести(ОбластьМакета);
	
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
		ОбластьМакета.Параметры.Назначение   = Назначение.НаименованиеНазначения; 
		ОбластьМакета.Параметры.НомерКолонки = Назначение.НомерКолонки;
		Если Назначение.НомерКолонки = ЦентральнаяКолонка Тогда
			ОбластьМакета.Параметры.ТекстШапки = "Надійшло грошей";
		КонецЕсли;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Комментарий");
	ОбластьМакета.Параметры.НомерКолонки = КоличествоНазначенийКВыводу + 3;
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|ДатаНомер");
		ОбластьМакета.Параметры.Дата = Результат.День;
		ОбластьМакета.Параметры.Номер = Результат.НомерОрдера;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Назначение");
		Для Каждого СтрокаНазначения из ТаблицаНазначения Цикл
			ОбластьМакета.Параметры.СуммаДокумента = ?(Результат.Назначение = СтрокаНазначения.Назначение, Результат.Приход, 0);
			ОбластьМакета.Параметры.Ордер = Результат.Ордер;
			ДокументРезультат.Присоединить(ОбластьМакета);
		КонецЦикла;	
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Комментарий");
		ОбластьМакета.Параметры.Комментарий = Результат.Комментарий;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	//Вывод всего
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|ДатаНомер");
	ДокументРезультат.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Назначение");
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета.Параметры.СуммаВсего = Назначение.Приход;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Комментарий");
	ДокументРезультат.Присоединить(ОбластьМакета);
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	
КонецПроцедуры	

Процедура СформироватьЖурналРегистрацииРасходных(ДокументРезультат)
	
	//Вывод шапки
	Макет = ПолучитьМакет("ЖурналРегистрации");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Валюта",Валюта);
    	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитикаБУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация, "Бух");
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	БУ = ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте;
	УчетДСПоОбособленнымПодразделениямВПланеСчетов = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица, "ВидСубконто") = Неопределено, Ложь, Истина);
	Если УчетнаяПолитикаБУ.Количество() > 0 Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитикаБУ.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям И УчетДСПоОбособленнымПодразделениямВПланеСчетов;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		УсловиеПоОбособленномуПодразделению = " И (РасходныйКассовыйОрдер.Касса.ОбособленноеПодразделение = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	Иначе
		УсловиеПоОбособленномуПодразделению = "";
	КонецЕсли;

	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК День,
				 |	РасходныйКассовыйОрдер.Ссылка КАК Ордер,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ РасходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПорядок,
				 |	РасходныйКассовыйОрдер.НомерОрдера КАК НомерОрдера,
				 |	РасходныйКассовыйОрдер.ВалютаДокумента КАК Валюта,
    			 |	РасходныйКассовыйОрдер.СуммаДокумента КАК Расход,
				 |	РасходныйКассовыйОрдер.НазначениеДенежныхСредств КАК Назначение,
				 |	РасходныйКассовыйОрдер.НазначениеДенежныхСредств.Наименование КАК НаименованиеНазначения,
				 |	РасходныйКассовыйОрдер.Комментарий КАК Комментарий
				 |ИЗ
				 |		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
				 |	ГДЕ
				 |		(РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(РасходныйКассовыйОрдер.Организация = &Организация) И
				 |		(РасходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(РасходныйКассовыйОрдер.ОтражатьВБухгалтерскомУчете = ИСТИНА) И
				 |		(РасходныйКассовыйОрдер.Проведен) И
				 |		(РасходныйКассовыйОрдер.Оплачено ИЛИ НЕ РасходныйКассовыйОрдер.ОтражатьВУправленческомУчете)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	День,
				 |	НомерОрдераПорядок";
				 
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выбрать();
	
	ТаблицаНазначения = РезультатЗапроса.Выгрузить();
	ТаблицаНазначения.Свернуть("Назначение, НаименованиеНазначения", "Расход");
	ТаблицаНазначения.Колонки.Добавить("НомерКолонки");
	
	//Эти два назначения должны присутствовать в шапке обязательно, в не зависимости от наличия движения по этим назначениям
	МассивОбязательныхНазначений = Новый Массив;
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда);
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.Командировка);
	
	Для каждого Назначение Из МассивОбязательныхНазначений Цикл
		СтрокаНазначения = ТаблицаНазначения.Найти(Назначение, "Назначение");
		Если СтрокаНазначения = Неопределено Тогда
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Назначение;
			СтрокаНазначения.Расход = 0;
		КонецЕсли;
		СтрокаНазначения.НомерКолонки 			= ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 3, 4);
		СтрокаНазначения.НаименованиеНазначения = ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда,
			"На заробітну плату, премії, стипендії", "На відрядження та інші цілі"); 
	КонецЦикла; 
	
	//Проставим номера для оставшихся назначений
	НомерКолонки = 5;
	СтрокиНазначенияКВыводу = ТаблицаНазначения.НайтиСтроки(Новый Структура("НомерКолонки", Неопределено));
	КоличествоСтрок = СтрокиНазначенияКВыводу.Количество();
	Если КоличествоСтрок = 0 Тогда
		//Также если нет движения по другим назначениям, кроме обязательных - необходимо добавить колонку без наименования (колонка 5)
		СтрокаНазначения = ТаблицаНазначения.Добавить();
		СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка();
		СтрокаНазначения.Расход = 0;
		СтрокаНазначения.НаименованиеНазначения = "";
		СтрокаНазначения.НомерКолонки = НомерКолонки;
	Иначе
		Для каждого СтрокаНазначения Из СтрокиНазначенияКВыводу Цикл
			//Пустая должна быть последней колонкой из назначений
			Если СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка() Тогда
				СтрокаНазначения.НомерКолонки = КоличествоСтрок + 4;
				СтрокаНазначения.НаименованиеНазначения = "";
			Иначе
				СтрокаНазначения.НомерКолонки = НомерКолонки;
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли; 		
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаНазначения.Сортировать("НомерКолонки");
	
	КоличествоНазначенийКВыводу = ТаблицаНазначения.Количество();
	ЦентральнаяКолонка = Окр(КоличествоНазначенийКВыводу / 2) + 2;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|ДатаНомер");
	ОбластьМакета.Параметры.ВидДокумента = "Видатковий документ";
	ДокументРезультат.Вывести(ОбластьМакета);
	
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
		ОбластьМакета.Параметры.Назначение   = Назначение.НаименованиеНазначения;
		ОбластьМакета.Параметры.НомерКолонки = Назначение.НомерКолонки;
		Если Назначение.НомерКолонки = ЦентральнаяКолонка Тогда
			ОбластьМакета.Параметры.ТекстШапки = "Витрачено грошей";
		КонецЕсли;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Комментарий");
	ОбластьМакета.Параметры.НомерКолонки = КоличествоНазначенийКВыводу + 3;
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|ДатаНомер");
		ОбластьМакета.Параметры.Дата = Результат.День;
		ОбластьМакета.Параметры.Номер = Результат.НомерОрдера;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Назначение");
		//Для Каждого Назначение из ТаблицаНазначения Цикл
		//	Если Результат.Назначение.Наименование = Назначение.Наименование Тогда
		//		ОбластьМакета.Параметры.СуммаДокумента = Результат.Расход;
		//		Назначение.Всего = Назначение.Всего + Результат.Расход;
		//	Иначе
		//		ОбластьМакета.Параметры.СуммаДокумента = 0;
		//	КонецЕсли;
		Для Каждого СтрокаНазначения из ТаблицаНазначения Цикл
			ОбластьМакета.Параметры.СуммаДокумента = ?(Результат.Назначение = СтрокаНазначения.Назначение, Результат.Расход, 0);
			ДокументРезультат.Присоединить(ОбластьМакета);
			ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		КонецЦикла;	
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Комментарий");
		ОбластьМакета.Параметры.Комментарий = Результат.Комментарий;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	//Вывод всего
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|ДатаНомер");
	ДокументРезультат.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Назначение");
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета.Параметры.СуммаВсего = Назначение.Расход;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Комментарий");

	ДокументРезультат.Присоединить(ОбластьМакета);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	
КонецПроцедуры

Процедура СформироватьЖурналРегистрацииРасходныхИПриходных(ДокументРезультат)
	
	//Вывод шапки
	Макет = ПолучитьМакет("ЖурналРегистрации3а");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Валюта",Валюта);
	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитикаБУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация, "Бух");
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	Если УчетнаяПолитикаБУ.Количество() > 0 Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитикаБУ.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		УсловиеПоОбособленномуПодразделению = " И (Касса.ОбособленноеПодразделение = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньРасход,
				 |	РасходныйКассовыйОрдер.Ссылка 					 КАК ОрдерРасход,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ РасходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераРасходПорядок,
				 |	РасходныйКассовыйОрдер.НомерОрдера 				 КАК НомерОрдераРасход,
    			 |	РасходныйКассовыйОрдер.СуммаДокумента 			 КАК СуммаРасход,
				 |	РасходныйКассовыйОрдер.Комментарий 				 КАК КомментарийРасход
				 |ИЗ
				 |		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
				 |	ГДЕ
				 |		(РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(РасходныйКассовыйОрдер.Организация = &Организация) И
				 |		(РасходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(РасходныйКассовыйОрдер.ОтражатьВБухгалтерскомУчете = ИСТИНА) И

				 |		(РасходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	ДеньРасход,
				 |	НомерОрдераРасходПорядок";
				 
	РезультатРасход =Запрос.Выполнить().Выбрать();
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньПриход,
				 |	ПриходныйКассовыйОрдер.Ссылка 					 КАК ОрдерПриход,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ ПриходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПриходПорядок,
				 |	ПриходныйКассовыйОрдер.НомерОрдера 				 КАК НомерОрдераПриход,
    			 |	ПриходныйКассовыйОрдер.СуммаДокумента 			 КАК СуммаПриход,
				 |	ПриходныйКассовыйОрдер.Комментарий 				 КАК КомментарийПриход
				 |ИЗ
				 |		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |	ГДЕ
				 |		(ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(ПриходныйКассовыйОрдер.Организация = &Организация) И
				 |		(ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(ПриходныйКассовыйОрдер.ОтражатьВБухгалтерскомУчете = ИСТИНА) И
				 |		(ПриходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	ДеньПриход,
				 |  НомерОрдераПриходПорядок";	
				 
	РезультатПриход =Запрос.Выполнить().Выбрать();	
	
	Пока 1=1 Цикл
		
		ЕстьЗапись = Ложь;
		
		Если РезультатПриход.Следующий() Тогда
			
			ЕстьЗапись = Истина;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.ДатаПриход  		= РезультатПриход.ДеньПриход;
			ОбластьМакета.Параметры.НомерПриход 		= РезультатПриход.НомерОрдераПриход;
			ОбластьМакета.Параметры.ОрдерПриход			= РезультатПриход.ОрдерПриход;
			ОбластьМакета.Параметры.СуммаПриход 		= РезультатПриход.СуммаПриход;
			ОбластьМакета.Параметры.КомментарийПриход 	= РезультатПриход.КомментарийПриход;
			
		КонецЕсли;	
		
		Если РезультатРасход.Следующий() Тогда
			
			Если Не ЕстьЗапись Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");	
			КонецЕсли;
			
			ЕстьЗапись = Истина;
			
			ОбластьМакета.Параметры.ДатаРасход  		= РезультатРасход.ДеньРасход;
			ОбластьМакета.Параметры.НомерРасход 		= РезультатРасход.НомерОрдераРасход;
			ОбластьМакета.Параметры.ОрдерРасход 		= РезультатРасход.ОрдерРасход;
			ОбластьМакета.Параметры.СуммаРасход 	 	= РезультатРасход.СуммаРасход;
			ОбластьМакета.Параметры.КомментарийРасход 	= РезультатРасход.КомментарийРасход;
			
		КонецЕсли;	
		
		Если ЕстьЗапись Тогда
			ДокументРезультат.Вывести(ОбластьМакета);
		Иначе
			Прервать;	
		КонецЕсли; 
	
	КонецЦикла; 
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры

Процедура СформироватьКнигаПринятыхВыданных(ДокументРезультат)
	
	//Запрос по остаткам и оборотам кассы
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	
	
	Если Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОстаткиИОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;	
    	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитикаБУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация, "Бух");
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	БУ = ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте;
	УчетДСПоОбособленнымПодразделениямВПланеСчетов = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица, "ВидСубконто") = Неопределено, Ложь, Истина);
	Если УчетнаяПолитикаБУ.Количество() > 0 Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитикаБУ.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям И УчетДСПоОбособленнымПодразделениямВПланеСчетов;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		ТекстСубконто = "&ВидСубконто";
		Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		
		УсловиеПоСубконто = "И Субконто1 = &ОбособленноеПодразделениеОрганизации";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	Иначе
		ТекстСубконто = "";
		УсловиеПоСубконто = "";
	КонецЕсли;

	Запрос.Текст="ВЫБРАТЬ
				 | ХозрасчетныйОстаткиИОбороты.Период КАК Период,
				 | ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстаток КАК ВалютнаяСуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, ДЕНЬ, Движения, Счет = &Счет," + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОстаткиИОбороты
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				  | Период";
				 
	Результат=Запрос.Выполнить().Выбрать();
	
	//Вывод шапки
	Макет       = ПолучитьМакет("КнигаПринятыхВыданных");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Дата = Результат.Период;
		Если НЕ ВалютнаяКасса Тогда
			ОбластьМакета.Параметры.ОстатокНачало = Результат.СуммаНачальныйОстаток;
			ОбластьМакета.Параметры.Расход = Результат.СуммаОборотКт;
			ОбластьМакета.Параметры.Приход = Результат.СуммаОборотДт;
			ОбластьМакета.Параметры.ОстатокКонец = Результат.СуммаКонечныйОстаток;
		Иначе
			Если (Результат.ВалютнаяСуммаОборотКт=0)И(Результат.ВалютнаяСуммаОборотДт=0) Тогда
				//валютную кассу могут еще трогать и переоценки
				Продолжить;
			КонецЕсли;	
			ОбластьМакета.Параметры.ОстатокНачало = Результат.ВалютнаяСуммаНачальныйОстаток;
			ОбластьМакета.Параметры.Расход = Результат.ВалютнаяСуммаОборотКт;
			ОбластьМакета.Параметры.Приход = Результат.ВалютнаяСуммаОборотДт;
			ОбластьМакета.Параметры.ОстатокКонец = Результат.ВалютнаяСуммаКонечныйОстаток;
		КонецЕсли;	
		ДокументРезультат.Вывести(ОбластьМакета);
	КонецЦикла;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
КонецПроцедуры	

Функция СформироватьСтруктуруНомеровЛистов (УчетДенежныхСредствПоОбособленнымПодразделениям)
	
	Запрос = Новый Запрос;		
	Запрос.УстановитьПараметр("ДатаНач",НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Если Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;
	
	Если НЕ УчетДенежныхСредствПоОбособленнымПодразделениям Тогда
		ТекстСубконто = "";
	Иначе
		ТекстСубконто = "&Субконто";
		Если ПустаяСтрока(ТекстФильтр) Тогда
			ТекстФильтр = "ГДЕ
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		Иначе
			ТекстФильтр = ТекстФильтр + " И
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		КонецЕсли; 
		Запрос.УстановитьПараметр("Субконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	
	Запрос.Текст="ВЫБРАТЬ
				 | ХозрасчетныйОбороты.Период КАК Период
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, День, Счет = &Счет,"+ТекстСубконто+", Организация = &Организация) КАК ХозрасчетныйОбороты
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				 | Период";
				 
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураВозврата        = Новый Структура();
	СоответствиеНомеровМесяц = Новый Соответствие();
	СоответствиеНомеровГод   = Новый Соответствие();
	
	ТекГод   = Неопределено;
	ТекМесяц = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Месяц(Выборка.Период) <> ТекМесяц Тогда
			ТекМесяц = Месяц(Выборка.Период);
			НомерЛистаМесяц = 1;	
		КонецЕсли;
		
		Если Год(Выборка.Период) <> ТекГод Тогда
			Если ТекГод = Неопределено Тогда
				НомерЛистаГод = НачальныйНомерЛиста;
			Иначе
				НомерЛистаГод = 1;
			КонецЕсли; 
			ТекГод = Год(Выборка.Период);
		КонецЕсли;
		
		СоответствиеНомеровМесяц.Вставить(Выборка.Период, НомерЛистаМесяц);
		СоответствиеНомеровГод.Вставить(Выборка.Период, НомерЛистаГод);
		
		НомерЛистаМесяц = НомерЛистаМесяц +1;
		НомерЛистаГод = НомерЛистагод + 1;	
		
	КонецЦикла;
	
	СтруктураВозврата.Вставить("СоответствиеНомеровМесяц", СоответствиеНомеровМесяц);
	СтруктураВозврата.Вставить("СоответствиеНомеровГод", СоответствиеНомеровГод);
	
	Возврат СтруктураВозврата;
		
КонецФункции	


Процедура СформироватьКассоваяКнига(ДокументРезультат)
	
	// Запрос по остаткам и оборотам кассы
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Если Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОстаткиИОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;	
	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитикаБУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация, "Бух");
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	БУ = ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте;
	УчетДСПоОбособленнымПодразделениямВПланеСчетов = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица, "ВидСубконто") = Неопределено, Ложь, Истина);
	Если УчетнаяПолитикаБУ.Количество() > 0 Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитикаБУ.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям И УчетДСПоОбособленнымПодразделениямВПланеСчетов;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		ТекстСубконто = "&ВидСубконто";
		Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		
		УсловиеПоСубконто = "И Субконто1 = &ОбособленноеПодразделениеОрганизации";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
		
	Иначе
		ТекстСубконто = "";
		УсловиеПоСубконто = "";
	КонецЕсли;
	
	Если ВалютнаяКасса Тогда
		УсловиеПоСубконто = УсловиеПоСубконто + " И Валюта = &Валюта";
	КонецЕсли;
    	
	Запрос.Текст="ВЫБРАТЬ
	             | ХозрасчетныйОбороты.Регистратор КАК Регистратор,
				 | ХозрасчетныйОстаткиИОбороты.Период КАК Период,
				 | ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйРазвернутыйОстатокКт КАК ВалютнаяСуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйРазвернутыйОстатокКт КАК ВалютнаяСуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт,
				 | ХозрасчетныйОбороты.КорСчет КАК КорСчет,
				 | ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаКорОборотДт,
				 | ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаКорОборотКт,
				 | ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаКорОборотДт,
				 | ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаКорОборотКт
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, День, Движения, Счет = &Счет, " + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОстаткиИОбороты
				 | ЛЕВОЕ СОЕДИНЕНИЕ
				 | РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет = &Счет, " + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОбороты
				 | ПО ХозрасчетныйОстаткиИОбороты.Период = НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,День)
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				  | Период,
				  | ХозрасчетныйОбороты.Регистратор.МоментВремени
				  |ИТОГИ
	              |	МАКСИМУМ(Период),
				  |	МАКСИМУМ(СуммаНачальныйОстаток),
	              |	МАКСИМУМ(СуммаКонечныйОстаток),
	              |	МАКСИМУМ(СуммаОборотДт),
	              |	МАКСИМУМ(СуммаОборотКт),
				  |	СУММА(СуммаКорОборотДт),
	              |	СУММА(СуммаКорОборотКт),
				  |	МАКСИМУМ(ВалютнаяСуммаНачальныйОстаток),
	              |	МАКСИМУМ(ВалютнаяСуммаКонечныйОстаток),
	              |	МАКСИМУМ(ВалютнаяСуммаОборотДт),
	              |	МАКСИМУМ(ВалютнаяСуммаОборотКт),
				  |	СУММА(ВалютнаяСуммаКорОборотДт),
	              |	СУММА(ВалютнаяСуммаКорОборотКт)
	              |ПО
	              |	Регистратор";

	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураНомеров = СформироватьСтруктуруНомеровЛистов (УчетДенежныхСредствПоОбособленнымПодразделениям);
	СоответствиеНомеровМесяц = СтруктураНомеров.СоответствиеНомеровМесяц; 
	СоответствиеНомеровГод   = СтруктураНомеров.СоответствиеНомеровГод;
	
	ТекДата = Дата("00010101");
	ТекРегистратор = "";
	ОстатокЗаДень  = 0;ВалютныйОстатокЗаДень  = 0;
	ПриходЗаДень   = 0;ВалютныйПриходЗаДень   = 0;
	РасходЗаДень   = 0;ВалютныйРасходЗаДень   = 0;
	КоличествоПКОЗаДень = 0;
	КоличествоРКОЗаДень = 0;
	ТаблицаСтрокДляВывода = Новый ТаблицаЗначений;
	ТаблицаСтрокДляВывода.Колонки.Добавить("НомерОрдера");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ДокументОрдер");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Контрагент");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Ордер");
	ТаблицаСтрокДляВывода.Колонки.Добавить("КоррСчет");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Приход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ПриходВалюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Валюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Расход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("РасходВалюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("РасходПриход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ВалютаПриход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ВалютаРасход");

	Макет       = ПолучитьМакет("КассоваяКнига");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;

	Пока Результат.Следующий() Цикл
		
		Если Результат.Период <> ТекДата Тогда
			
			Если (ОстатокЗаДень <> 0) ИЛИ (ПриходЗаДень <> 0) ИЛИ (РасходЗаДень <> 0) Тогда
				
				ТаблицаСтрокДляВывода.Сортировать("РасходПриход Возр, НомерОрдера Возр");
				
				ОбластьКонецСтраницы = Макет.ПолучитьОбласть("ШаблонКонецСтраницы");
				НомерСтроки = 1;
				КоличествоСтрок = ТаблицаСтрокДляВывода.Количество();
				
				ПриходЗаДеньВОтчет = 0;
				РасходЗаДеньВОтчет = 0;
				ВалютныйПриходЗаДеньВОтчет = 0;
				ВалютныйРасходЗаДеньВОтчет = 0;
				
				Для Каждого Строка Из ТаблицаСтрокДляВывода Цикл
					
					ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					ОбластьМакета.Параметры.Заполнить(Строка);	
					
					Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) Тогда
						// Выведем разрыв страницы
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
						НачатьНовуюСтраницу(СоответствиеНомеровГод, СоответствиеНомеровМесяц, ТекДата, Результат.Период, ОбластьШапка);
						ДокументРезультат.Вывести(ОбластьШапка);
					КонецЕсли;
					
					НомерСтроки = НомерСтроки + 1;
					
					ПриходЗаДеньВОтчет = ПриходЗаДеньВОтчет + ?(Строка.Приход = "-", 0, Строка.Приход);
					РасходЗаДеньВОтчет = РасходЗаДеньВОтчет + ?(Строка.Расход = "-", 0, Строка.Расход);
					ВалютныйПриходЗаДеньВОтчет = ВалютныйПриходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.ПриходВалюта), Строка.ПриходВалюта, 0);
					ВалютныйРасходЗаДеньВОтчет = ВалютныйРасходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.РасходВалюта), Строка.РасходВалюта, 0);
					
					ДокументРезультат.Вывести(ОбластьМакета);
					
				КонецЦикла;
				ТаблицаСтрокДляВывода.Очистить();

				ОбластьМакета = Макет.ПолучитьОбласть("ОстатокКонец");
				ОбластьМакета.Параметры.ОстатокКонец = ?(ОстатокЗаДень = 0, "-", ОстатокЗаДень);
				ОбластьМакета.Параметры.Приход = ?(ПриходЗаДеньВОтчет = 0, "-", ПриходЗаДеньВОтчет);
				ОбластьМакета.Параметры.Расход = ?(РасходЗаДеньВОтчет = 0, "-", РасходЗаДеньВОтчет);
				
				Отбор = Новый Структура();
				Отбор.Вставить("СтруктурнаяЕдиница", Организация);
				Отбор.Вставить("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
				ОбластьМакета.Параметры.Бухгалтер = РегистрыСведений.ОтветственныеЛицаОрганизаций.ПолучитьПоследнее(ТекДата, Отбор).ФизическоеЛицо.Наименование;
				Отбор.Вставить("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.Кассир);
				ОбластьМакета.Параметры.Кассир    = РегистрыСведений.ОтветственныеЛицаОрганизаций.ПолучитьПоследнее(ТекДата, Отбор).ФизическоеЛицо.Наименование;
				
				ФорматнаяСтрока = "Л = uk_UA";    
				КоличествоПКОЗаДень = ?(КоличествоПКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоПКОЗаДень, ФорматнаяСтрока));
				КоличествоРКОЗаДень = ?(КоличествоРКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоРКОЗаДень, ФорматнаяСтрока));
				КоличествоПКОЗаДень = СокрЛП(Лев(КоличествоПКОЗаДень, СтрДлина(КоличествоПКОЗаДень) - 3 ));
				КоличествоРКОЗаДень = СокрЛП(Лев(КоличествоРКОЗаДень, СтрДлина(КоличествоРКОЗаДень) - 3 ));
				ОбластьМакета.Параметры.КоличествоПКО = КоличествоПКОЗаДень;
				ОбластьМакета.Параметры.КоличествоРКО = КоличествоРКОЗаДень;
				
				Если ВалютнаяКасса Тогда
					ОбластьМакета.Параметры.ОстатокКонецВалюта = ?(ВалютныйОстатокЗаДень = 0, "", Формат(ВалютныйОстатокЗаДень,"ЧЦ=15; ЧДЦ=2; ЧН=0,00"));
					ОбластьМакета.Параметры.ПриходВалюта = Формат(ВалютныйПриходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.РасходВалюта = Формат(ВалютныйРасходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.ВалютаПриход  = ?(ВалютныйПриходЗаДень  = 0, "-", Валюта.Наименование);
					ОбластьМакета.Параметры.ВалютаРасход  = ?(ВалютныйРасходЗаДень  = 0, "-", Валюта.Наименование);
					ОбластьМакета.Параметры.ВалютаОстаток = ?(ВалютныйОстатокЗаДень = 0, "-", Валюта.Наименование);
				КонецЕсли;
				
				// количество листов за месяц
				Если ВидЛистаКассовойКниги = "Конец месяца" Тогда
					Если Месяц(Результат.Период) <> Месяц(ТекДата) Тогда
						ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата));
					КонецЕсли;
				КонецЕсли;	
				// количество листов за год
				Если ВидЛистаКассовойКниги = "Конец года" Тогда
					Если Месяц(Результат.Период) <> Месяц(ТекДата) Тогда
						ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата));
					КонецЕсли;
					Если Год(Результат.Период) <> Год(ТекДата) Тогда
						ОбластьМакета.Параметры.КоличествоЛистовГод = "Листів з початку року: " + СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)); 
					КонецЕсли;
				КонецЕсли;	

				ДокументРезультат.Вывести(ОбластьМакета);
				
				КоличествоПКОЗаДень = 0;
				КоличествоРКОЗаДень = 0;
			КонецЕсли;	
			ТекДата = Результат.Период;
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ЧислоДокумента                          = Формат(Результат.Период,"ДФ='дд';Л=uk_UA");
			ДатаДокумента                           = Формат(Результат.Период,"ДФ='дд ММММ ггггр.';Л=uk_UA");
			ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
			ОбластьМакета.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
            // номер листа
			ОбластьМакета.Параметры.НомерЛиста = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата));
			
			ДокументРезультат.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("ОстатокНачало");
			ОбластьМакета.Параметры.ОстатокНачало = ?(Результат.СуммаНачальныйОстаток = 0, "-", Результат.СуммаНачальныйОстаток);
			Если ВалютнаяКасса Тогда
				ОбластьМакета.Параметры.ОстатокНачалоВалюта = ?(Результат.ВалютнаяСуммаНачальныйОстаток = 0, "",Формат(Результат.ВалютнаяСуммаНачальныйОстаток,"ЧЦ=15; ЧДЦ=2; ЧН=0,00"));
				ОбластьМакета.Параметры.Валюта = ?(Результат.ВалютнаяСуммаНачальныйОстаток = 0, "-", Валюта.Наименование);
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьМакета);
			ОстатокЗаДень = Результат.СуммаКонечныйОстаток;
			ПриходЗаДень = Результат.СуммаОборотДт;
			РасходЗаДень = Результат.СуммаОборотКт;
			ВалютныйОстатокЗаДень = Результат.ВалютнаяСуммаКонечныйОстаток;
			ВалютныйПриходЗаДень = Результат.ВалютнаяСуммаОборотДт;
			ВалютныйРасходЗаДень = Результат.ВалютнаяСуммаОборотКт;
		КонецЕсли;
		
		
		Строка = ТаблицаСтрокДляВывода.Добавить();
		Строка.ДокументОрдер = Результат.Регистратор;		

		Если Результат.Регистратор <> ТекРегистратор Тогда
			
			ТекРегистратор = Результат.Регистратор;
			
			Если ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ПереоценкаВалютныхСредств") Тогда
				//Просто отобразим курсовую разницу
				Строка.НомерОрдера = "";
				Строка.Контрагент  = "";
			ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ОперацияБух") Тогда
				//Тут мы ничего не знаем
				Строка.НомерОрдера = "";
				Строка.Контрагент  = "";
			ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
				
				Строка.НомерОрдера = ОбщегоНазначения.ПреобразоватьВЧисло(Результат.Регистратор.НомерОрдера);
				Если Строка.НомерОрдера = 0 Тогда
					Строка.НомерОрдера = Результат.Регистратор.НомерОрдера;
				КонецЕсли;
				Строка.Контрагент = Результат.Регистратор.ПринятоОт;
				
                КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;
				
			ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда	
				Строка.НомерОрдера = ОбщегоНазначения.ПреобразоватьВЧисло(Результат.Регистратор.НомерОрдера);
				Если Строка.НомерОрдера = 0 Тогда
					Строка.НомерОрдера = Результат.Регистратор.НомерОрдера;
				КонецЕсли;
				Строка.Контрагент = Результат.Регистратор.Выдать;
                КоличествоРКОЗаДень = КоличествоРКОЗаДень + 1;
			Иначе
				//Попробуем найти для него ордер
				Ордер = ОрдерПоРегистратору(Результат.Регистратор);
				Строка.НомерОрдера = ОбщегоНазначения.ПреобразоватьВЧисло(Результат.Регистратор.НомерОрдера);
				Если Строка.НомерОрдера = 0 Тогда
					Строка.НомерОрдера = Ордер.НомерОрдера;
				КонецЕсли;
				Строка.Контрагент = Ордер.ПринятоОт;
				
			КонецЕсли;	
		КонецЕсли;
		РезультатПоСчетам = Результат.Выбрать();
		СписокСчетов = ""; Разделитель = "";
		ЕстьКурсоваяРазница = Ложь;
		Пока РезультатПоСчетам.Следующий() Цикл
			СписокСчетов = СписокСчетов + Разделитель + Строка(РезультатПоСчетам.КорСчет);
			Разделитель = ", ";
			Если ВалютнаяКасса И (РезультатПоСчетам.СуммаКорОборотДт <> 0 И РезультатПоСчетам.ВалютнаяСуммаКорОборотДт = 0) 
				ИЛИ (РезультатПоСчетам.СуммаКорОборотКт <> 0 И РезультатПоСчетам.ВалютнаяСуммаКорОборотКт=0) Тогда
				ЕстьКурсоваяРазница = Истина;	
			КонецЕсли;	
		КонецЦикла;
		Строка.КоррСчет = СписокСчетов;
		
		СуммаПродаж    = Результат.СуммаКорОборотДт;
		СуммаВозвратов = Результат.СуммаКорОборотКт;
		
		Если СуммаПродаж - СуммаВозвратов > 0 Тогда
			Строка.Приход = СуммаПродаж - СуммаВозвратов;
			Строка.Расход = "-";
		Иначе
			Строка.Приход = "-";
			Строка.Расход = СуммаВозвратов - СуммаПродаж;
		КонецЕсли;
		Строка.РасходПриход = ?(СуммаПродаж    = 0, 1, 0);
		
		Если ВалютнаяКасса Тогда
			СуммаПродажВалюта    = Результат.ВалютнаяСуммаКорОборотДт;
			СуммаВозвратовВалюта = Результат.ВалютнаяСуммаКорОборотКт;
			Если СуммаПродаж - СуммаВозвратов > 0 Тогда
				Строка.ПриходВалюта = Формат(СуммаПродажВалюта - СуммаВозвратовВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				Строка.РасходВалюта = "-";
			Иначе
				Строка.ПриходВалюта = "-";
				Строка.РасходВалюта =  Формат(СуммаВозвратовВалюта - СуммаПродажВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			КонецЕсли;
			Строка.ВалютаПриход = ?(Результат.ВалютнаяСуммаКорОборотДт = 0, "-", Валюта.Наименование);
			Строка.ВалютаРасход = ?(Результат.ВалютнаяСуммаКорОборотКт = 0, "-", Валюта.Наименование);
			Если ЕстьКурсоваяРазница Тогда
				Если ПустаяСтрока(Строка.Контрагент) Тогда
					Строка.Контрагент = "Курсова різниця";
				Иначе
					Строка.Контрагент = Строка.Контрагент + ", Курсова різниця";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Строка.Ордер = Результат.Регистратор;
		ДатаПоследнейЗаписи = Результат.Период;
	КонецЦикла;	
	
	Если (ОстатокЗаДень <> 0) ИЛИ (ПриходЗаДень <> 0) ИЛИ (РасходЗаДень <> 0) Тогда
		
		ТаблицаСтрокДляВывода.Сортировать("РасходПриход Возр, НомерОрдера Возр");
		
		ОбластьКонецСтраницы = Макет.ПолучитьОбласть("ШаблонКонецСтраницы");
		НомерСтроки = 1;
		КоличествоСтрок = ТаблицаСтрокДляВывода.Количество();
		
		ПриходЗаДеньВОтчет = 0;
		РасходЗаДеньВОтчет = 0;
		ВалютныйПриходЗаДеньВОтчет = 0;
		ВалютныйРасходЗаДеньВОтчет = 0;
		
		Для Каждого Строка Из ТаблицаСтрокДляВывода Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Строка);	
			Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) ИЛИ ((НомерСтроки = КоличествоСтрок) и НЕ ДокументРезультат.ПроверитьВывод(ОбластьКонецСтраницы))Тогда
				// Выведем разрыв страницы
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
				НачатьНовуюСтраницу(СоответствиеНомеровГод, СоответствиеНомеровМесяц, ТекДата, Дата("00010101"), ОбластьШапка);
				ДокументРезультат.Вывести(ОбластьШапка);
			КонецЕсли;
			НомерСтроки = НомерСтроки + 1;
			
			ПриходЗаДеньВОтчет = ПриходЗаДеньВОтчет + ?(Строка.Приход = "-", 0, Строка.Приход);
			РасходЗаДеньВОтчет = РасходЗаДеньВОтчет + ?(Строка.Расход = "-", 0, Строка.Расход);
			ВалютныйПриходЗаДеньВОтчет = ВалютныйПриходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.ПриходВалюта), Строка.ПриходВалюта, 0);
			ВалютныйРасходЗаДеньВОтчет = ВалютныйРасходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.РасходВалюта), Строка.РасходВалюта, 0);
			
			ДокументРезультат.Вывести(ОбластьМакета);
			
		КонецЦикла;
		ТаблицаСтрокДляВывода.Очистить();

		ОбластьМакета = Макет.ПолучитьОбласть("ОстатокКонец");
		ОбластьМакета.Параметры.ОстатокКонец = ?(ОстатокЗаДень = 0, "-", ОстатокЗаДень);
		ОбластьМакета.Параметры.Приход = ?(ПриходЗаДеньВОтчет = 0, "-", ПриходЗаДеньВОтчет);
		ОбластьМакета.Параметры.Расход = ?(РасходЗаДеньВОтчет = 0, "-", РасходЗаДеньВОтчет);
		
		Отбор = Новый Структура();
		Отбор.Вставить("СтруктурнаяЕдиница", Организация);
		Отбор.Вставить("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.Бухгалтер = РегистрыСведений.ОтветственныеЛицаОрганизаций.ПолучитьПоследнее(ДатаПоследнейЗаписи, Отбор).ФизическоеЛицо.Наименование;
		Отбор.Вставить("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.Кассир);
		ОбластьМакета.Параметры.Кассир    = РегистрыСведений.ОтветственныеЛицаОрганизаций.ПолучитьПоследнее(ДатаПоследнейЗаписи, Отбор).ФизическоеЛицо.Наименование;

		ФорматнаяСтрока = "Л = uk_UA";
		КоличествоПКОЗаДень = ?(КоличествоПКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоПКОЗаДень, ФорматнаяСтрока));
		КоличествоРКОЗаДень = ?(КоличествоРКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоРКОЗаДень, ФорматнаяСтрока));
		КоличествоПКОЗаДень = СокрЛП(Лев(КоличествоПКОЗаДень, СтрДлина(КоличествоПКОЗаДень) - 3 ));
		КоличествоРКОЗаДень = СокрЛП(Лев(КоличествоРКОЗаДень, СтрДлина(КоличествоРКОЗаДень) - 3 ));
		ОбластьМакета.Параметры.КоличествоПКО = КоличествоПКОЗаДень;
		ОбластьМакета.Параметры.КоличествоРКО = КоличествоРКОЗаДень;

		Если ВалютнаяКасса Тогда
			ОбластьМакета.Параметры.ОстатокКонецВалюта = ?(ВалютныйОстатокЗаДень = 0, "", Формат(ВалютныйОстатокЗаДень,"ЧЦ=15; ЧДЦ=2; ЧН=0,00"));
			ОбластьМакета.Параметры.ПриходВалюта = Формат(ВалютныйПриходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.РасходВалюта = Формат(ВалютныйРасходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.ВалютаПриход = ?(ВалютныйПриходЗаДень = 0, "-", Валюта.Наименование);
			ОбластьМакета.Параметры.ВалютаРасход = ?(ВалютныйРасходЗаДень = 0, "-", Валюта.Наименование);
			ОбластьМакета.Параметры.ВалютаОстаток = ?(ВалютныйОстатокЗаДень = 0, "-", Валюта.Наименование);
		КонецЕсли;
		// количество листов за месяц
		Если ВидЛистаКассовойКниги = "Конец месяца" Тогда	
			ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата));
		КонецЕсли;	
		// количество листов за год
		Если ВидЛистаКассовойКниги = "Конец года" Тогда
			ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата));
			ОбластьМакета.Параметры.КоличествоЛистовГод = "Листів з початку року: " + СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)); 
		КонецЕсли;
		ДокументРезультат.Вывести(ОбластьМакета);
	КонецЕсли;	
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
КонецПроцедуры // СформироватьКассоваяКнига

Процедура НачатьНовуюСтраницу(СоответствиеНомеровГод, СоответствиеНомеровМесяц, ТекДата, СледДата, ОбластьШапка)
	
	ЧислоДокумента                          = Формат(ТекДата,"ДФ='дд';Л=uk_UA");
	ДатаДокумента                           = Формат(ТекДата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
	ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
	ОбластьШапка.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
	
	// номер листа
	НомеТекЛистаГода = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата));
	СоответствиеНомеровГод.Вставить(НачалоДня(ТекДата), НомеТекЛистаГода + 1);
	НомеТекЛистаМесяца = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата));
	СоответствиеНомеровМесяц.Вставить(НачалоДня(ТекДата), НомеТекЛистаМесяца + 1);
	
	ОбластьШапка.Параметры.НомерЛиста = НомеТекЛистаГода + 1;
	
	Если НачалоМесяца(СледДата) = НачалоМесяца(ТекДата) Тогда
		СоответствиеНомеровМесяц.Вставить(НачалоДня(СледДата), НомеТекЛистаМесяца + 2);
	КонецЕсли;
	
	Если НачалоГода(СледДата) = НачалоГода(ТекДата) Тогда
		СоответствиеНомеровГод.Вставить(НачалоДня(СледДата), НомеТекЛистаГода + 2);
	КонецЕсли;
	
КонецПроцедуры // НачатьНовуюСтраницу

Функция ПроверкаПериода()
	
	ПроверкаПройдена=Истина;
	
	Если ДатаНач > ДатаКон Тогда
		
		Предупреждение("Неправильно задан период формирования отчета!"+Символы.ПС+
		               "Дата начала больше даты окончания периода.");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли ДатаНач='00010101' Тогда
		
		Предупреждение("Не указана дата начала отчета");
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли ДатаКон='00010101' Тогда
		
		Предупреждение("Не указана дата конца отчета");
					   
		ПроверкаПройдена=Ложь;
	
	КонецЕсли;
		
	Возврат ПроверкаПройдена;
	
КонецФункции // ПроверкаПериода()

Процедура СформироватьОтчет(ДокументРезультат, ВидОтчета) Экспорт
	
	Если НЕ ПроверкаПериода() Тогда
		Возврат;
	КонецЕсли;
	
	Если Организация.Пустая() Тогда
		Предупреждение("Не выбрана организация");
		Возврат;
	КонецЕсли;
	
	Если Валюта.Пустая() Тогда
		Предупреждение("Не выбрана валюта");
		Возврат;
	КонецЕсли;
    	
	ДокументРезультат.Очистить();
	
	Если ВидОтчета = "Журнал регистрации приходных ордеров" Тогда
		СформироватьЖурналРегистрацииПриходных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Журнал регистрации расходных ордеров" Тогда
		СформироватьЖурналРегистрацииРасходных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Книга учета принятых и выданных денег" Тогда
		СформироватьКнигаПринятыхВыданных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Журнал регистрации приходных и расходных ордеров" Тогда
		СформироватьЖурналРегистрацииРасходныхИПриходных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Кассовая книга" Тогда
		СформироватьКассоваяКнига(ДокументРезультат);		
	КонецЕсли;	
	
			
КонецПроцедуры // СформироватьРезультат()

НП =  Новый НастройкаПериода;
мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");

#КонецЕсли