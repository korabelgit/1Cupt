#Если Клиент Тогда
	
Перем ВысотаЗаголовка Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Процедура СформироватьОтчет(ДокументРезультат, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();
	
	Макет     = ПолучитьМакет("Макет");
	НаДату    = ?(НЕ ЗначениеЗаполнено(ДатаСведений), РабочаяДата, ДатаСведений);
	НаДату    = КонецДня(НаДату);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ДатаСведений = Формат(Год(НаДату),"ЧГ=0");
	
	ДокументРезультат.Вывести(ОбластьМакета);
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
	
	Если ТолькоЗаголовок Тогда
		
		Возврат
		
	КонецЕсли;
	
	ЗапросСтоимостьБалансовая = Новый Запрос;
	
	Если Год(НаДату) > 2011 Тогда
		УсловиеОрганизация = ?(ЗначениеЗаполнено(Организация), " И Организация = &Организация", "");
		УсловиеОрганизацияБезИ = ?(ЗначениеЗаполнено(Организация), " Организация = &Организация", "");
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ХозрасчетныйОстатки.СуммаНУОстаток - ЕСТЬNULL(АмортизацияОстатки.СуммаНУОстатокКт, 0)) КАК СтоимостьНачПериода
		|ИЗ
	 	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоПериода, Счет В ИЕРАРХИИ (&Счет10_11), &СубконтоОС, НалоговоеНазначение <> &НеоблНехоз " + УсловиеОрганизация + ") КАК ХозрасчетныйОстатки
	 	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоПериода, Счет В ИЕРАРХИИ (&Счет13), , НалоговоеНазначение <> &НеоблНехоз " + УсловиеОрганизация + ") КАК АмортизацияОстатки
		|		ПО ХозрасчетныйОстатки.Субконто1 = АмортизацияОстатки.Субконто1 И ХозрасчетныйОстатки.НалоговоеНазначение = АмортизацияОстатки.НалоговоеНазначение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(&НачалоПериода, " + УсловиеОрганизацияБезИ + ") КАК СведенияОбОС
		|		ПО (СведенияОбОС.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1)
		|ГДЕ 
		|	(НЕ ЕстьNULL(СведенияОбОС.НалоговаяГруппаОС, 0) В (&НеАмортизируемыеГруппыОС))
		|";
	Иначе	
		УсловиеОрганизация = ?(ЗначениеЗаполнено(Организация), "И Организация = &Организация", "");	
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НалоговыйОстаткиИОбороты.Счет = &СчетОСО
		|						ИЛИ НалоговыйОстаткиИОбороты.Счет = &СчетОСГ
		|					ТОГДА НалоговыйОстаткиИОбороты.СуммаНачальныйОстатокДт
		|			КОНЕЦ), 0) КАК СтоимостьНачПериода,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НалоговыйОстаткиИОбороты.Счет = &СчетВР
		|						И НалоговыйОстаткиИОбороты.Субконто2 = &СтатьяМодернизации
		|					ТОГДА НалоговыйОстаткиИОбороты.СуммаОборотДт
		|			КОНЕЦ), 0) КАК ЗатратыНаРемонт
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецКвартала1,
		|			Период,
		|			ДвиженияИГраницыПериода,
		|			Счет = &СчетВР
		|				ИЛИ Счет = &СчетОСО
		|				ИЛИ Счет = &СчетОСГ,
		|			,
	 	|			(НЕ Субконто1 = &НеоблВНД) " + УсловиеОрганизация + ") КАК НалоговыйОстаткиИОбороты";
	КонецЕсли;	
	
	ЗапросСтоимостьБалансовая.Текст = ТекстЗапроса;
	
	НачалоПериода 	= НачалоГода(НаДату);
	КонецПериода 	= КонецГода(НаДату);
	
	Если Год(НаДату) > 2011 Тогда
		СписокСчет10_11 = Новый СписокЗначений;
		СписокСчет10_11.Добавить(Планысчетов.Хозрасчетный.ОсновныеСредства);
		СписокСчет10_11.Добавить(Планысчетов.Хозрасчетный.ДругиеНеоборотныеМатериальныеАктивыГруппа);
		ЗапросСтоимостьБалансовая.УстановитьПараметр("Счет10_11",	СписокСчет10_11);
		ЗапросСтоимостьБалансовая.УстановитьПараметр("Счет13",		ПланыСчетов.Хозрасчетный.ИзносАмортизацияНеоборотныхАктивов);
		ЗапросСтоимостьБалансовая.УстановитьПараметр("НеоблНехоз", 	Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		
		ЗапросСтоимостьБалансовая.УстановитьПараметр("СубконтоОС", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		
		НеАмортизируемыеГруппыОС = Новый Массив();
		НеАмортизируемыеГруппыОС.Добавить(Справочники.НалоговыеГруппыОсновныхСредств.ОСГруппа1);
		НеАмортизируемыеГруппыОС.Добавить(Справочники.НалоговыеГруппыОсновныхСредств.ОСГруппа13);
 		НеАмортизируемыеГруппыОС.Добавить(Справочники.НалоговыеГруппыОсновныхСредств.ОСВременнаяНалоговаяРазница);
		НеАмортизируемыеГруппыОС.Добавить(Справочники.НалоговыеГруппыОсновныхСредств.ОСГруппа10);
		НеАмортизируемыеГруппыОС.Добавить(Справочники.НалоговыеГруппыОсновныхСредств.ОСГруппа11);
		НеАмортизируемыеГруппыОС.Добавить();
		ЗапросСтоимостьБалансовая.УстановитьПараметр("НеАмортизируемыеГруппыОС", НеАмортизируемыеГруппыОС);
		
	Иначе
		СчетОСГ = ПланыСчетов.Налоговый.ОсновныеСредстваУчетПоГруппам;
		СчетОСО = ПланыСчетов.Налоговый.ОсновныеСредстваУчетПоОбъектам;
		ЗапросСтоимостьБалансовая.УстановитьПараметр("СчетОСГ", СчетОСГ);
		ЗапросСтоимостьБалансовая.УстановитьПараметр("СчетОСО", СчетОСО);
		
		СчетВР = ПланыСчетов.Налоговый.ВаловыеРасходы;
		ЗапросСтоимостьБалансовая.УстановитьПараметр("СчетВР", СчетВР);
		
		СтруктураПараметров = Новый Структура("УдалитьСтатьяВаловыхРасходовПоУлучшениюОС");
		СрезПоследнихПараметрыНалоговогоУчета = РегистрыСведений.ПараметрыНалоговогоУчета.СрезПоследних(КонецПериода,СтруктураПараметров);
		СтатьяМодернизации = ?(СрезПоследнихПараметрыНалоговогоУчета.Количество() = 0, 0, СрезПоследнихПараметрыНалоговогоУчета[0].УдалитьСтатьяВаловыхРасходовПоУлучшениюОС);
		
		ЗапросСтоимостьБалансовая.УстановитьПараметр("СтатьяМодернизации", СтатьяМодернизации);
		
		ЗапросСтоимостьБалансовая.УстановитьПараметр("НеоблВНД", Справочники.ВидыНалоговойДеятельности.НеОблагаемая);
		
		КонецКвартала1 = КонецКвартала(НачалоГода(НаДату));
		ЗапросСтоимостьБалансовая.УстановитьПараметр("КонецКвартала1", КонецКвартала1);
		
	КонецЕсли;
	
	ЗапросСтоимостьБалансовая.УстановитьПараметр("Организация", Организация);
	
	ЗапросСтоимостьБалансовая.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	Если Год(НаДату) > 2011 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("СуммыЗатрат");
	Иначе	
		ОбластьМакета = Макет.ПолучитьОбласть("СуммыЗатрат2011");
	КонецЕсли;	
	
	СтоимостьБалансоваяВыборка = ЗапросСтоимостьБалансовая.Выполнить().Выбрать();
	
	Если СтоимостьБалансоваяВыборка.Следующий() Тогда
		
		СтоимостьНачПериода = ?(СтоимостьБалансоваяВыборка.СтоимостьНачПериода = Null, 0, СтоимостьБалансоваяВыборка.СтоимостьНачПериода);
		ОбластьМакета.Параметры.СтоимостьНачПериода = СтоимостьНачПериода;
		
		СтруктураПараметров = Новый Структура("ГодовойПроцентОтнесенияНаРасходыСуммУлучшенияОС");
		СрезПоследнихПараметрыНалоговогоУчета = РегистрыСведений.ПараметрыНалоговогоУчета.СрезПоследних(КонецПериода,СтруктураПараметров);
		НормаЛимита = ?(СрезПоследнихПараметрыНалоговогоУчета.Количество() = 0, 0, СрезПоследнихПараметрыНалоговогоУчета[0].ГодовойПроцентОтнесенияНаРасходыСуммУлучшенияОС);
		
		СуммаЛимита = СтоимостьНачПериода * НормаЛимита / 100;
		
		СуммаЗатратНаРемонт1кв2011 = 0;
		
		Если Год(НаДату) = 2011 Тогда
			СуммаЗатратНаРемонт1кв2011 = ?(СтоимостьБалансоваяВыборка.ЗатратыНаРемонт = Null, 0, СтоимостьБалансоваяВыборка.ЗатратыНаРемонт);
			
			ОбластьМакета.Параметры.СуммаЗатратНаРемонт1кв2011 = СуммаЗатратНаРемонт1кв2011;
		КонецЕсли;	
		
		СуммаЛимита = Макс(0, СуммаЛимита - СуммаЗатратНаРемонт1кв2011);	
		ОбластьМакета.Параметры.СуммаЛимита = СуммаЛимита;
		
	Иначе
		
		ОбластьМакета.Параметры.СтоимостьНачПериода = 0;
		ОбластьМакета.Параметры.СуммаЛимита = 0;
		
	КонецЕсли;
	
	Выборка = ЗаполнитьНачальныеНастройки();
	Если Выборка.Следующий() Тогда
		ОбластьМакета.Параметры.СуммаОтнесенная = Выборка.Сумма;
		ОбластьМакета.Параметры.СуммаОставшаяся = ОбластьМакета.Параметры.СуммаЛимита - Выборка.Сумма;
	Иначе 
		ОбластьМакета.Параметры.СуммаОтнесенная = 0;
		ОбластьМакета.Параметры.СуммаОставшаяся = ОбластьМакета.Параметры.СуммаЛимита;
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьМакета);
	
	Если ВыводитьРасшифровкуСуммы Тогда
		ОбластьРасшифровкаЗаголовок = Макет.ПолучитьОбласть("РасшифровкаЗаголовок");
		ВыводитьРасшифровкаЗаголовок = Истина;
	Иначе
		Возврат;
	КонецЕсли;
			
	Пока Выборка.Следующий() Цикл
		Если ВыводитьРасшифровкаЗаголовок Тогда
			ДокументРезультат.Вывести(ОбластьРасшифровкаЗаголовок);
			ВыводитьРасшифровкаЗаголовок = Ложь;
		КонецЕсли;
		СтрокаМакета = Макет.ПолучитьОбласть("Строка");
		СтрокаМакета.Параметры.Заполнить(Выборка);
		ДокументРезультат.Вывести(СтрокаМакета);

	КонецЦикла;
	
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	ДокументРезультат.ТолькоПросмотр                = Истина;
	ДокументРезультат.ВерхнийКолонтитул.Выводить    = Истина;
	ДокументРезультат.НижнийКолонтитул.Выводить     = Истина;
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1, 2, ДокументРезультат.ВысотаТаблицы,
																	  ДокументРезультат.ШиринаТаблицы);
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетЗатратНаУлучшениеОС";
	
КонецПроцедуры // СформироватьОтчет()
																									
// Процедура - заполняет начальные настройки заполнения
//
Функция ЗаполнитьНачальныеНастройки() Экспорт
	
	УсловиеРегистратор = ?(ЗначениеЗаполнено(ДокументИсключения),"И ХозрасчетныйДвиженияССубконто.Регистратор <> &Регистратор", "");	
	УсловиеОрганизация = ?(ЗначениеЗаполнено(Организация)		,"И ХозрасчетныйДвиженияССубконто.Организация = &Организация", "");	
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК СтатьяЗатрат
	|ПОМЕСТИТЬ СтатьиЗатратСписок
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.СтатьяДекларацииПоНалогуНаПрибыль В(&СтатьиДекларации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйДвиженияССубконто.Регистратор) КАК ПредставлениеРегистратор,
	|	СУММА(ХозрасчетныйДвиженияССубконто.СуммаНУДт) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(&НачалоПериода, &КонецПериода, Активность И СчетДт В ИЕРАРХИИ (&СчетаЗатрат) И ВидСубконто1 = &ВидСубконтоСтатьяЗатрат 
	|					И Субконто1 В
	|					(ВЫБРАТЬ
	|						СтатьиЗатратСписок.СтатьяЗатрат
	|					ИЗ
	|						СтатьиЗатратСписок КАК СтатьиЗатратСписок) И НЕ (СчетДт В ИЕРАРХИИ (&СчетаЗатрат) И СчетКт В ИЕРАРХИИ (&СчетаЗатрат))
	|			) КАК ХозрасчетныйДвиженияССубконто
	|ГДЕ
	|	ИСТИНА
	|	" + УсловиеОрганизация + "
	|	" + УсловиеРегистратор + "
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.Регистратор
	|
	|   ИТОГИ
	|   СУММА(Сумма)
	|ПО
	|   ОБЩИЕ";
	СчетаЗатрат = новый СписокЗначений;
	
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы); // 91
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.АдминистративныеРасходы); // 92
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаСбыт); // 93
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ДругиеЗатратыОперационнойДеятельности); // 94
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство); // 231
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства); // 232
	
	Запрос.УстановитьПараметр("СчетаЗатрат", СчетаЗатрат);
	
	Запрос.УстановитьПараметр("ВидСубконтоСтатьяЗатрат", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	
	СтатьиДекларации = новый СписокЗначений;
	
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_АМ_Ремонт_ЗВ); // ОПЗ: Улучшение и ремонт ОС общепроизводственного назначения (до 01.01.2012 - 06.1.5.2) // 06.1.5.2 Улучшение и ремонт ОС общепроизводственного назначения
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_АМ_Ремонт_АВ); // из 06.1: Улучшение и ремонт ОС общехозяйственного использования (до 01.01.2012 - 06.2.3.2) // 06.2.3.2 Улучшение и ремонт ОС общехозяйственного использования
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_АМ_Ремонт_ВЗ); // из 06.2: Улучшение и ремонт ОС, связанных со сбытом продукции, выполнением работ, оказанием услуг (до 01.01.2012 - 06.3.9.2) // 06.3.9.2 Улучшение и ремонт ОС, связанных со сбытом продукции, выполнением работ, оказанием услуг
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_АМ_Ремонт_ИВ); // 06.4.38 Сумма расходов на улучшение и ремонт необоротных активов, переданных в оперативную аренду (до 01.01.2012 - 06.5.39) // 06.5.39 Сумма расходов на улучшение и ремонт необоротных активов, переданных в оперативную аренду
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_ПЗ_Ремонт); // Прямые производственные затраты: Улучшение и ремонт ОС производственного оборудования
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_АМ_Ремонт_ИВ_Информация); // из 06.4.36: Улучшение и ремонт ОС, используемых для информационного обеспечения хозяйственной деятельности
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_АМ_Ремонт_ИВ_Природоохранные); // из 06.4. 8: Улучшение и ремонт фондов приридоохранного назначения
	СтатьиДекларации.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_АМ_Ремонт_ИВ_Аренда); // из 06.4.19: Улучшение и ремонт арендованных ОС в пределах 10% балансовой стоимости
	
	Запрос.УстановитьПараметр("СтатьиДекларации", СтатьиДекларации);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ДатаСведений));
	Запрос.УстановитьПараметр("КонецПериода",  КонецГода(ДатаСведений));
	
	Запрос.УстановитьПараметр("Регистратор", ДокументИсключения);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выбрать();
	
	
КонецФункции // ЗаполнитьНачальныеНастройки()


Процедура Настроить(ДокументРегистратор) Экспорт
	
	ДокументИсключения  = ДокументРегистратор;
	ДатаСведений 		= ДокументИсключения.Дата;
	Организация  		= ДокументИсключения.Организация
	
КонецПроцедуры
#КонецЕсли
