#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит таблицу значений - состав показателей отчета
Перем мТаблицаСоставПоказателей Экспорт;

// Хранит структуру - состав показателей отчета,
// значение которых автоматически заполняется по учетным данным.
Перем мСтруктураВариантыЗаполнения Экспорт;

// Хранит структуру многостраничных разделов
Перем мСтруктураМногостраничныхРазделов Экспорт;

// Хранит дерево значений - структуру листов отчета.
Перем мДеревоСтраницОтчета Экспорт;

// Хранит признак выбора печатных листов
Перем мЕстьВыбранные Экспорт;

// Хранит имя выбранной формы отчета
Перем мВыбраннаяФорма Экспорт;

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт;

// Хранит ссылку на документ РегламентированныйОтчет,
// хранящий данные отчета
Перем мСохраненныйДок Экспорт;

// Следующие переменные хранят границы
// периода построения отчета
Перем мДатаНачалаПериодаОтчета Экспорт;
Перем мДатаКонцаПериодаОтчета  Экспорт;

Перем мТаблицаФормОтчета Экспорт;

Перем мПолноеИмяФайлаВнешнейОбработки Экспорт;
Перем мЗаписьЗапрещена                Экспорт;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует дерево значений - структуру страниц отчета,
// содержащей настройки показа страниц, вывода на печать и выгрузки в ИМНС.
//  требуется редакция по наименованиям ПолейТабличныхДокументов
//функция возвращает таблицу с данными для ОС для заполнения примечаний к финансовой отчетности (формы № 5)
Функция СформироватьЗапросДляОС(НачалоПериода,КонецПериода,Организация) Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НачалоПериода", НачалоПериода);
	СтруктураПараметров.Вставить("КонецПериода" ,КонецПериода);
	СтруктураПараметров.Вставить("КонецПериодаГраница", Новый Граница(КонецПериода, ВидГраницы.Включая));
	СтруктураПараметров.Вставить("Организация"  , Организация);
	
	Запрос = Новый Запрос();
	
	Для каждого КлючЗначение Из СтруктураПараметров Цикл
	
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);	
	
	КонецЦикла;
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	""СписокОС"" КАК ТипЗаписи,
	|	НачислениеАмортизации.ОсновноеСредство КАК Поле
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизацию
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	""СписокОС"" КАК ТипЗаписи,
	|	НачислениеАмортизации.ОсновноеСредство КАК Поле
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизацию
	|	И НачислениеАмортизации.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НачислениеАмортизации.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаУчета"",
	|	СчетаБухгалтерскогоУчета.СчетУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК СчетаБухгалтерскогоУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаАмортизации"",
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК СчетаБухгалтерскогоУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаУчета"",
	|	СчетаБухгалтерскогоУчета.СчетУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчета
	|ГДЕ
	|	СчетаБухгалтерскогоУчета.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетаБухгалтерскогоУчета.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаАмортизации"",
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчета
	|ГДЕ
	|	СчетаБухгалтерскогоУчета.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетаБухгалтерскогоУчета.Организация = &Организация
	|
	|ИТОГИ ПО
	|	ТипЗаписи";
	
	ДеревоРезультатов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураПараметров.Вставить("СписокОС"                      , Неопределено);
	СтруктураПараметров.Вставить("СчетаУчета"                    , Неопределено);
	СтруктураПараметров.Вставить("СчетаАмортизации"              , Неопределено);
	
	Для каждого СтрокаТипаЗаписи Из ДеревоРезультатов.Строки Цикл
	
		СтруктураПараметров.Вставить(СтрокаТипаЗаписи.ТипЗаписи, 
		                             СтрокаТипаЗаписи.Строки.ВыгрузитьКолонку("Поле"));	
	
	КонецЦикла;
								 
		Запрос = Новый Запрос();
	
	Для каждого КлючЗначение Из СтруктураПараметров Цикл
	
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);	
	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПервоначальныеСведения.ОсновноеСредство                                       КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчета.СчетУчета                                            КАК СчетУчета,
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации                            КАК СчетНачисленияАмортизации,
	|	ЕСТЬNULL(СтоимостьОстатки.СуммаОстатокДт, 0)                                  КАК СтоимостьНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОстаткиНач.СуммаОстатокКт, 0)                             КАК АмортизацияНачальныйОстаток,
    |	ЕСТЬNULL(НачисленнаяАмортизация.СуммаОборот, 0)                               КАК АмортизацияОборот,
	|	ЕСТЬNULL(ИзменениеСтоимостиПлюс.СуммаОборот, 0)                               КАК ИзменениеСтоимостиДт,
	|	ЕСТЬNULL(СписаннаяАмортизация.СуммаОборот, 0)                                 КАК АмортизацияОборотДт,
	|	ЕСТЬNULL(ИзменениеСтоимостиМинус.СуммаОборот, 0)                              КАК ИзменениеСтоимостиКт,
    |	ЕСТЬNULL(АмортизацияОстаткиКон.СуммаОстатокКт, 0)                             КАК АмортизацияКонечныйОстаток,
	|	ЕСТЬNULL(СтоимостьОстаткиКон.СуммаОстатокДт, 0)                               КАК СтоимостьКонечныйОстаток
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|		            &КонецПериодаГраница,
	|		            Организация = &Организация
	|		            И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &НачалоПериода,
	|		                       Счет В (&СчетаУчета),
	|		                       &СубконтоОС,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокОС)) КАК СтоимостьОстатки
	|		ПО ПервоначальныеСведения.ОсновноеСредство = СтоимостьОстатки.Субконто1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &КонецПериодаГраница,
	|		                       Счет В (&СчетаУчета),
	|		                       &СубконтоОС,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокОС)) КАК СтоимостьОстаткиКон
	|		ПО ПервоначальныеСведения.ОсновноеСредство = СтоимостьОстаткиКон.Субконто1
    |
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &НачалоПериода,
	|		                       Счет В (&СчетаАмортизации),
	|		                       &СубконтоОС,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокОС)) КАК АмортизацияОстаткиНач
	|		ПО ПервоначальныеСведения.ОсновноеСредство = АмортизацияОстаткиНач.Субконто1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (СчетДт В (&СчетаУчета)),&СубконтоОС,
	|		                       Не СчетКт В (&СчетаУчета),  ,
	|		                       Организация = &Организация
	|		                       И СубконтоДт1 В (&СписокОС)
	|		                       ) КАК ИзменениеСтоимостиПлюс
	|		ПО ПервоначальныеСведения.ОсновноеСредство = ИзменениеСтоимостиПлюс.СубконтоДт1
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (НЕ СчетДт В (&СчетаАмортизации)), ,
	|		                       СчетКт В (&СчетаАмортизации),
	|		                       &СубконтоОС,
	|		                       Организация = &Организация
	|		                       И СубконтоКт1 В (&СписокОС)
	|		                       ) КАК НачисленнаяАмортизация
	|		ПО ПервоначальныеСведения.ОсновноеСредство = НачисленнаяАмортизация.СубконтоКт1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (Не СчетДт В (&СчетаУчета)), ,
	|		                       СчетКт В (&СчетаУчета),
	|		                       &СубконтоОС,
	|		                       Организация = &Организация
	|		                       И СубконтоКт1 В (&СписокОС)
	|		                       ) КАК ИзменениеСтоимостиМинус
	|		ПО ПервоначальныеСведения.ОсновноеСредство = ИзменениеСтоимостиМинус.СубконтоКт1
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (СчетДт В (&СчетаАмортизации)),&СубконтоОС,
	|		                       Не СчетКт В (&СчетаАмортизации), ,
	|		                       Организация = &Организация
	|		                       И СубконтоДт1 В (&СписокОС)
	|		                       ) КАК СписаннаяАмортизация
	|		ПО ПервоначальныеСведения.ОсновноеСредство = СписаннаяАмортизация.СубконтоДт1
    |
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &КонецПериодаГраница,
	|		                       Счет В (&СчетаАмортизации),
	|		                       &СубконтоОС,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокОС)) КАК АмортизацияОстаткиКон
	|		ПО ПервоначальныеСведения.ОсновноеСредство = АмортизацияОстаткиКон.Субконто1
	|
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПервых(
	|		                    ,
	|		                    Организация = &Организация
	|		                    И ОсновноеСредство В (&СписокОС)) КАК СчетаБухгалтерскогоУчета
	|		ПО ПервоначальныеСведения.ОсновноеСредство = СчетаБухгалтерскогоУчета.ОсновноеСредство";

	
	ТаблицаИзносаОС = Запрос.Выполнить().Выгрузить();
	
	
	// внесем в таблицу данные по малоценным необор. активам, учитываемым количествоенно
	Запрос.УстановитьПараметр("СубконтоНоменклатура", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);	
	
	СчетаУчета = Новый Массив();
	СчетаУчета.Добавить(ПланыСчетов.Хозрасчетный.БиблиотечныеФондыКоличественно);
	СчетаУчета.Добавить(ПланыСчетов.Хозрасчетный.МалоценныеНеоборотныеМатериальныеАктивыКоличественно);
	Запрос.УстановитьПараметр("СчетаУчета",		   	  СчетаУчета);	
	Запрос.УстановитьПараметр("СчетаАмортизации", 	  ПланыСчетов.Хозрасчетный.ИзносДругихНеоборотныхМатериальныхАктивовКоличественно);	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.ОсновноеСредство КАК ОсновноеСредство,
	               |	МАКСИМУМ(ВложенныйЗапрос.СчетУчета) КАК СчетУчета,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СтоимостьНачальныйОстаток, 0)) КАК СтоимостьНачальныйОстаток,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.АмортизацияНачальныйОстаток, 0)) КАК АмортизацияНачальныйОстаток,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.АмортизацияОборот, 0)) КАК АмортизацияОборот,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.АмортизацияОборотДт, 0)) КАК АмортизацияОборотДт,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.АмортизацияКонечныйОстаток, 0)) КАК АмортизацияКонечныйОстаток,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.СтоимостьКонечныйОстаток, 0)) КАК СтоимостьКонечныйОстаток,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ИзменениеСтоимостиДт, 0)) КАК ИзменениеСтоимостиДт,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ИзменениеСтоимостиКт, 0)) КАК ИзменениеСтоимостиКт
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		СтоимостьОстатки.Субконто1 КАК ОсновноеСредство,
	               |		СтоимостьОстатки.Счет КАК СчетУчета,
	               |		СтоимостьОстатки.СуммаОстатокДт КАК СтоимостьНачальныйОстаток,
	               |		0 КАК АмортизацияНачальныйОстаток,
	               |		0 КАК АмортизацияОборот,
	               |		0 КАК АмортизацияОборотДт,
	               |		0 КАК АмортизацияКонечныйОстаток,
	               |		0 КАК СтоимостьКонечныйОстаток,
	               |		0 КАК ИзменениеСтоимостиДт,
	               |		0 КАК ИзменениеСтоимостиКт
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоПериода, Счет В (&СчетаУчета), &СубконтоНоменклатура, Организация = &Организация) КАК СтоимостьОстатки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		СтоимостьОстаткиКон.Субконто1,
	               |		СтоимостьОстаткиКон.Счет,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		СтоимостьОстаткиКон.СуммаОстатокДт,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериодаГраница, Счет В (&СчетаУчета), &СубконтоНоменклатура, Организация = &Организация) КАК СтоимостьОстаткиКон
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		АмортизацияОстаткиНач.Субконто1,
	               |		NULL,
	               |		0,
	               |		АмортизацияОстаткиНач.СуммаОстатокКт,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоПериода, Счет В (&СчетаАмортизации), &СубконтоНоменклатура, Организация = &Организация) КАК АмортизацияОстаткиНач
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		НачисленнаяАмортизация.СубконтоКт1,
	               |		NULL,
	               |		0,
	               |		0,
	               |		НачисленнаяАмортизация.СуммаОборот,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериодаГраница, , НЕ СчетДт В (&СчетаАмортизации), , СчетКт В (&СчетаАмортизации), &СубконтоНоменклатура, Организация = &Организация) КАК НачисленнаяАмортизация
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		СписаннаяАмортизация.СубконтоДт1,
	               |		NULL,
	               |		0,
	               |		0,
	               |		0,
	               |		СписаннаяАмортизация.СуммаОборот,
	               |		0,
	               |		0,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериодаГраница, , СчетДт В (&СчетаАмортизации), &СубконтоНоменклатура, НЕ СчетКт В (&СчетаАмортизации), , Организация = &Организация) КАК СписаннаяАмортизация
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		АмортизацияОстаткиКон.Субконто1,
	               |		NULL,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		АмортизацияОстаткиКон.СуммаОстатокКт,
	               |		0,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериодаГраница, Счет В (&СчетаАмортизации), &СубконтоНоменклатура, Организация = &Организация) КАК АмортизацияОстаткиКон
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ИзменениеСтоимостиПлюс.СубконтоДт1,
	               |		NULL,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		ИзменениеСтоимостиПлюс.СуммаОборот,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериодаГраница, , СчетДт В (&СчетаУчета), &СубконтоНоменклатура, НЕ СчетКт В (&СчетаУчета), , Организация = &Организация) КАК ИзменениеСтоимостиПлюс
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ИзменениеСтоимостиМинус.СубконтоКт1,
	               |		NULL,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		ИзменениеСтоимостиМинус.СуммаОборот
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериодаГраница, , НЕ СчетДт В (&СчетаУчета), , СчетКт В (&СчетаУчета), &СубконтоНоменклатура, Организация = &Организация) КАК ИзменениеСтоимостиМинус) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.ОсновноеСредство";
				   
	// разблокируем тип значения у колонки "Основное средство"				   
	ТаблицаИзносаОС.Колонки.ОсновноеСредство.Имя = "_ОсновноеСредство";			   			   
	ТаблицаИзносаОС.Колонки.Добавить("ОсновноеСредство");			   
	ТаблицаИзносаОС.ЗагрузитьКолонку(ТаблицаИзносаОС.ВыгрузитьКолонку("_ОсновноеСредство"), "ОсновноеСредство");
	
	ВыборкаМНМА = Запрос.Выполнить().Выбрать();
	Пока ВыборкаМНМА.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаИзносаОС.Добавить(), ВыборкаМНМА);
	КонецЦикла;
	
	Возврат ТаблицаИзносаОС;
	
КонецФункции

//функция возвращает таблицу с данными для НМА для заполнения примечаний к финансовой отчетности (формы № 5)
Функция СформироватьЗапросДляНМА(НачалоПериода,КонецПериода,Организация) Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НачалоПериода", НачалоПериода);
	СтруктураПараметров.Вставить("КонецПериода" ,КонецПериода);
	СтруктураПараметров.Вставить("КонецПериодаГраница", Новый Граница(КонецПериода, ВидГраницы.Включая));
	СтруктураПараметров.Вставить("Организация"  , Организация);

	
	Запрос = Новый Запрос();
	
	Для каждого КлючЗначение Из СтруктураПараметров Цикл
	
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);	
	
	КонецЦикла;
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	""СписокНМА""                           КАК ТипЗаписи,
	|	НачислениеАмортизации.НематериальныйАктив КАК Поле
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|		            &НачалоПериода,
	|		            Организация = &Организация)
	|		            КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизацию
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаУчета"",
	|	СчетаБухгалтерскогоУчета.СчетУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|		            &НачалоПериода,
	|		            Организация = &Организация)
	|		            КАК СчетаБухгалтерскогоУчета
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаАмортизации"",
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|		            &НачалоПериода,
	|		            Организация = &Организация)
	|		            КАК СчетаБухгалтерскогоУчета
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	""СписокНМА""                           КАК ТипЗаписи,
	|	НачислениеАмортизации.НематериальныйАктив КАК Поле
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет
	|		            КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизацию
	|	И НачислениеАмортизации.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НачислениеАмортизации.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаУчета"",
	|	СчетаБухгалтерскогоУчета.СчетУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА
	|		            КАК СчетаБухгалтерскогоУчета
	|ГДЕ
	|	СчетаБухгалтерскогоУчета.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетаБухгалтерскогоУчета.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СчетаАмортизации"",
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА
	|		            КАК СчетаБухгалтерскогоУчета
	|ГДЕ
	|	СчетаБухгалтерскогоУчета.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетаБухгалтерскогоУчета.Организация = &Организация
	|
	|ИТОГИ ПО
	|	ТипЗаписи";
	
	ДеревоРезультатов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураПараметров.Вставить("СписокНМА"                     , Неопределено);
	СтруктураПараметров.Вставить("СчетаУчета"                    , Неопределено);
	СтруктураПараметров.Вставить("СчетаАмортизации"              , Неопределено);
	
	Для каждого СтрокаТипаЗаписи Из ДеревоРезультатов.Строки Цикл
	
		СтруктураПараметров.Вставить(СтрокаТипаЗаписи.ТипЗаписи, 
		                             СтрокаТипаЗаписи.Строки.ВыгрузитьКолонку("Поле"));	
	
	КонецЦикла;
								 
	Запрос = Новый Запрос();
	
	Для каждого КлючЗначение Из СтруктураПараметров Цикл
	
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);	
	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СубконтоНМА", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПервоначальныеСведения.НематериальныйАктив                                    КАК НематериальныйАктив,
	|	СчетаБухгалтерскогоУчета.СчетУчета                                            КАК СчетУчета,
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации                            КАК СчетНачисленияАмортизации,
	|	ЕСТЬNULL(СтоимостьОстатки.СуммаОстатокДт, 0)                                  КАК СтоимостьНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОстаткиНач.СуммаОстатокКт, 0)                             КАК АмортизацияНачальныйОстаток,
    |	ЕСТЬNULL(НачисленнаяАмортизация.СуммаОборот, 0)                               КАК АмортизацияОборот,
	|	ЕСТЬNULL(ИзменениеСтоимостиПлюс.СуммаОборот, 0)                               КАК ИзменениеСтоимостиДт,
	|	ЕСТЬNULL(СписаннаяАмортизация.СуммаОборот, 0)                                 КАК АмортизацияОборотДт,
	|	ЕСТЬNULL(ИзменениеСтоимостиМинус.СуммаОборот, 0)                              КАК ИзменениеСтоимостиКт,
    |	ЕСТЬNULL(АмортизацияОстаткиКон.СуммаОстатокКт, 0)                             КАК АмортизацияКонечныйОстаток,
	|	ЕСТЬNULL(СтоимостьОстаткиКон.СуммаОстатокДт, 0)                               КАК СтоимостьКонечныйОстаток
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|		            &КонецПериодаГраница,
	|		            Организация = &Организация
	|		            И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &НачалоПериода,
	|		                       Счет В (&СчетаУчета),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокНМА)) КАК СтоимостьОстатки
	|		ПО ПервоначальныеСведения.НематериальныйАктив = СтоимостьОстатки.Субконто1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &КонецПериодаГраница,
	|		                       Счет В (&СчетаУчета),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокНМА)) КАК СтоимостьОстаткиКон
	|		ПО ПервоначальныеСведения.НематериальныйАктив = СтоимостьОстаткиКон.Субконто1
    |
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &НачалоПериода,
	|		                       Счет В (&СчетаАмортизации),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокНМА)) КАК АмортизацияОстаткиНач
	|		ПО ПервоначальныеСведения.НематериальныйАктив = АмортизацияОстаткиНач.Субконто1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (СчетДт В (&СчетаУчета)), ,
	|		                       Не СчетКт В (&СчетаУчета),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И СубконтоДт1 В (&СписокНМА)
	|		                       ) КАК ИзменениеСтоимостиПлюс
	|		ПО ПервоначальныеСведения.НематериальныйАктив = ИзменениеСтоимостиПлюс.СубконтоДт1
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (НЕ СчетДт В (&СчетаАмортизации)), ,
	|		                       СчетКт В (&СчетаАмортизации),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И СубконтоКт1 В (&СписокНМА)
	|		                       ) КАК НачисленнаяАмортизация
	|		ПО ПервоначальныеСведения.НематериальныйАктив = НачисленнаяАмортизация.СубконтоКт1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (Не СчетДт В (&СчетаУчета)), ,
	|		                       СчетКт В (&СчетаУчета),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И СубконтоКт1 В (&СписокНМА)
	|		                       ) КАК ИзменениеСтоимостиМинус
	|		ПО ПервоначальныеСведения.НематериальныйАктив = ИзменениеСтоимостиМинус.СубконтоКт1
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|		                       &НачалоПериода,
	|		                       &КонецПериодаГраница, ,
	|		                       (СчетДт В (&СчетаАмортизации)), ,
	|		                       Не СчетКт В (&СчетаАмортизации),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И СубконтоДт1 В (&СписокНМА)
	|		                       ) КАК СписаннаяАмортизация
	|		ПО ПервоначальныеСведения.НематериальныйАктив = СписаннаяАмортизация.СубконтоДт1
    |
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		                       &КонецПериодаГраница,
	|		                       Счет В (&СчетаАмортизации),
	|		                       &СубконтоНМА,
	|		                       Организация = &Организация
	|		                       И Субконто1 В (&СписокНМА)) КАК АмортизацияОстаткиКон
	|		ПО ПервоначальныеСведения.НематериальныйАктив = АмортизацияОстаткиКон.Субконто1
	|
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|		                    &КонецПериодаГраница,
	|		                    Организация = &Организация
	|		                    И НематериальныйАктив В (&СписокНМА)) КАК СчетаБухгалтерскогоУчета
	|		ПО ПервоначальныеСведения.НематериальныйАктив = СчетаБухгалтерскогоУчета.НематериальныйАктив";

    ТаблицаИзносаНМА = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаИзносаНМА;
	
КонецФункции




////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

МассивТипов = Новый Массив; 
МассивТипов.Добавить(Тип("Строка"));
ОписаниеТиповСтрока15  = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыСтроки(15, ДопустимаяДлина.Переменная));

МассивТипов = Новый Массив; 
МассивТипов.Добавить(Тип("Строка"));
ОписаниеТиповСтрока254 = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыСтроки(254, ДопустимаяДлина.Переменная));

МассивБулево = Новый Массив;
МассивБулево.Добавить(Тип("Булево"));
ОписаниеТиповБулево    = Новый ОписаниеТипов(МассивБулево);

// Таблица значений хранит состав показателей отчета.
// В колонках таблицы хранятся следующие данные:
//    - имя поля табличного документа;
//    - код показатели по составу показателей;
//    - код показателя по форме (имя области табличного документа);
//    - признак многострочности;
//    - тип данных показателя.
//
мТаблицаСоставПоказателей         = Новый ТаблицаЗначений;
мТаблицаСоставПоказателей.Колонки.Добавить("ИмяПоляТаблДокумента",    ОписаниеТиповСтрока254);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоСоставу",  ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоФорме",    ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("ПризнМногострочности",    ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("ТипДанныхПоказателя",     ОписаниеТиповСтрока15);


мСтруктураВариантыЗаполнения      = Новый Структура;

МассивТипов = Новый Массив; 
МассивТипов.Добавить(Тип("Строка"));
ОписаниеТиповСтрока = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыСтроки(254, ДопустимаяДлина.Переменная));

МассивТипов = Новый Массив;
МассивТипов.Добавить(Тип("Дата"));
ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));

мТаблицаФормОтчета = Новый ТаблицаЗначений;
мТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
мТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, НСтр("ru='Утверждена';uk='Затверджена'"),  20);
мТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   НСтр("ru='Действует с';uk='Діє з'"), 5);
мТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   НСтр("ru='         по';uk='         по'"), 5);

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2000Кв1";
НоваяФорма.ОписаниеОтчета     = НСтр("ru='Утверждена приказом Министерства финансов Украины от 29.11.2000 года N 302 ';uk='Затверджена наказом Міністерства фінансів України від 29.11.2000 року N 302 '");
НоваяФорма.ДатаНачалоДействия = '20000101';
НоваяФорма.ДатаКонецДействия  = '20081130';

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2008Кв4";
НоваяФорма.ОписаниеОтчета     = НСтр("ru='Утверждена приказом МФУ от 29.11.2000 года N 302.(с изменениями, внесенными приказом МФУ №1238 от 14.10.2008)';uk='Затверджена наказом МФУ від 29.11.2000 року N 302.(зі змінами, внесеними наказом МФУ №1238 від 14.10.2008)'");
НоваяФорма.ДатаНачалоДействия = '20081201';
НоваяФорма.ДатаКонецДействия  = '20090930';

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2009Кв4";
НоваяФорма.ОписаниеОтчета     = НСтр("ru='Утверждена приказом МФУ от 29.11.2000 года N 302.(с изменениями, внесенными приказом МФУ №1125 от 25.09.2009)';uk='Затверджена наказом МФУ від 29.11.2000 року N 302.(зі змінами, внесеними наказом МФУ №1125 від 25.09.2009)'");
НоваяФорма.ДатаНачалоДействия = '20091001';
НоваяФорма.ДатаКонецДействия  = '20111231';

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2012Кв4";
НоваяФорма.ОписаниеОтчета     = НСтр("ru = 'Утверждена приказом МФУ от 29.11.2000 года N 302.(с изменениями, внесенными приказом МФУ №1591 от 09.12.2011)'; uk = 'Затверджена наказом МФУ від 29.11.2000 року N 302.(зі змінами, внесеними наказом МФУ №1591 від 09.12.2011)'");
НоваяФорма.ДатаНачалоДействия = '20120101';
НоваяФорма.ДатаКонецДействия  = '2012-12-31';

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2013";
НоваяФорма.ОписаниеОтчета     = НСтр("ru = 'Утверждена приказом МФУ от 29.11.2000 года N 302.(с изменениями, внесенными приказом МФУ №627 от 27.06.2013)'; uk = 'Затверджена наказом МФУ від 29.11.2000 року N 302 (зі змінами, внесеними наказом МФУ №627 від 27.06.2013)'");
НоваяФорма.ДатаНачалоДействия = '20130101';
НоваяФорма.ДатаКонецДействия  = ОбщегоНазначения.ПустоеЗначениеТипа(Тип("Дата"));
#КонецЕсли
