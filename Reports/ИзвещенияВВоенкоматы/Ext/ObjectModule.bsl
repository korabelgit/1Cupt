#Если Клиент Тогда
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Настройка периода
Перем НП Экспорт;

Перем мНазваниеОтчета Экспорт; // название отчета

Перем мСтруктураДляОтбораПоКатегориям Экспорт; // содержит связь отборов текста запроса Построителя и значений категорий

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	КодЯзыкаПечать = "uk";
	мНазваниеОтчета = НСтр("ru='Извещения в военкоматы о принятых и уволенных военнообязанных';uk='Повідомлення до військоматів про прийнятих та звільнених військовозобов’язаних'",КодЯзыкаПечать);
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Призывники.Военкомат КАК Военкомат,
	|	Призывники.Физлицо,
	|	ВЫБОР КОГДА (ФИОФизЛиц.Фамилия) ЕСТЬ NULL  ТОГДА Призывники.Физлицо.Наименование ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество КОНЕЦ КАК ФиоПолное,
	|	Призывники.ТекстЗвание,
	|	Призывники.Звание КАК Звание,
	|	Призывники.ВУС КАК ВУС,
	|	Призывники.Регистратор КАК Регистратор,
	|	Призывники.НомерРегистратора КАК НомерРегистратора,
	|	Призывники.ДатаРегистратора КАК ДатаРегистратора,
	|	Призывники.РеквизитыВоенногоБилета КАК РеквизитыВоенногоБилета,
	|	ГОД(Призывники.Физлицо.ДатаРождения) КАК ГодРождения,
	|	ВЫБОР КОГДА Призывники.УровеньОбразования = 4 ТОГДА &ВысшееОбразование КОГДА Призывники.УровеньОбразования = 0 ТОГДА """+НСтр("ru='Другое образование';uk='Інша освіта'",КодЯзыкаПечать)+""" ИНАЧЕ ФизическиеЛицаОбразование.ВидОбразования КОНЕЦ КАК Образование,
	|	СемейноеПоложениеФизЛиц.СемейноеПоложение КАК СемейноеПоложение,
	|	ФактическийАдрес.Представление КАК ФактическийАдрес,
	|	АдресПрописки.Представление КАК АдресПрописки,
	|	ДомашнийТелефон.Представление КАК ДомашнийТелефон,
	|	Призывники.Событие,
	|	Призывники.ДатаСобытия,
	|	Призывники.ДолжностьРаботника,
	|	Призывники.Организация КАК Организация,
	|	Призывники.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	АдресОрганизации.Представление КАК АдресОрганизации,
	|	ТелефонОрганизации.Представление КАК ТелефонОрганизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		Призывники.Физлицо КАК Физлицо,
	|		Призывники.Звание КАК Звание,
	|		Призывники.Военкомат КАК Военкомат,
	|		Призывники.РеквизитыВоенногоБилета КАК РеквизитыВоенногоБилета,
	|		Призывники.ВУС КАК ВУС,
	|		Призывники.Регистратор КАК Регистратор,
	|		Призывники.НомерРегистратора КАК НомерРегистратора,
	|		Призывники.ДатаРегистратора КАК ДатаРегистратора,
	|		Призывники.Организация КАК Организация,
	|		Призывники.ДатаСобытия КАК ДатаСобытия,
	|		МАКСИМУМ(ВЫБОР КОГДА ФизическиеЛицаОбразование.ВидОбразования В (&СписокВысшегоОбразования) ТОГДА 4 КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееПрофессиональноеОбразование ТОГДА 3 КОГДА ФизическиеЛицаОбразование.ВидОбразования = &НачальноеПрофессиональноеОбразование ТОГДА 2 КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееПолноеОбщееОбразование ТОГДА 1 КОГДА ФизическиеЛицаОбразование.ВидОбразования <> &ПустоеОбразование ТОГДА 1 ИНАЧЕ -(1) КОНЕЦ) КАК УровеньОбразования,
	|		Призывники.Событие КАК Событие,
	|		Призывники.ТекстЗвание КАК ТекстЗвание,
	|		Призывники.ДолжностьРаботника КАК ДолжностьРаботника
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
	|			ВоинскийУчетСрезПоследних.Звание КАК Звание,
	|			ВоинскийУчетСрезПоследних.Военкомат КАК Военкомат,
	|			ВоинскийУчетСрезПоследних.РеквизитыВоенногоБилета КАК РеквизитыВоенногоБилета,
	|			ВоинскийУчетСрезПоследних.ВУС КАК ВУС,
	|			ВЫБОР КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием 
	|           	ТОГДА ""Прийом на роботу в організацію"" 
	|				ИНАЧЕ ""Звільнення з організації"" КОНЕЦ КАК Регистратор,
	|           РаботникиОрганизации.Регистратор.Номер КАК НомерРегистратора,
	|           РаботникиОрганизации.Регистратор.Дата КАК ДатаРегистратора,
	|			РаботникиОрганизации.ПодразделениеОрганизации.Владелец КАК Организация,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием
	|					ТОГДА РаботникиОрганизации.Период
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|			КОНЕЦ КАК ДатаСобытия,
	|			ВЫБОР КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием ТОГДА """+НСтр("ru='Принят';uk='Прийнято'",КодЯзыкаПечать)+""" ИНАЧЕ """+НСтр("ru='Уволен';uk='Звільнено'",КодЯзыкаПечать)+""" КОНЕЦ КАК Событие,
	|			ВЫБОР КОГДА ВоинскийУчетСрезПоследних.ОтношениеКВоинскойОбязанности = &Призывник ТОГДА """+НСтр("ru='гражданин, подлежащий призыву на военную службу';uk='громадянин, що підлягає призову на військову службу'",КодЯзыкаПечать)+""" ИНАЧЕ ВоинскийУчетСрезПоследних.Звание.Наименование + """+НСтр("ru=' запаса; ВУС № ';uk=' запасу; ВОС № '",КодЯзыкаПечать)+""" + ВоинскийУчетСрезПоследних.ВУС КОНЕЦ КАК ТекстЗвание,
	|			ВЫБОР КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием ТОГДА """+НСтр("ru='на должность ';uk='на посаду '",КодЯзыкаПечать)+""" + РаботникиОрганизации.Должность.Наименование ИНАЧЕ """" КОНЕЦ КАК ДолжностьРаботника
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВоинскийУчет.СрезПоследних(&ДатаКон, ) КАК ВоинскийУчетСрезПоследних
	|				ПО РаботникиОрганизации.Сотрудник.Физлицо = ВоинскийУчетСрезПоследних.Физлицо
	|		
	|		ГДЕ
	|			РаботникиОрганизации.Период МЕЖДУ &ДатаНач И &ДатаКон И
	|			РаботникиОрганизации.ПричинаИзмененияСостояния <> &Перемещение И
	|			ВоинскийУчетСрезПоследних.ОтношениеКВоинскойОбязанности В(&Военнообязанные) И
	|			(РаботникиОрганизации.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|	
	|		{ГДЕ
	|	    	Организация, Военкомат, ПричинаИзмененияСостояния КАК Событие, РаботникиОрганизации.Сотрудник.Физлицо.*
	|		}
	|	    ) КАК Призывники
	|	
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
	|			ПО Призывники.Физлицо = ФизическиеЛицаОбразование.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Призывники.Физлицо,
	|		Призывники.Звание,
	|		Призывники.Военкомат,
	|		Призывники.РеквизитыВоенногоБилета,
	|		Призывники.ВУС,
	|		Призывники.Регистратор,
	|		Призывники.НомерРегистратора,
	|		Призывники.ДатаРегистратора,
	|		Призывники.Организация,
	|		Призывники.ДатаСобытия,
	|		Призывники.Событие,
	|		Призывники.ТекстЗвание,
	|		Призывники.ДолжностьРаботника) КАК Призывники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаКон, ) КАК СемейноеПоложениеФизЛиц
	|		ПО Призывники.Физлицо = СемейноеПоложениеФизЛиц.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаКон, ) КАК ФИОФизЛиц
	|		ПО Призывники.Физлицо = ФИОФизЛиц.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФактическийАдрес
	|		ПО Призывники.Физлицо = ФактическийАдрес.Объект И (ФактическийАдрес.Тип = &Адрес) И (ФактическийАдрес.Вид = &ФактическийАдрес)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресПрописки
	|		ПО Призывники.Физлицо = АдресПрописки.Объект И (АдресПрописки.Тип = &Адрес) И (АдресПрописки.Вид = &АдресПрописки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ДомашнийТелефон
	|		ПО Призывники.Физлицо = ДомашнийТелефон.Объект И (ДомашнийТелефон.Тип = &Телефон) И (ДомашнийТелефон.Вид = &ДомашнийТелефон)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
	|		ПО Призывники.Физлицо = ФизическиеЛицаОбразование.Ссылка И (Призывники.УровеньОбразования = ВЫБОР КОГДА ФизическиеЛицаОбразование.ВидОбразования В (&ВысшееОбразование) ТОГДА 4 КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееПрофессиональноеОбразование ТОГДА 3 КОГДА ФизическиеЛицаОбразование.ВидОбразования = &НачальноеПрофессиональноеОбразование ТОГДА 2 КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееПолноеОбщееОбразование ТОГДА 1 ИНАЧЕ 0 КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресОрганизации
	|		ПО Призывники.Организация = АдресОрганизации.Объект И (АдресОрганизации.Тип = &Адрес) И (АдресОрганизации.Вид = &АдресОрганизации)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТелефонОрганизации
	|		ПО Призывники.Организация = ТелефонОрганизации.Объект И (ТелефонОрганизации.Тип = &Телефон) И (ТелефонОрганизации.Вид = &ТелефонОрганизации)
	|	
	|{УПОРЯДОЧИТЬ ПО
	|	Призывники.Военкомат, Организация, Событие, Физлицо.*
	|}
	|";	
	
	ПостроительОтчета.Текст = ТекстЗапроса;							  
							  
	// отборы по умолчанию
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Организация");
	МассивОтбора.Добавить("Военкомат");
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
КонецПроцедуры










Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт
	
	ВысшееОбразование = Новый Массив;
	ВысшееОбразование.Добавить(Справочники.ВидыОбразованияФизЛиц.Аспирантура);
	ВысшееОбразование.Добавить(Справочники.ВидыОбразованияФизЛиц.АдъюнктураОрдинатура);
	ВысшееОбразование.Добавить(Справочники.ВидыОбразованияФизЛиц.ВысшееОбразование);
	ВысшееОбразование.Добавить(Справочники.ВидыОбразованияФизЛиц.Докторантура);
	
	ПостроительОтчета.Параметры.Вставить("СреднееПолноеОбщееОбразование", Справочники.ВидыОбразованияФизЛиц.СреднееПолноеОбщееОбразование);
	ПостроительОтчета.Параметры.Вставить("НачальноеПрофессиональноеОбразование", Справочники.ВидыОбразованияФизЛиц.НачальноеПрофессиональноеОбразование);
	ПостроительОтчета.Параметры.Вставить("СреднееПрофессиональноеОбразование", Справочники.ВидыОбразованияФизЛиц.СреднееПрофессиональноеОбразование);
	ПостроительОтчета.Параметры.Вставить("ВысшееОбразование", Справочники.ВидыОбразованияФизЛиц.ВысшееОбразование); 
	ПостроительОтчета.Параметры.Вставить("ПустоеОбразование", Справочники.ВидыОбразованияФизЛиц.ПустаяСсылка());
	ПостроительОтчета.Параметры.Вставить("СписокВысшегоОбразования", ВысшееОбразование);
	ПостроительОтчета.Параметры.Вставить("Адрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	ПостроительОтчета.Параметры.Вставить("ФактическийАдрес", Справочники.ВидыКонтактнойИнформации.ФактАдресФизЛица);
	ПостроительОтчета.Параметры.Вставить("АдресПрописки", Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица);
	ПостроительОтчета.Параметры.Вставить("АдресОрганизации", Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	ПостроительОтчета.Параметры.Вставить("Телефон", Перечисления.ТипыКонтактнойИнформации.Телефон);
	ПостроительОтчета.Параметры.Вставить("ДомашнийТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонФизЛицаДомашний);
	ПостроительОтчета.Параметры.Вставить("ТелефонОрганизации", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	ПостроительОтчета.Параметры.Вставить("Перемещение", Перечисления.ПричиныИзмененияСостояния.Перемещение);
	ПостроительОтчета.Параметры.Вставить("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	
	Военнообязанные = Новый Массив;
	Военнообязанные.Добавить(Перечисления.ОтношениеКВоинскойОбязанности.Призывник);
	Военнообязанные.Добавить(Перечисления.ОтношениеКВоинскойОбязанности.Военнообязанный);
	ПостроительОтчета.Параметры.Вставить("Военнообязанные", Военнообязанные);
	
	ПостроительОтчета.Параметры.Вставить("Призывник", Перечисления.ОтношениеКВоинскойОбязанности.Призывник);
	ПостроительОтчета.Параметры.Вставить("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);

    // Проверка на пустые значения
	Если ПустаяСтрока(ПостроительОтчета.Текст) Тогда
		
		Предупреждение("Не определен запрос отчета!");
		
		ЕстьОшибки = Истина;
		Возврат;
	КонецЕсли;

	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты конца периода", 60);
		ЕстьОшибки = Истина;
		Возврат;
	КонецЕсли;

	Если НЕ УправлениеОтчетами.ЗадатьПараметрыОтбораПоКатегориям(ПостроительОтчета, мСтруктураДляОтбораПоКатегориям) Тогда
		//повторные отборы по категориям
		Предупреждение("По одной категории нельзя устанавливать два отбора", 60);
		ЕстьОшибки = Истина;
		Возврат;
	КонецЕсли;

	УправлениеОтчетами.ПроверитьПорядокПостроителяОтчета(ПостроительОтчета);

	ПостроительОтчета.Параметры.Вставить("ДатаНач", ДатаНач);
	Если ДатаКон <> '00010101000000' Тогда
		ПостроительОтчета.Параметры.Вставить("ДатаКон", КонецДня(ДатаКон));
	Иначе
		ПостроительОтчета.Параметры.Вставить("ДатаКон", '00010101000000');
	КонецЕсли;

	МакетОтчета = ПолучитьМакет("Макет");
	
	// печать производится на языке, указанном в настройках пользователя
	
	
	// Заголовок отчета
	ДокументРезультат.Очистить();


	// Исполнение запроса
	ПостроительОтчета.Выполнить();

	// Вывод в отчет
	ОбластьИзвещение = МакетОтчета.ПолучитьОбласть("Извещение");
	
	ФизЛицоОтветственного = Ответственный.ФизЛицо;
	Если ЗначениеЗаполнено(ФизЛицоОтветственного) Тогда
		
		Запрос = Новый Запрос();
		ТекстУсловий = "";
		Если ПостроительОтчета.Отбор.Организация.Использование Тогда
			ТекстУсловий = ", СтруктурнаяЕдиница = &Организация";
			Запрос.УстановитьПараметр("Организация",ПостроительОтчета.Отбор.Организация.Значение);
		КонецЕсли;
		
		ТекстЗапроса = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Наименование КАК ДолжностьОтветственного,
			|	ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """" 
			|		ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + ""."" 
			|		ИНАЧЕ """" 
			|	КОНЕЦ + 
			|	ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """" 
			|		ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + ""."" 
			|		ИНАЧЕ """" 
			|	КОНЕЦ +
			|	ВЫБОР КОГДА НЕ (ФИОФизЛицСрезПоследних.ФизЛицо) ЕСТЬ NULL 
			|		ТОГДА "" "" + ФИОФизЛицСрезПоследних.Фамилия  
			|КОНЕЦ КАК ФИОКраткое
			|ИЗ
			|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаКон" + ТекстУсловий + ") КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|ЛЕВОЕ СОЕДИНЕНИЕ 
			|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаКон, ФизЛицо = &ФизическоеЛицо) КАК ФИОФизЛицСрезПоследних
			|ПО
			|   ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
			|ГДЕ
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = &ФизическоеЛицо";
			
		Запрос.Текст = ТекстЗапроса;

		Запрос.УстановитьПараметр("ФизическоеЛицо",ФизЛицоОтветственного);
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
		    ОбластьИзвещение.Параметры.Заполнить(Выборка);
		    ОбластьИзвещение.Параметры.ФИООтветственного = Выборка.ФИОКраткое;
		КонецЕсли;
	КонецЕсли;
	
	// вывод самих извещений
	Выборка = ПостроительОтчета.Результат.Выбрать();
	
	МассивДлинСтрок = Новый Массив;
	МассивДлинСтрок.Добавить(63);
	МассивДлинСтрок.Добавить(96);
		
	МассивДлинСтрок.Установить(0,63);
		
	Пока Выборка.Следующий() Цикл
		ОбластьИзвещение.Параметры.АдресМестаПроживания1 = "";
		ОбластьИзвещение.Параметры.АдресМестаПроживания2 = "";
		ОбластьИзвещение.Параметры.Военкомат1 = "";
		ОбластьИзвещение.Параметры.Военкомат2 = "";
		
	    ОбластьИзвещение.Параметры.Заполнить(Выборка);
		
		ОбластьИзвещение.Параметры.ДатаРегистратора = Формат(Выборка.ДатаРегистратора, "Л='uk';ДФ=дд.MM.гггг") + "р.";
		
		ОбластьИзвещение.Параметры.ДатаРождения = Выборка.Физлицо.ДатаРождения;
		РезультирующаяСтрокаАдрес = ОбщегоНазначения.РазбитьСтрокуНаПодСтроки(Выборка.ФактическийАдрес, МассивДлинСтрок);
		Для Счетчик = 1 По ?(СтрЧислоСтрок(РезультирующаяСтрокаАдрес) <= 2, СтрЧислоСтрок(РезультирующаяСтрокаАдрес), 2)  Цикл
			ОбластьИзвещение.Параметры["АдресМестаПроживания"+Счетчик] = СтрЗаменить(СтрПолучитьСтроку(РезультирующаяСтрокаАдрес, Счетчик),Символы.ПС, "");  
		КонецЦикла;
		
		МассивДлинСтрок.Установить(0,55);
		
		РезультирующаяСтрокаВоенкомат = ОбщегоНазначения.РазбитьСтрокуНаПодСтроки(Выборка.Военкомат, МассивДлинСтрок);
		Для Счетчик = 1 По ?(СтрЧислоСтрок(РезультирующаяСтрокаВоенкомат) <= 2, СтрЧислоСтрок(РезультирующаяСтрокаВоенкомат), 2)  Цикл
			ОбластьИзвещение.Параметры["Военкомат"+Счетчик] = СтрЗаменить(СтрПолучитьСтроку(РезультирующаяСтрокаВоенкомат, Счетчик),Символы.ПС, "");  
		КонецЦикла;
		

		ДокументРезультат.Вывести(ОбластьИзвещение);
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	

	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);

	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "ИзвещенияВВоенкоматы";

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

ПоказыватьЗаголовок = Истина;

#КонецЕсли
