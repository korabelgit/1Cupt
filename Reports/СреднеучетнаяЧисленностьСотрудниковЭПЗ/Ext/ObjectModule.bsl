#Если Клиент Тогда

Перем НП Экспорт;  				  // Настройка периода

Процедура СформироватьПараметрыОтчета() Экспорт
	
	//Определение списка работников, попадающих в отчетный период
	МассивВидЗанятости    = Новый Массив(2);
	МассивВидЗанятости[0] = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
	МассивВидЗанятости[1] = Перечисления.ВидыЗанятостиВОрганизации.Совместительство;
	ПостроительОтчета.Параметры.Вставить("ПарамОсновнойСотрудник",   МассивВидЗанятости);
                                                               
	ПостроительОтчета.Параметры.Вставить("парамНачало",			ДатаНачала);
	ПостроительОтчета.Параметры.Вставить("парамКонец",			КонецМесяца(ДатаКонца) );
	ПостроительОтчета.Параметры.Вставить("парамОрганизация",	ПостроительОтчета.Отбор.Организация.Значение);
	ПостроительОтчета.Параметры.Вставить("парамПустаяБуква",	Справочники.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка());
	ПостроительОтчета.Параметры.Вставить("парамДоговорПодряда",	ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодряда);
	ПостроительОтчета.Параметры.Вставить("ОбозначениеРабочееВремя",	Справочники.КлассификаторИспользованияРабочегоВремени.Работа);
	ПостроительОтчета.Параметры.Вставить("ДнейВМесяце",	День(КонецМесяца(ДатаКонца)) );
	                                
	КоличествоМесяцев = (Год(ДатаКонца) - Год(ДатаНачала))*12 + Месяц(ДатаКонца) - Месяц(ДатаНачала) + 1;
	ПостроительОтчета.Параметры.Вставить("парамКоличествоМесяцев",	КоличествоМесяцев);
	
	спФизЛиц = ПолучитьОтбор(ВидОтчета);
	ПостроительОтчета.Параметры.Вставить("парамФизЛицо",		спФизЛиц);
		
	ПостроительОтчета.Параметры.Вставить("парамСредняяЗП",		СредняяЗарплата);
	
	МассивНеявки    = Новый Массив(16);
	МассивНеявки[0] = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый;
	МассивНеявки[1] = Справочники.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпускБезОплаты;
	МассивНеявки[2] = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам;
	МассивНеявки[3] = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком;
	МассивНеявки[4] = Справочники.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя;
	МассивНеявки[5] = Справочники.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству;
	МассивНеявки[6] = Справочники.КлассификаторИспользованияРабочегоВремени.ПереводНаНеполныйДень;
	МассивНеявки[7] = Справочники.КлассификаторИспользованияРабочегоВремени.ПереводНаДругуюРаботу;
	МассивНеявки[8] = Справочники.КлассификаторИспользованияРабочегоВремени.Сверхурочные;
	МассивНеявки[9] = Справочники.КлассификаторИспользованияРабочегоВремени.Прогул;
	МассивНеявки[10] = Справочники.КлассификаторИспользованияРабочегоВремени.Забастовка;
	МассивНеявки[11] = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь;
	МассивНеявки[12] = Справочники.КлассификаторИспользованияРабочегоВремени.БолезньБезОплаты;
	МассивНеявки[13] = Справочники.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам;
	МассивНеявки[14] = Справочники.КлассификаторИспользованияРабочегоВремени.ДругиеНеявкиПоКолДоговору;
	МассивНеявки[15] = Справочники.КлассификаторИспользованияРабочегоВремени.ДругиеНеявки;
	
	ПостроительОтчета.Параметры.Вставить("парамНеявки",   МассивНеявки);
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ТолькоЗаголовок = Ложь) Экспорт
	
	
	ДокументРезультат.Очистить();
	
	Макет	= ПолучитьМакет("Макет");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПостроительОтчета.Макет = Макет;
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	
	Если ТолькоЗаголовок Тогда
		
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		Возврат;
		
	КонецЕсли;
	
	ПостроительОтчета.МакетЗаголовкаОтчета = ЗаголовокОтчета;
	ВысотаЗаголовка                        = ЗаголовокОтчета.ВысотаТаблицы;
	
	ОтборОрганизации        = ПостроительОтчета.Отбор.Организация.Использование;
	Организация             = ПостроительОтчета.Отбор.Организация.Значение;
	ВидСравненияОрганизация = УправлениеОтчетами.ПолучитьВидСравненияСтрокой(ПостроительОтчета.Отбор.Организация.ВидСравнения);
	
	ОтборПодразделения        = ПостроительОтчета.Отбор.Подразделение.Использование; 
	Подразделение             = ПостроительОтчета.Отбор.Подразделение.Значение;
	ВидСравненияПодразделение = УправлениеОтчетами.ПолучитьВидСравненияСтрокой(ПостроительОтчета.Отбор.Подразделение.ВидСравнения);
	
	СформироватьПараметрыОтчета();
	                                           
	ПостроительОтчета.Выполнить();
	ПостроительОтчета.ОформитьМакет();
	ПостроительОтчета.Вывести(ДокументРезультат);
	
	Ширина = ДокументРезультат.ШиринаТаблицы;
	ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
	ВысотаЗаголовка = ВысотаЗаголовка + 1;
	
	Область = ДокументРезультат.Область(ВысотаЗаголовка, 4);
	
КонецПроцедуры

// Расчитывает среднесписочную численность штатных работников и в эквиваленте полной занятости
//
// Параметры
//  ВидСредней  – Строка – "ЭПЗ", "ССЧ"
//  ВидПериода  – Строка – "МЕСЯЦ", "КВАРТАЛ", "ГОД", "КВАРТАЛСНАЧАЛАГОДА", "МЕСЯЦСНАЧАЛАГОДА" 
//  Организация  – ссылка – организация
//  ПараметрОтбора  – Строка – "" = по всем, "Ж" = Женщины, "Инв" = Инвалиды, "Пен" = пенсионеры, "ГПХ" - работающие по договору ГПХ
//  ПоФизЛицам      – Булево – разворачивать или нет до физ. лиц
//
// Возвращаемое число:
//   таблица значений   – Колонки: Период и Сумма
//
Функция ПолучитьСотрудников( УсловиеНаФизлицо = "" )
	// сотрудники В разрезе периодов
	ТекстСотрудникиОрганизации = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	РаботникиПериод.Организация					КАК Организация,
	|	РаботникиПериод.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|	РаботникиПериод.Сотрудник					КАК Сотрудник,
	|	РаботникиПериод.Начало						КАК Начало,
	|   ВЫБОР	КОГДА РаботникиПериод.Конец ЕСТЬ NULL  ИЛИ РаботникиПериод.КОНЕЦ > &парамКонец
	|   			ТОГДА &парамКонец 
	|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( НАЧАЛОПЕРИОДА( РаботникиПериод.Конец, ДЕНЬ), ДЕНЬ, -1), ДЕНЬ)  
	|   		КОНЕЦ     КАК Конец
	|	ИЗ (
	|		ВЫБРАТЬ
	|			РаботникиНачало.Организация					КАК Организация,
	|			РаботникиНачало.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|			РаботникиНачало.Сотрудник					КАК Сотрудник,
	|			РаботникиНачало.Начало						КАК Начало,
	|			ВЫБОР КОГДА РаботникиНачало.Договор ЕСТЬ NULL
	|			ТОГДА МИНИМУМ(Работники.Период)
	|			ИНАЧЕ МИНИМУМ(ДОБАВИТЬКДАТЕ(Договоры.ДатаОкончания,ДЕНЬ,1))
	|			КОНЕЦ КАК Конец
	|
	|		ИЗ	(
	|
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				&парамНачало						КАК Начало,
	|				NULL КАК Договор
	|			ИЗ	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамНачало) КАК Работники
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)                                       
	|			" + УсловиеНаФизлицо + "
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				Работники.Период					КАК Начало,
	|				NULL КАК Договор	
	|			ИЗ	РегистрСведений.РаботникиОрганизаций КАК Работники
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			И	Работники.Период >= &парамНачало
	|			И	Работники.Период <= &парамКонец
	|			" + УсловиеНаФизлицо + "
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				&парамНачало						КАК Начало,
	|				Работники.Ссылка
	|			ИЗ  Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК Работники
	|	
	|			ГДЕ Работники.Проведен
	|			И Работники.ДатаОкончания >= &парамНачало
	|			И Работники.ДатаНачала <= &парамКонец
	|			" + УсловиеНаФизлицо + "
	|   	) КАК РаботникиНачало
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ПО		РаботникиНачало.Сотрудник = Работники.Сотрудник
	|			И   РаботникиНачало.Начало < Работники.Период
	|			И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|				ИЛИ Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
	|			" + УсловиеНаФизлицо + "
	|       ЛЕВОЕ СОЕДИНЕНИЕ	
	|        Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК Договоры
	|        ПО РаботникиНачало.Сотрудник = Договоры.Сотрудник
	|        И РаботникиНачало.Договор = Договоры.Ссылка
	|        И Договоры.ДатаОкончания < &парамКонец
    |
	|
	|   	СГРУППИРОВАТЬ ПО
	|			РаботникиНачало.Организация,
	|			РаботникиНачало.ПодразделениеОрганизации,
	|			РаботникиНачало.Сотрудник,
	|			РаботникиНачало.Начало,
	|			РаботникиНачало.Договор,
	|			Договоры.ДатаОкончания
	|) КАК РаботникиПериод
	|
	|";
	
	Возврат ТекстСотрудникиОрганизации;
	
КонецФункции

// Расчитывает среднесписочную численность штатных работников и в эквиваленте полной занятости
//
// Параметры
//  ВидСредней  – Строка – "ЭПЗ", "ССЧ"
//  ВидПериода  – Строка – "МЕСЯЦ", "КВАРТАЛ", "ГОД", "КВАРТАЛСНАЧАЛАГОДА", "МЕСЯЦСНАЧАЛАГОДА" 
//  Организация  – ссылка – организация
//  ПараметрОтбора  – Строка – "" = по всем, "Ж" = Женщины, "Инв" = Инвалиды, "Пен" = пенсионеры, "ГПХ" - работающие по договору ГПХ
//  ПоФизЛицам      – Булево – разворачивать или нет до физ. лиц
//
// Возвращаемое число:
//   таблица значений   – Колонки: Период и Сумма
//
Функция ПолучитьОтбор(знач ПараметрОтбора = "") Экспорт
	
	ПараметрОтбора = Врег(ПараметрОтбора);
	Запрос = Новый Запрос;
                                                               
	Запрос.УстановитьПараметр("парамНачало",		ДатаНачала);
	Запрос.УстановитьПараметр("парамКонец",			КонецМесяца(ДатаКонца) );
	Запрос.УстановитьПараметр("парамОрганизация",	ПостроительОтчета.Отбор.Организация.Значение);
	
	УсловиеОтбора = "";
	Если ПараметрОтбора = "Ж" Тогда
		
		УсловиеОтбора = "И Работники.Сотрудник.ФизЛицо.Пол = &парамОтбора";
		Запрос.УстановитьПараметр("парамОтбора", Перечисления.ПолФизическихЛиц.Женский);
		
	КонецЕсли;
	ТекстСотрудникиОрганизации = ПолучитьСотрудников( УсловиеОтбора );
	
	//"Ж" = Женщины, 
	//"ГПХ" - работающие по договору ГПХ
	//"Инв" = Инвалиды, 
	//"Пен" = пенсионеры, 
	Если ПараметрОтбора = "ИНВ" Тогда
		
		Признак = "Инвалидность";
		ИмяРегистраСведений = "СведенияОбИнвалидностиФизлиц";
	ИначеЕсли (ПараметрОтбора = "ПЕНСИОНЕРЫ" ИЛИ ПараметрОтбора = "ПЕН") Тогда
		
		Признак = "Пенсионер";
		ИмяРегистраСведений = "СведенияОПенсионерах";
		
	ИначеЕсли ПараметрОтбора = "ГПХ" Тогда
		
		Признак = "СуммаЗаРаботу >= 0";
		ИмяРегистраСведений = "ДоговорникиОрганизаций";
		
	КонецЕсли; 
	Если  ПараметрОтбора = "ИНВ" ИЛИ ПараметрОтбора = "ПЕНСИОНЕРЫ" ИЛИ ПараметрОтбора = "ПЕН" Тогда
		
		ТекстЗапросаУсловие = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + ".СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список." + Признак + "
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо			КАК Физлицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|			ГДЕ	Список." + Признак + "
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список." + Признак + "
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод.Начало ТОГДА УсловиеПериод.Начало ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА Основной.Конец < УсловиеПериод.Конец ТОГДА Основной.Конец ИНАЧЕ  УсловиеПериод.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","") + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие + " ) КАК УсловиеПериод
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД.Физлицо
		|		И	Основной.Начало <= УсловиеПериод.Конец
		|		И	УсловиеПериод.Начало <= Основной.Конец
		|";
	ИначеЕсли	ПараметрОтбора = "ГПХ" Тогда
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА &парамНачало < Основной.ДатаНачала ТОГДА Основной.ДатаНачала ИНАЧЕ  &парамНачало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА &парамКонец < Основной.ДатаОкончания ТОГДА &парамКонец ИНАЧЕ  Основной.ДатаОкончания КОНЕЦ     КАК Конец
		|
		|	ИЗ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК Основной
		|	ГДЕ		Основной.ДатаОкончания >= &парамНачало
		|		И	Основной.ДатаНачала <= &парамКонец
		|";
	КонецЕсли; 
	
	Запрос.Текст = ТекстСотрудникиОрганизации;
	спФизЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
	Возврат спФизЛиц;
	
КонецФункции // ПолучитьСреднюю()

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ТекстСотрудникиОрганизации = ПолучитьСотрудников("И Работники.Сотрудник в (&парамФизЛицо)");
	ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
	
	ПостроительОтчета.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизаций.Организация.Представление              КАК Организация,
	|	РаботникиОрганизаций.ПодразделениеОрганизации.Представление КАК Подразделение,
	|	РаботникиОрганизаций.Сотрудник.ФизЛицо.Наименование                   КАК ФизЛицо,
	|	Данные.Буква                                       			КАК Буква,
	|	Данные.НормаЧасовЗаМесяц                   					КАК НормаЧасовЗаМесяц,
	|   СУММА( ВЫБОР КОГДА Данные.НормаЧасовЗаМесяц ЕСТЬ NULL ИЛИ Данные.НормаЧасовЗаМесяц = 0 ТОГДА 0 ИНАЧЕ Данные.НормаЧасов / (Данные.НормаЧасовЗаМесяц) КОНЕЦ ) КАК Средняя,   //*&парамКоличествоМесяцев
	|	СУММА(Данные.НормаЧасов)                                   	КАК Результат
	|
	|ИЗ	( " + ТекстСотрудникиОрганизации + " ) КАК РаботникиОрганизаций
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		ОсновныеНачисления.Организация                      					КАК Организация,
	|		ОсновныеНачисления.Сотрудник                          					КАК Сотрудник,
	|		ОсновныеНачисления.ПериодДействияНачало                           		КАК ПериодДействияНачало,
	|		ОсновныеНачисления.ПериодДействияКонец                           		КАК ПериодДействияКонец,
	|		ОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	КАК Буква,
	|		ОсновныеНачисления.НормаЧасовЗаМесяц									КАК НормаЧасовЗаМесяц,
	|		СУММА(ОсновныеНачисления.НормаЧасов)									КАК НормаЧасов
	|		
	|	ИЗ	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|	
	|	
	|	ГДЕ	ОсновныеНачисления.ПериодРегистрации <= &парамКонец 
	|	И	ОсновныеНачисления.ПериодДействияНачало >= &парамНачало                
	|	И	ОсновныеНачисления.ПериодДействияКонец <= &парамКонец 
	|	И	ОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> &парамПустаяБуква
	|	И	НЕ ОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В (&парамНеявки)
	|	И	ЕСТЬNULL(ОсновныеНачисления.НормаЧасовЗаМесяц,0) <> 0
	|	И	ЕСТЬNULL(ОсновныеНачисления.НормаЧасов,0) <> 0
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ОсновныеНачисления.Организация,
	|		ОсновныеНачисления.Сотрудник,
	|		ОсновныеНачисления.ПериодДействияНачало,
	|		ОсновныеНачисления.ПериодДействияКонец,
	|		ОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени,
	|		ОсновныеНачисления.НормаЧасовЗаМесяц
	|		
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		РаботникиОрганизаций.Организация					КАК Организация,
	|		РаботникиОрганизаций.Сотрудник						КАК Сотрудник,
	|		Календарь.ДатаКалендаря								КАК ПериодДействияНачало,
	|		Календарь.ДатаКалендаря								КАК ПериодДействияКонец,
	|		&ОбозначениеРабочееВремя							КАК Буква,
	|		ДЕНЬ(КОНЕЦПЕРИОДА(Календарь.ДатаКалендаря, МЕСЯЦ))*8	КАК НормаЧасовЗаМесяц,
	|		МАКСИМУМ( ВЫБОР КОГДА РаботникиОрганизаций.Сотрудник ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ )*8	КАК НормаЧасов
	|
	|	ИЗ	 РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК Календарь
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК РаботникиОрганизаций
	|	ПО	РаботникиОрганизаций.ДатаОкончания >= Календарь.ДатаКалендаря
	|	И	РаботникиОрганизаций.ДатаНачала <= Календарь.ДатаКалендаря
	|
	|	ГДЕ	Календарь.ДатаКалендаря >= &парамНачало
	|	И	Календарь.ДатаКалендаря <= &парамКонец
	|
	|	СГРУППИРОВАТЬ ПО
	|		РаботникиОрганизаций.Организация,
	|		РаботникиОрганизаций.Сотрудник,
	|		Календарь.ДатаКалендаря,
	|		Календарь.ДатаКалендаря,
	|		ДЕНЬ(КОНЕЦПЕРИОДА(Календарь.ДатаКалендаря, МЕСЯЦ))
	|	
	|) КАК Данные
	|ПО	РаботникиОрганизаций.Сотрудник		= Данные.Сотрудник 
	|И	РаботникиОрганизаций.Организация	= Данные.Организация
	|И	РаботникиОрганизаций.Начало	<= Данные.ПериодДействияНачало
	|И	РаботникиОрганизаций.Конец	>= Данные.ПериодДействияКонец   
	|
	|
	|ГДЕ	Данные.Буква ЕСТЬ НЕ NULL 
	|
	|{ГДЕ РаботникиОрганизаций.Организация 				КАК Организация,
	|	  РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение}	
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизаций.Организация,
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	РаботникиОрганизаций.Сотрудник,
	|	Данные.Буква,
	|	Данные.НормаЧасовЗаМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	ФизЛицо,
	|	Буква
	|
	|ИТОГИ СУММА(Средняя), СУММА(Результат), МАКСИМУМ(НормаЧасовЗаМесяц) ПО      // СУММА(ФОТ), 
	|	Общие,
	|	Организация,
	|	Подразделение,
	|	ФизЛицо,
	|	НормаЧасовЗаМесяц
    |	
	|
	|{ИТОГИ ПО
	|	Организация,
	|	Подразделение,
	|	НормаЧасовЗаМесяц,
	|	ФизЛицо,
	|	Буква
	|   }
	|";
	
    ПостроительОтчета.ЗаполнитьНастройки();
	
	СтруктураПредставлениеПолей = Новый Структура("Физлицо,ИмяВидаРасчета",
												  "Работник","Буква");
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	ПостроительОтчета.Отбор.Добавить("Организация");
	ПостроительОтчета.Отбор.Добавить("Подразделение");
	
	ПостроительОтчета.ИзмеренияКолонки.Добавить("Буква");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли