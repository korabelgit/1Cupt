///////////////////////////////////////////////////////////////
// СЕРВИСНЫЕ МЕТОДЫ

&НаСервере
Функция ПолучитьСписокДрайверов(ТипОборудования)

	СписокДрайверов = Новый СписокЗначений();
	Для каждого ИмяПеречисления Из Метаданные.Перечисления.ОбработчикиДрайверовПодключаемогоОборудования.ЗначенияПеречисления Цикл
		Если ТипОборудования = ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования." + ИмяПеречисления.Комментарий)
		 Или ИмяПеречисления.Комментарий = "" Тогда
			СписокДрайверов.Добавить(ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования." + ИмяПеречисления.Имя));
		КонецЕсли;
	КонецЦикла;

	Возврат СписокДрайверов;

КонецФункции

////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Загрузка и установка списка доступных обработок
	СписокДрайверов = ПолучитьСписокДрайверов(Объект.ТипОборудования);
	Элементы.ОбработчикДрайвера.СписокВыбора.Очистить();
	Для каждого СтрокаСписка Из СписокДрайверов Цикл
		Элементы.ОбработчикДрайвера.СписокВыбора.Добавить(СтрокаСписка.Значение, СтрокаСписка.Представление);
	КонецЦикла;

	//Перечисление стандартных типов
	Для каждого ИмяПеречисления Из Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления Цикл
		СоответствиеТиповОборудования.Добавить(ИмяПеречисления.Синоним, ИмяПеречисления.Комментарий);
	КонецЦикла;

	// Защита от изменения типа устройства если тип явно задан или экземпляр уже создан
	Элементы.ТипОборудования.ТолькоПросмотр = (Объект.Ссылка <> Справочники.ПодключаемоеОборудование.ПустаяСсылка());

	// Защита от изменения обработчика драйвера уже созданного экземпляра устройства
	Элементы.ОбработчикДрайвера.ТолькоПросмотр = (Объект.Ссылка <> Справочники.ПодключаемоеОборудование.ПустаяСсылка());

	// Защита от изменения модели уже созданного экземпляра устройства
	Элементы.Модель.ТолькоПросмотр = (Объект.Ссылка <> Справочники.ПодключаемоеОборудование.ПустаяСсылка());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если ЗначениеЗаполнено(Объект.ОбработчикДрайвера) Тогда
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТипОборудованияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если Объект.ТипОборудования <> ВыбранноеЗначение Тогда
		Объект.ТипОборудования = ВыбранноеЗначение;
		Модифицированность = Истина;

		// Загрузка и установка списка доступных обработок
		СписокДрайверов = ПолучитьСписокДрайверов(Объект.ТипОборудования);
		Элементы.ОбработчикДрайвера.СписокВыбора.Очистить();
		Для каждого СтрокаСписка Из СписокДрайверов Цикл
			Элементы.ОбработчикДрайвера.СписокВыбора.Добавить(СтрокаСписка.Значение, СтрокаСписка.Представление);
		КонецЦикла;

		Объект.ОбработчикДрайвера = ПредопределенноеЗначение("Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ПустаяСсылка");
	КонецЕсли;

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ИмяОбработчикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение <> Объект.ОбработчикДрайвера Тогда
		ОбработатьВыборОбработчика(ВыбранноеЗначение, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МодельОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Объект.Наименование = "'" + Строка(Элементы.Модель.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение)) + "'"
	                    + ?(ПустаяСтрока(Строка(Объект.РабочееМесто)),
	                        "",
	                        " " + НСтр("ru='на'") + " " + Строка(Объект.РабочееМесто));

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если Не Отказ
	   И Модифицированность Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборОбработчика(ВыбранныйОбработчик, СтандартнаяОбработка = Истина)
	Объект.Наименование = "'" + Строка(ВыбранныйОбработчик) + "'"
						+ ?(ПустаяСтрока(Строка(Объект.РабочееМесто)),
							"",
							" " + НСтр("ru='на'") + " " + Строка(Объект.РабочееМесто));
	
	Элементы.Модель.Доступность = Ложь;
	Объект.Модель = Неопределено;

КонецПроцедуры
