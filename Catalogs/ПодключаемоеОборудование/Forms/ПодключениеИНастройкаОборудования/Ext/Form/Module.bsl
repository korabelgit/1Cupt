////////////////////////////////////////////////
//////////// СОБЫТИЙНЫЕ МЕТОДЫ /////////////////


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ТекущееРабочееМесто = ПараметрыСеанса.РабочееМестоКлиента;

	УстановитьДоступныеВидыТО();

	ОбновитьПараметрыРабочегоМеста();
	
	УстановитьОтборыГруппировки(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыРабочегоМеста()

	Если ТекущееРабочееМесто = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка")
	 Или ТекущееРабочееМесто <> ПараметрыСеанса.РабочееМестоКлиента Тогда
		ТекущееРабочееМесто = ПараметрыСеанса.РабочееМестоКлиента;

		Заголовок = "";
	КонецЕсли;

	Если ПустаяСтрока(Заголовок) Тогда
		Заголовок = НСтр("ru='Подключение и настройка оборудования для РМ'") + " """
		          + Строка(ТекущееРабочееМесто) + """";

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПереключательСтраницПриИзменении(Элемент)

	УстановитьОтборыГруппировки(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьВыполнить()

	ОчиститьСообщения();
	СообщениеОбОшибке = "";
	НастройкиИзменены = Ложь;

	Если Элементы.СписокУстройств.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = МенеджерОборудованияКлиент.ВыполнитьНастройкуОборудования(
	   Элементы.СписокУстройств.ТекущиеДанные.Ссылка,
	   НастройкиИзменены,
	   СообщениеОбОшибке);

	Если Результат И НастройкиИзменены Тогда
		// Настройки были изменены
		ОбновитьПовторноИспользуемыеЗначения();
	ИначеЕсли Не Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)

	ОбновитьПараметрыРабочегоМеста();
	
	Элементы.СписокУстройств.ТекущаяСтрока = НовыйОбъект;
	
	ТекущиеДанные = Элементы.СписокУстройств.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И МенеджерОборудованияКлиентПовтИсп.ПолучитьРабочееМестоКлиента() = ТекущиеДанные.РабочееМесто Тогда
		
		Если Не МенеджерОборудованияКлиент.ДрайверУстановлен(НовыйОбъект) Тогда
			Результат = Вопрос(НСтр("ru = 'Установить драйвер?'"), РежимДиалогаВопрос.ДаНет);
			Если Результат = КодВозвратаДиалога.Да Тогда
				МенеджерОборудованияКлиент.УстановитьДрайвер(НовыйОбъект);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	НастроитьВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствПослеУдаления(Элемент)

	ОбновитьПараметрыРабочегоМеста();

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРабочееМесто(Команда)

	ОткрытьФормуВыбораРМПриПервомОбращении = Ложь;
	СписокНастроек = МенеджерОборудованияКлиентПовтИсп.ПолучитьПользовательскиеНастройкиПодключаемогоОборудования();
	Для Каждого Параметр Из СписокНастроек Цикл
		Если Параметр.Ключ = "ОткрытьФормуВыбораРМПриПервомОбращении" Тогда
			ОткрытьФормуВыбораРМПриПервомОбращении = Параметр.Значение;
		КонецЕсли;
	КонецЦикла;

	МенеджерОборудованияКлиент.ВыбратьРабочееМесто(ОткрытьФормуВыбораРМПриПервомОбращении);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененоРабочееМестоТекущегоСеанса" Тогда
		ОбновитьПараметрыРабочегоМеста();
		УстановитьОтборыГруппировки(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////
//////// ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ  //////

&НаСервере
Процедура УстановитьДоступныеВидыТО()

	Элементы.ПереключательТиповПО.СписокВыбора.Очистить();
	ДоступныеТипыПО = Новый Массив;
	ДоступныеТипыПО.Добавить(Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода);
	ДоступныеТипыПО.Добавить(Перечисления.ТипыПодключаемогоОборудования.СчитывательМагнитныхКарт);
	ДоступныеТипыПО.Добавить(Перечисления.ТипыПодключаемогоОборудования.ДисплейПокупателя);
	ДоступныеТипыПО.Добавить(Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных);
	ДоступныеТипыПО.Добавить(Перечисления.ТипыПодключаемогоОборудования.ЭлектронныеВесы);
	ДоступныеТипыПО.Добавить(Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток);
	Для Каждого ТипПО Из ДоступныеТипыПО Цикл
		Элементы.ПереключательТиповПО.СписокВыбора.Добавить(ТипПО);
	КонецЦикла;

	ДоступныеТипыПО.Очистить();
	ДоступныеТипыПО.Добавить(Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления.СканерШтрихкода);
	ДоступныеТипыПО.Добавить(Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления.СчитывательМагнитныхКарт);
	ДоступныеТипыПО.Добавить(Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления.ДисплейПокупателя);
	ДоступныеТипыПО.Добавить(Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления.ТерминалСбораДанных);
	ДоступныеТипыПО.Добавить(Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления.ЭлектронныеВесы);
	ДоступныеТипыПО.Добавить(Метаданные.Перечисления.ТипыПодключаемогоОборудования.ЗначенияПеречисления.ВесыСПечатьюЭтикеток);
	Для Каждого ТипПО Из ДоступныеТипыПО Цикл
		НоваяКартинка = Элементы.Добавить("Картинка" + ТипПО.Имя, Тип("ДекорацияФормы"), Элементы.ГруппаКартинокПО);
		НоваяКартинка.Вид = ВидДекорацииФормы.Картинка;
		НоваяКартинка.Картинка = БиблиотекаКартинок["ПодключаемоеОборудование" + ТипПО.Имя + "32"];
		НоваяКартинка.Ширина = 5;
		НоваяКартинка.Высота = 2;
	КонецЦикла;

	ПереключательТиповПО = Перечисления.ТипыПодключаемогоОборудования[0];

КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если ТипЗнч(ВыбраннаяСтрока) <> Тип("СправочникСсылка.ПодключаемоеОборудование") Тогда
		Если Элементы.СписокУстройств.Развернут(ВыбраннаяСтрока) Тогда
			Элементы.СписокУстройств.Свернуть(ВыбраннаяСтрока);
		Иначе
			Элементы.СписокУстройств.Развернуть(ВыбраннаяСтрока);
		КонецЕсли;

		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВсеТипыОборудованияПриИзменении(Элемент)

	УстановитьОтборыГруппировки(ЭтаФорма);


	Элементы.ПереключательТиповПО.Доступность = (Не ВсеТипыОборудования);

	Если Элементы.СписокУстройств.ТекущаяСтрока <> Неопределено Тогда
		Элементы.СписокУстройств.Развернуть(Элементы.СписокУстройств.ТекущаяСтрока, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствПриАктивизацииСтроки(Элемент)

	Если Элементы.Найти("Настроить") <> Неопределено Тогда
		Элементы.Настроить.Доступность = (ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СправочникСсылка.ПодключаемоеОборудование"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВсеРабочиеМестаПриИзменении(Элемент)

	УстановитьОтборыГруппировки(ЭтаФорма);
	
	Элементы.ГруппироватьПоРабочемуМесту.Доступность = ВсеРабочиеМеста;

	Если Элементы.СписокУстройств.ТекущаяСтрока <> Неопределено Тогда
		Элементы.СписокУстройств.Развернуть(Элементы.СписокУстройств.ТекущаяСтрока, Истина);
	КонецЕсли;


КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьПоРабочемуМестуПриИзменении(Элемент)

	УстановитьОтборыГруппировки(ЭтаФорма);

	Если Элементы.СписокУстройств.ТекущаяСтрока <> Неопределено Тогда
		Элементы.СписокУстройств.Развернуть(Элементы.СписокУстройств.ТекущаяСтрока, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыГруппировки(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокУстройств, "РабочееМесто", Форма.ТекущееРабочееМесто, ВидСравненияКомпоновкиДанных.Равно,,     (Не Форма.ВсеРабочиеМеста));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокУстройств, "ТипОборудования", Форма.ПереключательТиповПО, ВидСравненияКомпоновкиДанных.Равно,, (Не Форма.ВсеТипыОборудования));
	
	
	ПоляГруппировки = Форма.СписокУстройств.Группировка;
	
	ПоляГруппировки.Элементы.Очистить();
	
	ПолеГруппировки = ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("РабочееМесто");
	ПолеГруппировки.Использование = Форма.ВсеРабочиеМеста И Форма.ГруппироватьПоРабочемуМесту;
	
	ПолеГруппировки = ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("ТипОборудования");
	ПолеГруппировки.Использование = Форма.ВсеТипыОборудования;

КонецПроцедуры

&НаКлиенте
Процедура СписокРабочихМест(Команда)

	ОткрытьФормуМодально("Справочник.РабочиеМеста.ФормаСписка");

КонецПроцедуры

&НаКлиенте
Процедура СписокУдаленныхУстройств(Команда)

	ОткрытьФормуМодально("РегистрСведений.ПодключаемоеОборудованиеПоРабочимМестам.ФормаСписка");

КонецПроцедуры



