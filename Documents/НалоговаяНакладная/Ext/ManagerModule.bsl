Функция ПолучитьСтруктуруПечатныхФорм() Экспорт

	СтруктураПечатныхФорм = Новый Структура("НалоговаяНакладная", "Налоговая накладная");
	СтруктураПечатныхФорм.Вставить("НалоговаяНакладнаяАльбом", "Налоговая накладная (альбом. ориент.)");
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	СинонимыМакетов = ПолучитьСтруктуруПечатныхФорм();
	
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НалоговаяНакладная") Тогда
	Для каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		
		СинонимМакета = ПечатнаяФорма.СинонимМакета;
		Если Не ЗначениеЗаполнено(СинонимМакета) Тогда
			Если НЕ СинонимыМакетов.Свойство(ПечатнаяФорма.ИмяМакета, СинонимМакета) Тогда
				СинонимМакета = "Налоговая накладная";	
			КонецЕсли;
		КонецЕсли;
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ПечатнаяФорма.ИмяМакета) Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ПечатнаяФорма.ИмяМакета, СинонимМакета, ПечатьДокумента(МассивОбъектов, ОбъектыПечати, ,ПечатнаяФорма.ИмяМакета));
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

// Функция формирует табличный документ с регламентированной печатной формой 
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДокумента(МассивОбъектов, ОбъектыПечати, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ИмяМакета = "НалоговаяНакладная") Экспорт	
	
	Запрос = Новый Запрос;	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Организация,
	|	ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Если ЗначениеЗаполнено(Шапка.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены) И НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбщегоНазначения.ПолучитьРабочуюДату() >= глЗначениеПеременной("ДатаВступленияВСилуПриказа1307") Тогда
			
			// начиная с 04.2016 выгрузка в ЕРНН должна осуществляется по форме НА ДАТУ РЕГИСТРАЦИИ??!!
			// проверим соответствующую настройку (возможно данное положение со временем будет отменено)
			ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента = Ложь;
			УчетнаяПолитикаРегл	= ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(ОбщегоНазначения.ПолучитьРабочуюДату(), Шапка.Организация);
			Если УчетнаяПолитикаРегл <> Неопределено Тогда
				ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента = УчетнаяПолитикаРегл.ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента;
			КонецЕсли;
			
			Если ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента = Ложь Тогда
			    // печатную форму выбираем в зависимости не от даты док, а от рабочей даты
				Если ОбщегоНазначения.ПолучитьРабочуюДату() >= глЗначениеПеременной("ДатаВступленияВСилуПриказа276") Тогда
					Возврат ПечатьДокументаНалоговыйКодекс2017(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
				ИначеЕсли ОбщегоНазначения.ПолучитьРабочуюДату() >= глЗначениеПеременной("ДатаВступленияВСилуПриказа1307") Тогда
					Возврат ПечатьДокументаНалоговыйКодекс2016(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;	
		
		Если Шапка.Дата >= глЗначениеПеременной("ДатаВступленияВСилуПриказа276") Тогда
			Возврат ПечатьДокументаНалоговыйКодекс2017(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
		ИначеЕсли Шапка.Дата >= глЗначениеПеременной("ДатаВступленияВСилуПриказа1307") Тогда			
			Возврат ПечатьДокументаНалоговыйКодекс2016(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
		ИначеЕсли Шапка.Дата >= '2015-01-01' Тогда
			Возврат ПечатьДокументаНалоговыйКодекс2015(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
		ИначеЕсли Шапка.Дата >= глЗначениеПеременной("ДатаВступленияВСилуПриказа957") Тогда
			Возврат ПечатьДокументаНалоговыйКодекс2014Мес12(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
		ИначеЕсли Шапка.Дата >= глЗначениеПеременной("ДатаВступленияВСилуПриказа10") Тогда
			Возврат ПечатьДокументаНалоговыйКодекс2014(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
		ИначеЕсли Шапка.Дата >= глЗначениеПеременной("ДатаВступленияВСилуПриказа1379")   Тогда
		    Возврат ПечатьДокументаНалоговыйКодекс2012(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати, ИмяМакета);
		Иначе	
			Возврат ПечатьДокументаНалоговыйКодекс(Ссылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ОбъектыПечати);
		КонецЕсли;
		
	КонецЦикла; 	
	
КонецФункции  //ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2017(НалоговаяНакладнаяСсылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ОбъектыПечати = Неопределено, ИмяМакета = "НалоговаяНакладнаяАльбом")
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", НалоговаяНакладнаяСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	СпецРежимНалогообложения,
	|
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.НеЯвляетсяРезидентом КАК КонтрагентНеРезидент,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЛьготаНДС,
	|	СуммаДокумента,
	|	ВидОперации,
	
	|	Сводная,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН,
	
	|	ПродажаНижеОбычнойЦены,
	|	НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены,
	|	ВалютаДокумента
	|
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru = 'Документ является служебным и не может быть выгружен в XML!'; uk = 'Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		Если Шапка.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнениеКНаименованиюОрганизации = "";
	Если ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата, Истина, Неопределено, "uk");
		
		ДополнениеКНаименованиюОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) + ", " ;
	
	КонецЕсли;
	
	Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата, Истина, Неопределено, "uk");
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = ПодготовитьСтруктуруШапкиДокумента(Отказ,, Шапка.Организация, НалоговаяНакладнаяСсылка); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2016" + ИмяМакета;

	Макет = ПолучитьОбщийМакет("НалоговаяНакладная2017Альбом");
	Макет.КодЯзыкаМакета = "ru";
	
	ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, Шапка.ВидОперации, НалоговаяНакладнаяСсылка);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть(
		"КодВид, КодСХ, Номенклатура, Характеристика, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы", 
		"Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"
	);   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для служебных целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
	Если ЗначениеЗаполнено(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указываются
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= "500000000000";
		НомерСвидетельстваОрганизации	= "0";		
		НазваниеОрганизации				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		Страна = "";
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
		Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	КонтактнаяИнформация.Поле1,
		               |	КонтактнаяИнформация.Поле10
		               |ИЗ
		               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |ГДЕ
		               |	КонтактнаяИнформация.Объект = &Объект
		               |	И КонтактнаяИнформация.Тип = &Тип
		               |	И КонтактнаяИнформация.Вид = &Вид";
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
			Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
			Если ЗначениеЗаполнено(Поле1) Тогда
				Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
					// в Поле1 находится индекс
					Страна = Поле10;
				Иначе
					Страна = Поле1;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
				Страна = Поле10;
			КонецЕсли;
			Страна = СокрЛП(Страна);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Страна регистрации в налоговой накладной заполнена не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Країна реєстрації в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли; 
		
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		
	Иначе	
		
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			ФилиалПокупателя = "";			
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;

	Иначе
		
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		
		НазваниеКонтрагента				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			
			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = "";
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
			Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
			Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
			
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			               |	КонтактнаяИнформация.Поле1,
			               |	КонтактнаяИнформация.Поле10
			               |ИЗ
			               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			               |ГДЕ
			               |	КонтактнаяИнформация.Объект = &Объект
			               |	И КонтактнаяИнформация.Тип = &Тип
			               |	И КонтактнаяИнформация.Вид = &Вид";
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
				Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
				Если ЗначениеЗаполнено(Поле1) Тогда
					Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
						// в Поле1 находится индекс
						Страна = Поле10;
					Иначе
						Страна = Поле1;
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
					Страна = Поле10;
				КонецЕсли;
				Страна = СокрЛП(Страна);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Страна регистрации в налоговой накладной заполнена не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Країна реєстрації в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли; 
							
		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл

		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		Если (    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
			  
			  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
			  
		КонецЕсли;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		Если НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной вместе с итогами
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G7", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G109", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G8", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G10", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСумма = 0; ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ВсегоСумма = СтрокаТаблицы.Сумма;
			ИтогНДС    = СтрокаТаблицы.СуммаНДС;
		КонецЦикла;
		
		СуммаВозвратнойТары = 0;
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.Всего    = ОбщегоНазначения.ФорматСумм(ИтогНДС + ВсегоСумма);
		ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначения.ФорматСумм(ИтогНДС);
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G11", ИтогНДС);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11", СуммаВозвратнойТары);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03",		ОбластьМакетаЗаголовок.Параметры.Сводная);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
 			
		КонецЕсли;
		
		// строки 
		Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = НалоговыйУчет.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												  + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")");
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
			
			ОбластьМакета.Параметры.Сумма     = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.Сумма;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.Сумма = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
					
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "грн";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5 			= ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6 			= ОбластьМакета.Параметры.ЦенаБезНДС;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				
			КонецЕсли;
			
		КонецЦикла;
		
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла; 

	Если Шапка.ПродажаНижеОбычнойЦены ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
	
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			// все что мы напечатали по обычной НН не имеет смысла для этого вида операции
			// нужна только "вторая НН" как если бы это была не сводная накладная на превыешение базы над ценой продажи
			ТабДокумент.Очистить();	
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				Таблица = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
				Таблица.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R", Таблица);
				
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокумент;	
			КонецЕсли;
		Иначе
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокументЗЦ;
			КонецЕсли;
		КонецЕсли;
	
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			Если (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки) Тогда
				  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
			КонецЕсли;
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
				ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
			
			КонецЕсли;			
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2; ЧВН=");
			КонецЕсли;
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл
				Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
				Иначе
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);	
				КонецЕсли;
			КонецЦикла; 
			
			// код спец. режима
			ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// филиал
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 
			
			// название покупателя = продавца
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// ИНН покупателя = продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Филиал = продавца
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 

			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателйПечатнойФормы.Вставить("H03", 		ОбластьМакетаЗаголовок.Параметры.Сводная);
				
				СтруктураПоказателйПечатнойФормы.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HORIG1",		ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HTYPR",		"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HFILL",		Шапка.Дата);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM",		Прав(ТекНомерОЦ,7));
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM1",		КодСпецРежима);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM2",		ФилиалПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HFBUY",		ФилиалПродавца);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBOS",		ИННКтоВыписалНН);

			КонецЕсли;
			
			// Выводим шапку накладной вместе с итогами
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ВремТаблица = ТаблицаНоменклатуры.Скопировать();
			ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
				Если КолонкаДляСуммы = "20" Тогда
					ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G7", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G109", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "902" Тогда
					ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G8", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "901" Тогда
					ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G9", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "903" Тогда
					ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G10", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВсегоСумма = 0; ИтогНДС   = 0;
			ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы из ВремТаблица Цикл
				ВсегоСумма = СтрокаТаблицы.Сумма;
				ИтогНДС    = СтрокаТаблицы.СуммаНДС;
			КонецЦикла;
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначения.ФорматСумм(ИтогНДС);
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
			ОбластьМакета.Параметры.Всего    = ОбщегоНазначения.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
				СтруктураПоказателйПечатнойФормы.Вставить("R03G11", ИтогНДС);
				СтруктураПоказателйПечатнойФормы.Вставить("R02G11", СуммаВозвратнойТары);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
			
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ДопТекст = " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
			КонецЕсли;	
			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
					ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
					Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
						ОбластьМакета.Параметры.КодЛьготы = "99999999";
					КонецЕсли;
				Иначе
					ОбластьМакета.Параметры.КодЛьготы = "";	
				КонецЕсли;
				
				ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
				
				// п 16. 9) не заполняются данные по номенклатуре:
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
													 + " " + ДопТекст;
													 
				Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				    ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції"
														  + " " + ДопТекст;
				КонецЕсли;

				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
				
				ОбластьМакета.Параметры.Сумма     = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					
					СтрокаСтруктуры = СтруктураПоказателйПечатнойФормы.R.Добавить();
					
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					СтрокаСтруктуры.G4  = ОбластьМакета.Параметры.КодУКТВЭД;
					СтрокаСтруктуры.G32  = ОбластьМакета.Параметры.Импортированный;
					СтрокаСтруктуры.G33  = ОбластьМакета.Параметры.КодДКПП;
					
					СтрокаСтруктуры.G4S     = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G105_2S = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5 = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6 = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					СтрокаСтруктуры.G008  = ОбластьМакета.Параметры.КодСтавки;
					СтрокаСтруктуры.G010  = СтрокаТаблицы.Сумма;
					СтрокаСтруктуры.G011  = ОбластьМакета.Параметры.КодСХ;
					
				КонецЕсли;				
					
			КонецЦикла;
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			// ДРФО того, кто выписал НН
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
			КонецЦикла; 
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		Возврат СтруктураПоказателей;
	Иначе	
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, НалоговаяНакладнаяСсылка);
		КонецЕсли; 
		
		Возврат ТабДокумент;
	КонецЕсли;
	
КонецФункции // ПечатьДокументаНалоговыйКодекс2016

Функция ПечатьДокументаНалоговыйКодекс2016(НалоговаяНакладнаяСсылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ОбъектыПечати = Неопределено, ИмяМакета = "НалоговаяНакладнаяАльбом")
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", НалоговаяНакладнаяСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	СпецРежимНалогообложения,
	|
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.НеЯвляетсяРезидентом КАК КонтрагентНеРезидент,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЛьготаНДС,
	|	СуммаДокумента,
	|	ВидОперации,
	
	|	Сводная,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН,
	
	|	ПродажаНижеОбычнойЦены,
	|	НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены,
	|	ВалютаДокумента
	|
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru = 'Документ является служебным и не может быть выгружен в XML!'; uk = 'Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		Если Шапка.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнениеКНаименованиюОрганизации = "";
	Если ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата, Истина, Неопределено, "uk");
		
		ДополнениеКНаименованиюОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) + ", " ;
	
	КонецЕсли;
	
	Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата, Истина, Неопределено, "uk");
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = ПодготовитьСтруктуруШапкиДокумента(Отказ,, Шапка.Организация, НалоговаяНакладнаяСсылка); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2016" + ИмяМакета;

	Макет = ПолучитьОбщийМакет("НалоговаяНакладная2016");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьОбщийМакет("НалоговаяНакладная2016Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, Шапка.ВидОперации, НалоговаяНакладнаяСсылка);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть(
		"Номенклатура, Характеристика, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы", 
		"Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"
	);   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для служебных целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
	Если ЗначениеЗаполнено(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указываются
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= "500000000000";
		НомерСвидетельстваОрганизации	= "0";		
		НазваниеОрганизации				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		Страна = "";
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
		Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	КонтактнаяИнформация.Поле1,
		               |	КонтактнаяИнформация.Поле10
		               |ИЗ
		               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |ГДЕ
		               |	КонтактнаяИнформация.Объект = &Объект
		               |	И КонтактнаяИнформация.Тип = &Тип
		               |	И КонтактнаяИнформация.Вид = &Вид";
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
			Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
			Если ЗначениеЗаполнено(Поле1) Тогда
				Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
					// в Поле1 находится индекс
					Страна = Поле10;
				Иначе
					Страна = Поле1;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
				Страна = Поле10;
			КонецЕсли;
			Страна = СокрЛП(Страна);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Страна регистрации в налоговой накладной заполнена не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Країна реєстрації в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли; 
		
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		
	Иначе	
		
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			ФилиалПокупателя = "";			
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;

	Иначе
		
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		
		НазваниеКонтрагента				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			
			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = "";
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
			Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
			Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
			
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			               |	КонтактнаяИнформация.Поле1,
			               |	КонтактнаяИнформация.Поле10
			               |ИЗ
			               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			               |ГДЕ
			               |	КонтактнаяИнформация.Объект = &Объект
			               |	И КонтактнаяИнформация.Тип = &Тип
			               |	И КонтактнаяИнформация.Вид = &Вид";
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
				Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
				Если ЗначениеЗаполнено(Поле1) Тогда
					Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
						// в Поле1 находится индекс
						Страна = Поле10;
					Иначе
						Страна = Поле1;
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
					Страна = Поле10;
				КонецЕсли;
				Страна = СокрЛП(Страна);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Страна регистрации в налоговой накладной заполнена не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Країна реєстрації в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли; 
							
		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл

		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		Если (    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
			  
			  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
			  
		КонецЕсли;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		Если НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной вместе с итогами
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G7", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G109", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G8", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G10", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСумма = 0; ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ВсегоСумма = СтрокаТаблицы.Сумма;
			ИтогНДС    = СтрокаТаблицы.СуммаНДС;
		КонецЦикла;
		
		СуммаВозвратнойТары = 0;
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.Всего    = ОбщегоНазначения.ФорматСумм(ИтогНДС + ВсегоСумма);
		ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначения.ФорматСумм(ИтогНДС);
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G11", ИтогНДС);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11", СуммаВозвратнойТары);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03",		ОбластьМакетаЗаголовок.Параметры.Сводная);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
 			
		КонецЕсли;
		
		// строки 
		Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = НалоговыйУчет.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												  + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")");
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
			
			ОбластьМакета.Параметры.Сумма     = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.Сумма;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.Сумма = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
					
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "грн";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5 			= ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6 			= ОбластьМакета.Параметры.ЦенаБезНДС;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				
			КонецЕсли;
			
		КонецЦикла;
		
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла; 

	Если Шапка.ПродажаНижеОбычнойЦены Тогда	
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
				ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
			
			КонецЕсли;			
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// код спец. режима
			ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// филиал
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 
			
			// название покупателя = продавца
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// ИНН покупателя = продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Филиал = продавца
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 

			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S",ОбластьМакетаЗаголовок.Параметры.Освобожденная);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",	КодСпецРежима);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",	ФилиалПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFBUY",	ФилиалПродавца);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",	ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",	ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HBOS",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBOS",	ИННКтоВыписалНН);

			КонецЕсли;
			
			// Выводим шапку накладной вместе с итогами
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ВремТаблица = ТаблицаНоменклатуры.Скопировать();
			ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
				Если КолонкаДляСуммы = "20" Тогда
					ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G7", СтрокаТаблицы.Сумма);
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G109", СтрокаТаблицы.Сумма);
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "902" Тогда
					ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G8", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "901" Тогда
					ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G9", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "903" Тогда
					ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма);
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G10", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВсегоСумма = 0; ИтогНДС   = 0;
			ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы из ВремТаблица Цикл
				ВсегоСумма = СтрокаТаблицы.Сумма;
				ИтогНДС    = СтрокаТаблицы.СуммаНДС;
			КонецЦикла;
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначения.ФорматСумм(ИтогНДС);
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
			ОбластьМакета.Параметры.Всего    = ОбщегоНазначения.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G11", ИтогНДС);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R02G11", СуммаВозвратнойТары);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
					ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
					Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
						ОбластьМакета.Параметры.КодЛьготы = "99999999";
					КонецЕсли;
				Иначе
					ОбластьМакета.Параметры.КодЛьготы = "";	
				КонецЕсли;
				
				ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
				
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = НалоговыйУчет.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
				
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
													 + " " + ДопТекст;
													 
				Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				    ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції"
														  + " " + ДопТекст;
				КонецЕсли;

				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата));
				
				ОбластьМакета.Параметры.Сумма     = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					СтрокаСтруктуры.G4  = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S     = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G105_2S = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5 = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6 = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					СтрокаСтруктуры.G008  = ОбластьМакета.Параметры.КодСтавки;
					//СтрокаСтруктуры.G009  = ОбластьМакета.Параметры.КодЛьготы;
					СтрокаСтруктуры.G010  = СтрокаТаблицы.Сумма;
					
				КонецЕсли;				
					
			КонецЦикла;
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			// ДРФО того, кто выписал НН
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
			КонецЦикла; 
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		Возврат СтруктураПоказателей;
	Иначе	
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, НалоговаяНакладнаяСсылка);
		КонецЕсли; 
		
		Возврат ТабДокумент;
	КонецЕсли;
	
КонецФункции // ПечатьДокументаНалоговыйКодекс2016

Функция ПечатьДокументаНалоговыйКодекс2015(НалоговаяНакладнаяСсылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ОбъектыПечати = Неопределено, ИмяМакета = "НалоговаяНакладнаяАльбом")
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", НалоговаяНакладнаяСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.НеЯвляетсяРезидентом КАК КонтрагентНеРезидент,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	СуммаДокумента,
	|	ВидОперации,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную,
	|	ПодтверждаетсяГТД,
	|	ПоставкаДипПредставительству,
	|
	|	ПродажаНижеОбычнойЦены,
	|	НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены,
	|	ВалютаДокумента
	|
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G42");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G109");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru = 'Документ является служебным и не может быть выгружен в XML!'; uk = 'Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		Если Шапка.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	
	УчетнаяПолитика	= ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Шапка.Дата, Шапка.Организация);
	УчетнаяПолитикаНеЗадана = (УчетнаяПолитика = Неопределено);
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = УчетнаяПолитика.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
	КонецЕсли;
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата, Истина, Неопределено, "uk");
		
		ДополнениеКНаименованиюОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдресПочтовый,",  Ложь)  + " - " ;
	
	КонецЕсли;
	
	Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата, Истина, Неопределено, "uk");
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = ПодготовитьСтруктуруШапкиДокумента(Отказ,, Шапка.Организация, НалоговаяНакладнаяСсылка); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2015" + ИмяМакета;

	Макет = ПолучитьОбщийМакет("НалоговаяНакладная2015");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьОбщийМакет("НалоговаяНакладная2015Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, Шапка.ВидОперации, НалоговаяНакладнаяСсылка);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть(
		"ДатаОтгрузкиОплаты, Номенклатура, Характеристика, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС", 
		"Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"
	);   	
	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
	Если ЗначениеЗаполнено(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указываются
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "500000000000");
		НомерСвидетельстваОрганизации	= "0";		
		НазваниеОрганизации				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		АдресОрганизации = "";
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
		Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	КонтактнаяИнформация.Поле1,
		               |	КонтактнаяИнформация.Поле10
		               |ИЗ
		               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |ГДЕ
		               |	КонтактнаяИнформация.Объект = &Объект
		               |	И КонтактнаяИнформация.Тип = &Тип
		               |	И КонтактнаяИнформация.Вид = &Вид";
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
			Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
			Если ЗначениеЗаполнено(Поле1) Тогда
				Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
					// в Поле1 находится индекс
					СтранаНерезидента = Поле10;
				Иначе
					СтранаНерезидента = Поле1;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
				СтранаНерезидента = Поле10;
			КонецЕсли;
			АдресОрганизации = СокрЛП(СтранаНерезидента);
		КонецЕсли;
		
		Если ПустаяСтрока(АдресОрганизации) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		КонецЕсли; 
		
		// остальные данные (телефон) не заполняется
		ТекТелефоныОрганизации = "";
		
		
		
	Иначе	
		
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НомерСвидетельстваОрганизации 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце, "Телефоны,", Ложь);
		
	КонецЕсли;
	
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
	
	// телефон
	ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);

	Иначе
		
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		
		НазваниеКонтрагента				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдресПочтовый,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		
		Если  Шапка.ПоставкаДипПредставительству = Истина 
			И Шапка.ТипПричиныНевыдачиПокупателю <=2 Тогда
			
			ИННКонтрагента = "400000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			АдресКонтрагента = "";
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
			Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
			Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
			
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			               |	КонтактнаяИнформация.Поле1,
			               |	КонтактнаяИнформация.Поле10
			               |ИЗ
			               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			               |ГДЕ
			               |	КонтактнаяИнформация.Объект = &Объект
			               |	И КонтактнаяИнформация.Тип = &Тип
			               |	И КонтактнаяИнформация.Вид = &Вид";
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
				Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
				Если ЗначениеЗаполнено(Поле1) Тогда
					Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
						// в Поле1 находится индекс
						СтранаНерезидента = Поле10;
					Иначе
						СтранаНерезидента = Поле1;
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
					СтранаНерезидента = Поле10;
				КонецЕсли;
				АдресКонтрагента = СокрЛП(СтранаНерезидента);
			КонецЕсли;
			
			Если ПустаяСтрока(АдресКонтрагента) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			КонецЕсли; 
							
			ТекТелефоныКонтрагента = "";

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			АдресКонтрагента = "";
			ТекТелефоныКонтрагента = "";
			
		КонецЕсли;
		
		
	КонецЕсли; 
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// телефон
	ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл

		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		ОбластьМакетаЗаголовок.Параметры.СоглашениеОРазделеПродукции = ?(Шапка.СоглашениеОРазделеПродукции = Истина, "Х", "");
		
		Если НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H_1",		ОбластьМакетаЗаголовок.Параметры.СоглашениеОРазделеПродукции);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;
 			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = НалоговыйУчет.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												  + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")");
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G42 = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		// в макете жестко прописан крестик, но п. 13 говорит иногда делать в этом поле пометку...
		ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "";
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			
			// Итоги
			Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
				// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "7" Тогда 
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла; 

	Если Шапка.ПродажаНижеОбычнойЦены Тогда	
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// данные покупателя равны данным поставщика
			
			// название покупателя                        
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// адрес покупателя                           
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресОрганизации;
			
			// телефон покупателя                       
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации Цикл                      
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                       
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);

			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	АдресОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	АдресОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",	Шапка.ДатаДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",	ТекНомерДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	"");	
	 			
			КонецЕсли;
			
			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			ЭтоПерваяСтрока = Истина;
			
			Если ЗначениеЗаполнено(НомерФилиала) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима) + "/" + СокрЛ(НомерФилиала);
			ИначеЕсли ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = НалоговыйУчет.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
				
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
													 +" "+ ДопТекст;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G42 = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "7" Тогда
						СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЦикла;
			
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "";
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
						
				// Итоги
				Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
					ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "7" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		Возврат СтруктураПоказателей;
	Иначе	
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, НалоговаяНакладнаяСсылка);
		КонецЕсли; 
		
		Возврат ТабДокумент;
	КонецЕсли;
	
КонецФункции // ПечатьДокументаНалоговыйКодекс2015

Функция ПечатьДокументаНалоговыйКодекс2014Мес12(НалоговаяНакладнаяСсылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ОбъектыПечати = Неопределено, ИмяМакета = "НалоговаяНакладнаяАльбом")
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", НалоговаяНакладнаяСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.НеЯвляетсяРезидентом КАК КонтрагентНеРезидент,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	СуммаДокумента,
	|	ВидОперации,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную,
	|	ПодтверждаетсяГТД,
	|	ПоставкаДипПредставительству,
	|
	|	ПродажаНижеОбычнойЦены,
	|	НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены,
	|	ВалютаДокумента
	|
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G109");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		Если Шапка.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
		
	КонецЕсли;
	
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	
	УчетнаяПолитика	= ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Шапка.Дата, Шапка.Организация);
	УчетнаяПолитикаНеЗадана = (УчетнаяПолитика = Неопределено);
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = УчетнаяПолитика.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
	КонецЕсли;
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата, Истина, Неопределено, "uk");
		
		ДополнениеКНаименованиюОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдресПочтовый,",  Ложь)  + " - " ;
	
	КонецЕсли;
	
	Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата, Истина, Неопределено, "uk");
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = ПодготовитьСтруктуруШапкиДокумента(Отказ,, Шапка.Организация, НалоговаяНакладнаяСсылка); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2014_Мес12" + ИмяМакета;

	Макет = ПолучитьОбщийМакет("НалоговаяНакладная2014Мес12");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьОбщийМакет("НалоговаяНакладная2014Мес12Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, Шапка.ВидОперации, НалоговаяНакладнаяСсылка);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть(
			"ДатаОтгрузкиОплаты, Номенклатура, Характеристика, КодУКТВЭД, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", 
			"Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"
	);   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
	Если ЗначениеЗаполнено(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указываются
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НомерСвидетельстваОрганизации	= "0";		
		НазваниеОрганизации				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		АдресОрганизации = "";
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
		Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	КонтактнаяИнформация.Поле1,
		               |	КонтактнаяИнформация.Поле10
		               |ИЗ
		               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |ГДЕ
		               |	КонтактнаяИнформация.Объект = &Объект
		               |	И КонтактнаяИнформация.Тип = &Тип
		               |	И КонтактнаяИнформация.Вид = &Вид";
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
			Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
			Если ЗначениеЗаполнено(Поле1) Тогда
				Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
					// в Поле1 находится индекс
					СтранаНерезидента = Поле10;
				Иначе
					СтранаНерезидента = Поле1;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
				СтранаНерезидента = Поле10;
			КонецЕсли;
			АдресОрганизации = СокрЛП(СтранаНерезидента);
		КонецЕсли;
		
		Если ПустаяСтрока(АдресОрганизации) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		КонецЕсли; 
		
		// остальные данные (телефон) не заполняется
		ТекТелефоныОрганизации = "";
		
		
		
	Иначе	
		
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НомерСвидетельстваОрганизации 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце, "Телефоны,", Ложь);
		
	КонецЕсли;
	
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
	
	// телефон
	ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);

	Иначе
		
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		
		НазваниеКонтрагента				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдресПочтовый,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		
		Если  Шапка.ПоставкаДипПредставительству = Истина 
			И Шапка.ТипПричиныНевыдачиПокупателю <=2 Тогда
			
			ИННКонтрагента = "400000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			АдресКонтрагента = "";
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
			Запрос.УстановитьПараметр("Объект", Шапка.Контрагент);
			Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
			
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			               |	КонтактнаяИнформация.Поле1,
			               |	КонтактнаяИнформация.Поле10
			               |ИЗ
			               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			               |ГДЕ
			               |	КонтактнаяИнформация.Объект = &Объект
			               |	И КонтактнаяИнформация.Тип = &Тип
			               |	И КонтактнаяИнформация.Вид = &Вид";
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Поле1  = РезультатЗапроса.Выгрузить()[0].Поле1;
				Поле10 = РезультатЗапроса.Выгрузить()[0].Поле10;
				Если ЗначениеЗаполнено(Поле1) Тогда
					Если Найти("0123456789", Лев(СокрЛ(Поле1), 1)) > 0 Тогда
						// в Поле1 находится индекс
						СтранаНерезидента = Поле10;
					Иначе
						СтранаНерезидента = Поле1;
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(Поле10) Тогда
					СтранаНерезидента = Поле10;
				КонецЕсли;
				АдресКонтрагента = СокрЛП(СтранаНерезидента);
			КонецЕсли;
			
			Если ПустаяСтрока(АдресКонтрагента) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			КонецЕсли; 
							
			ТекТелефоныКонтрагента = "";

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "400000000000";
			НазваниеКонтрагента = "Неплатник";
			АдресКонтрагента = "";
			ТекТелефоныКонтрагента = "";
			
		КонецЕсли;
		
		
	КонецЕсли; 
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// телефон
	ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2 Тогда
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента 
				ИЛИ (Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД) Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
			
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			
		КонецЕсли;
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Шапка.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных;
		ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент 							 = Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД;
		Если Шапка.ЭлектронныйДокумент = Ложь ИЛИ Шапка.ПодтверждаетсяГТД = Истина Тогда
			Если Страница = 2 Тогда
				// копия - всегда остается у продавца
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца  = "Х";
				
			Иначе
				
				// оргинал
				Если  Шапка.ТипПричиныНевыдачиПокупателю = 0 ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
					
					// НН, для которой тип причины невыдачи - продажа ниже обычных цен выдается покупателю, вторая пара накладных (собстенно на превышение) - нет
					ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
				Иначе
					
					// накладная остается у поставщика
					ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
					ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
					ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HEL",	    Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;
 			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
				
		
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												  + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")");
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		// в макете жестко прописан крестик, но п. 13 говорит иногда делать в этом поле пометку...
		ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "Х";
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			
			// Итоги
			Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
				// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S", "Х");
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "7" Тогда               
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда           
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если Шапка.ПродажаНижеОбычнойЦены И НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
			
			Если  Страница = 2 Тогда
				
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
				
			КонецЕсли;
		
			ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
			Если  Страница = 2 Тогда
				// копия - накладная остается у поставщика 
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
			Иначе	
				// оригинал, но все копии остаются у поставщика
				ОбластьМакета.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				// безоплатная поставка тип причины - "12"
				Если Шапка.СуммаДокумента = 0 Тогда
					ОбластьМакета.Параметры.ТипПричины1 = "1";
					ОбластьМакета.Параметры.ТипПричины2 = "2";
				КонецЕсли;
			КонецЕсли;	
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// данные покупателя равны данным поставщика
			
			// название покупателя                        
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// адрес покупателя                           
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресОрганизации;
			
			// телефон покупателя                       
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации Цикл                      
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                       
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HEL",	Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HCOPY",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	АдресОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	АдресКонтрагента);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",	Шапка.ДатаДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",	ТекНомерДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	"");	
	 			
			КонецЕсли;

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
													 +" "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "7" Тогда
						СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЦикла;
			
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "Х";
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
						
				// Итоги
				Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
					ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S", "Х");
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "7" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		Возврат СтруктураПоказателей;
	Иначе	
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, НалоговаяНакладнаяСсылка);
		КонецЕсли; 
		
		Возврат ТабДокумент;
	КонецЕсли;
	
КонецФункции // ПечатьДокументаНалоговыйКодекс2014Мес12

Функция ПечатьДокументаНалоговыйКодекс2014(НалоговаяНакладнаяСсылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ОбъектыПечати = Неопределено, ИмяМакета = "НалоговаяНакладнаяАльбом")
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", НалоговаяНакладнаяСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.НеЯвляетсяРезидентом КАК КонтрагентНеРезидент,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	СуммаДокумента,
	|	ВидОперации,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную,
	|	ПодтверждаетсяГТД,
	|
	|	ПродажаНижеОбычнойЦены,
	|	НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены,
	|	ВалютаДокумента
	|
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		НалоговаяНакладнаяОбъект = НалоговаяНакладнаяСсылка.ПолучитьОбъект();
		Если глЗначениеПеременной("ДатаНачалаИспользованияФормыННПоЛекарствам") > НалоговаяНакладнаяОбъект.Дата  Тогда
			Если НалоговаяНакладнаяОбъект.ВДокументеЕстьСтавкаНДС7ИДругиеСтавки() Тогда
				Возврат СтруктураПоказателей;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	
	УчетнаяПолитика	= ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Шапка.Дата, Шапка.Организация);
	УчетнаяПолитикаНеЗадана = (УчетнаяПолитика = Неопределено);
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = УчетнаяПолитика.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
	КонецЕсли;
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата, Истина, Неопределено, "uk");
		
		ДополнениеКНаименованиюОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдресПочтовый,",  Ложь)  + " - " ;
	
	КонецЕсли;
	
	Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата, Истина, Неопределено, "uk");
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = ПодготовитьСтруктуруШапкиДокумента(Отказ,, Шапка.Организация, НалоговаяНакладнаяСсылка); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_" + ИмяМакета;

	Макет = ПолучитьОбщийМакет("НалоговаяНакладная2014");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьОбщийМакет("НалоговаяНакладная2014Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, Шапка.ВидОперации, НалоговаяНакладнаяСсылка);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть(
			"ДатаОтгрузкиОплаты, Номенклатура, Характеристика, КодУКТВЭД, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", 
			"Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"
	);   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
	Если ЗначениеЗаполнено(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указываются
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НомерСвидетельстваОрганизации	= "0";		
		НазваниеОрганизации				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
			АдресОрганизации 			= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдресПочтовый,",  Ложь)	
										  + " - " + АдресОрганизации;
		КонецЕсли;
		
	Иначе	
		
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НомерСвидетельстваОрганизации 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
	
	// телефон
	ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце, "Телефоны,", Ложь);
	ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
	Иначе
		
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		
		НазваниеКонтрагента				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдресПочтовый,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "400000000000";
		КонецЕсли; 
		
	КонецЕсли; 
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// телефон
	ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2 Тогда
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента 
				ИЛИ (Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД) Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
			
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			
		КонецЕсли;
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Шапка.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных;
		ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент 							 = Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД;
		Если Шапка.ЭлектронныйДокумент = Ложь ИЛИ Шапка.ПодтверждаетсяГТД = Истина Тогда
			Если Страница = 2 Тогда
				// копия - всегда остается у продавца
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца  = "Х";
				
			Иначе
				
				// оргинал
				Если  Шапка.ТипПричиныНевыдачиПокупателю = 0 ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
					
					// НН, для которой тип причины невыдачи - продажа ниже обычных цен выдается покупателю, вторая пара накладных (собстенно на превышение) - нет
					ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
				Иначе
					
					// накладная остается у поставщика
					ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
					ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
					ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HEL",	Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;
 			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
				
		
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												  + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")");
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для Каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			
			// Итоги
			ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			Если СуффиксКолонки = "БезНДС" Тогда
				// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			ИначеЕсли СуффиксКолонки = "0Укр"
				  ИЛИ СуффиксКолонки = "0Эксп" Тогда
				// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				Если НЕ Шапка.СпецРежимНалогообложения = 7 Тогда
					ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Укр" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если Шапка.ПродажаНижеОбычнойЦены И НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
			
			Если  Страница = 2 Тогда
				
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
				
			КонецЕсли;
		
			ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
			Если  Страница = 2 Тогда
				// копия - накладная остается у поставщика 
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
			Иначе	
				// оригинал, но все копии остаются у поставщика
				ОбластьМакета.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				// безоплатная поставка тип причины - "12"
				Если Шапка.СуммаДокумента = 0 Тогда
					ОбластьМакета.Параметры.ТипПричины1 = "1";
					ОбластьМакета.Параметры.ТипПричины2 = "2";
				КонецЕсли;
			КонецЕсли;	
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// название покупателя
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
			
			// адрес покупателя
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
			
			// телефон покупателя
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
			КонецЦикла;

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
													 +" "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
					
			КонецЦикла;
			
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
						
				// Итоги
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				Если СуффиксКолонки = "БезНДС" Тогда
					// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
				ИначеЕсли СуффиксКолонки = "0Укр"
					  ИЛИ СуффиксКолонки = "0Эксп" Тогда
					// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					Если НЕ Шапка.СпецРежимНалогообложения = 7 Тогда
						ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
					КонецЕсли;
					ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Укр" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		Возврат СтруктураПоказателей;
	Иначе	
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, НалоговаяНакладнаяСсылка);
		КонецЕсли; 
		
		Возврат ТабДокумент;
	КонецЕсли;
	
КонецФункции // ПечатьДокументаНалоговыйКодекс2014

// Функция формирует табличный документ с регламентированной печатной формой 
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДокументаНалоговыйКодекс(НалоговаяНакладнаяСсылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ОбъектыПечати = Неопределено) Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;

	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", НалоговаяНакладнаяСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ВключенаВЕдиныйРеестрНалоговыхНакладных,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Организация,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	ВидОперации,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	КтоВыписалНалоговуюНакладную.Представление КАК КтоВыписалНалоговуюНакладную,
	|	ПродажаНижеОбычнойЦены,
	|	Контрагент.НеЯвляетсяРезидентом КАК КонтрагентНеРезидент,
	|	НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены,
	|	ВалютаДокумента
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5_");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
		СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
	КонецЕсли;
	
	
	СимволДляПустыхПоказателей = "X";
	ВыводитьНомерДоговораБезКлеточек = Ложь;
	УчетнаяПолитика	= ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Шапка.Дата, Шапка.Организация);
	УчетнаяПолитикаНеЗадана = (УчетнаяПолитика = Неопределено);
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		СимволДляПустыхПоказателей = УчетнаяПолитика.СимволПустыхПоказателейВНалоговойНакладной; 
		ВыводитьНомерДоговораБезКлеточек = УчетнаяПолитика.ВыводитьНомерДоговораБезКлеточек; 
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = ПодготовитьСтруктуруШапкиДокумента(Отказ,, Шапка.Организация, НалоговаяНакладнаяСсылка); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_НалоговаяНакладная";

	Макет = ПолучитьОбщийМакет("НалоговаяНакладная2011");
	
	
	
	ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, Шапка.ВидОперации, НалоговаяНакладнаяСсылка);
	
	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть(
		"ДатаОтгрузкиОплаты, Номенклатура, Характеристика, ТекстДляПечатиВКолонкеКоличество, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", 
		"Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"
	);   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	Для Страница = 1 По 2 Цикл
	
		// Выводим область оригинал/копия
		Если Страница = 1 Тогда
			
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			
			Если Шапка.ТипПричиныНевыдачиПокупателю = 0  Тогда
				
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 1  Тогда	
				
				// т.к. причина лишь превышение над обычной ценой, то первый экземпляр таки должен быть выдан покупателю
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			Иначе
				
				// накладная остается у поставщика
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
				ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
			
		ИначеЕсли Страница = 2 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ПерваяКопия");
			ТабДокумент.Вывести(ОбластьМакета);
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		КонецЕсли;
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим
		ТекНомерФилиал = "";
		Если ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения) Тогда
			ТекНомерФилиал	= "" + Шапка.СпецРежимНалогообложения + ТекНомерФилиал; 
		КонецЕсли;
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 


		Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			// налоговые реквизиты не указыватюся
			СведенияОПродавце   			= УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
			ИННОрганизации					= "0";
			НомерСвидетельстваОрганизации	= "0"	
		Иначе	
			СведенияОПродавце   			= УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
			ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
			НомерСвидетельстваОрганизации 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);
		КонецЕсли;
		
		ОбластьМакета.Параметры.НазваниеОрганизации           = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		ОбластьМакета.Параметры.АдресОрганизации              = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
		
		// телефон
		ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
		ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
		ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныОрганизации);

		Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		ИННОрганизации = Прав("            " + ИННОрганизации, 12);
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
		КонецЦикла; 
		
		Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
		  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			// в этом случае контрагентом выступает организация
			СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		Иначе
			СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		КонецЕсли; 
		
		ОбластьМакета.Параметры.НазваниеКонтрагента           = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,",Ложь);
		ОбластьМакета.Параметры.АдресКонтрагента              = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		
		// телефон
		ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
		ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныКонтрагента);

		Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;

		НомерСвидетельстваКонтрагента                         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
			ИЛИ НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
			НомерСвидетельстваКонтрагента = "0";
		КонецЕсли; 
		НомерСвидетельстваКонтрагента = Прав("            " + НомерСвидетельстваКонтрагента, 10);
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
		КонецЦикла; 

		ИННКонтрагента                                        = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН,"               ,Ложь);
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
			ИЛИ НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "0";
		КонецЕсли; 
		ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
		Если ЗначениеЗаполнено(ТекНомерДоговора) Тогда
			Для Инд = 1 По 6 Цикл
				ОбластьМакета.Параметры["НомерДоговора_"+Инд]    = Сред(ТекНомерДоговора, Инд, 1);
			КонецЦикла; 
		КонецЕсли;
		
		Если ВыводитьНомерДоговораБезКлеточек = Истина Тогда
			ОбластьНомера = ОбластьМакета.Область("НомерДоговора");	
		    ОбластьНомера.Объединить();
			ОбластьМакета.Параметры.НомерДоговора_1 = ТекНомерДоговора;
		КонецЕсли;
		
		
		ТекДатаДоговора = Шапка.ДатаДоговора;
		Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
			ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла; 
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	""+ОбластьМакетаЗаголовок.Параметры.ТипПричины1+ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	"");
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2,3));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVSEL",НомерСвидетельстваОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVBUY",НомерСвидетельстваКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	Шапка.КтоВыписалНалоговуюНакладную);
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;

			Если Шапка.ПродажаНижеОбычнойЦены Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG",		СтруктураПоказателей.НалоговыйДокумент.HORIG);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",		СтруктураПоказателей.НалоговыйДокумент.HORIG1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HERPN",		СтруктураПоказателей.НалоговыйДокумент.HERPN);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",		1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HCOPY",		СтруктураПоказателей.НалоговыйДокумент.HCOPY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",		СтруктураПоказателей.НалоговыйДокумент.HFILL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",		СтруктураПоказателей.НалоговыйДокумент.HNUM);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",		СтруктураПоказателей.НалоговыйДокумент.HNUM1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",		СтруктураПоказателей.НалоговыйДокумент.HNUM2);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	СтруктураПоказателей.НалоговыйДокумент.HNAMESEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	СтруктураПоказателей.НалоговыйДокумент.HNAMEBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		СтруктураПоказателей.НалоговыйДокумент.HKSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		СтруктураПоказателей.НалоговыйДокумент.HKBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVSEL",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVBUY",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	СтруктураПоказателей.НалоговыйДокумент.HLOCSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	СтруктураПоказателей.НалоговыйДокумент.HLOCBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	СтруктураПоказателей.НалоговыйДокумент.HTELSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	СтруктураПоказателей.НалоговыйДокумент.HTELBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",		СтруктураПоказателей.НалоговыйДокумент.H01G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",		СтруктураПоказателей.НалоговыйДокумент.H01G2D);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",		СтруктураПоказателей.НалоговыйДокумент.H01G3S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",		СтруктураПоказателей.НалоговыйДокумент.H02G1S);
                СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",		СтруктураПоказателей.НалоговыйДокумент.H10G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	СтруктураПоказателей.НалоговыйДокумент.R003G10S);
			
			КонецЕсли;
			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
				ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
			КонецЕсли;
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить("В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
			
			// номенклатура с учетом характеристики
			ОбластьМакета.Параметры.Номенклатура = "" + СтрокаТаблицы.Номенклатура + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")");
			
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
				СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"_");
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим итог по I разделу
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
						
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
					
			// Итоги
			ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			Если СуффиксКолонки = "БезНДС" Тогда
				// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			ИначеЕсли СуффиксКолонки = "0Укр"
				  ИЛИ СуффиксКолонки = "0Эксп" Тогда
				// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
				ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Укр" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла; 

	
	Если Шапка.ПродажаНижеОбычнойЦены Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
		
			// Выводим область оригинал/копия
			Если Страница = 1 Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
				
				ОбластьМакета.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
				
				// накладная остается у поставщика
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				
				ТабДокумент.Вывести(ОбластьМакета);
				
			ИначеЕсли Страница = 2 Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ПерваяКопия");
				ТабДокумент.Вывести(ОбластьМакета);
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			КонецЕсли;

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Если ЗначениеЗаполнено(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
			    ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены)), 7);
			Иначе	
				ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
			КонецЕсли;
			
			Для Инд = 1 По 7 Цикл                                                                 
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
			КонецЦикла; 
			
			// филиал/спецрежим
			ТекНомерФилиал = "";
			Если ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения) Тогда
				ТекНомерФилиал	= "" + Шапка.СпецРежимНалогообложения + ТекНомерФилиал; 
			КонецЕсли;
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
					
			Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
				// налоговые реквизиты не указыватюся
				СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
				ИННОрганизации					= "0";
				НомерСвидетельстваОрганизации	= "0"	
			Иначе	
				СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
				ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
				НомерСвидетельстваОрганизации 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);
			КонецЕсли;
			ОбластьМакета.Параметры.НазваниеОрганизации           = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
			ОбластьМакета.Параметры.АдресОрганизации              = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
			
			// телефон
			ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
			ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
			ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныОрганизации);

			Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			ИННОрганизации = Прав("            " + ИННОрганизации, 12);
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
			КонецЦикла; 
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
	   			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
				// в этом случае контрагентом выступает организация
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
			Иначе
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
			КонецЕсли; 
			
			ОбластьМакета.Параметры.НазваниеКонтрагента           = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,",Ложь);
			ОбластьМакета.Параметры.АдресКонтрагента              = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
			
			// телефон
			ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
			ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
			ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныКонтрагента);

			Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
			КонецЦикла;
			
			НомерСвидетельстваКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
	   			ИЛИ НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			    ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
				НомерСвидетельстваКонтрагента = "0";
			КонецЕсли; 
			НомерСвидетельстваКонтрагента = Прав("            " + НомерСвидетельстваКонтрагента, 10);
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
			КонецЦикла; 

			ИННКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
	   			ИЛИ НЕ ЗначениеЗаполнено(ИННКонтрагента)
			    ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
				ИННКонтрагента = "0";
			КонецЕсли; 
			ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
			КонецЦикла; 
			
			ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
			Если ЗначениеЗаполнено(ТекНомерДоговора) Тогда
				Для Инд = 1 По 6 Цикл
					ОбластьМакета.Параметры["НомерДоговора_"+Инд]    = Сред(ТекНомерДоговора, Инд, 1);
				КонецЦикла; 
			КонецЕсли;
			
			Если ВыводитьНомерДоговораБезКлеточек = Истина Тогда
				ОбластьНомера = ОбластьМакета.Область("НомерДоговора");	
			    ОбластьНомера.Объединить();
				ОбластьМакета.Параметры.НомерДоговора_1 = ТекНомерДоговора;
			КонецЕсли;
			
			ТекДатаДоговора = Шапка.ДатаДоговора;
			Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
				ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
				Для Инд = 1 По 8 Цикл
					ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
				КонецЦикла; 
			КонецЕсли;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
					ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
				КонецЕсли;
			
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить("В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!", СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом характеристики и текста дополнения
				ОбластьМакета.Параметры.Номенклатура = "" + СтрокаТаблицы.Номенклатура + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
					+ " "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
				
				
				ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
					СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"");
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЦикла;
			
		
			// Выводим итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			
			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, , Шапка.Дата);
						
				// Итоги
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				Если СуффиксКолонки = "БезНДС" Тогда
					// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ ";
				ИначеЕсли СуффиксКолонки = "0Укр"
					  ИЛИ СуффиксКолонки = "0Эксп" Тогда
					// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
					ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Укр" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10",	СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;	
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, НалоговаяНакладнаяСсылка);
		КонецЕсли; 
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции  //ПечатьДокументаНалоговыйКодекс()

// Функция формирует табличный документ с регламентированной печатной формой 
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДокументаНалоговыйКодекс2012(НалоговаяНакладнаяСсылка, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ОбъектыПечати = Неопределено, ИмяМакета = "НалоговаяНакладнаяАльбом") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", НалоговаяНакладнаяСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ВключенаВЕдиныйРеестрНалоговыхНакладных,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВидОперации,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	СуммаДокумента,
	|	Контрагент.НеЯвляетсяРезидентом КАК КонтрагентНеРезидент,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	ВидОперации,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	КтоВыписалНалоговуюНакладную.Представление КАК КтоВыписалНалоговуюНакладную,
	|	ПродажаНижеОбычнойЦены,
	|	НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены,
	|	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ВключенаВЕдиныйРеестрНалоговыхНакладных,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ВалютаДокумента
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Если НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы 	= Истина
		  И Шапка.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных 	= Истина
		  И Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных 			= Ложь Тогда
	
		Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 должна быть зарегистрирована в Едином реестре!"
"Нельзя выдавать покупателю печатный документ до регистрации в Едином реестре!';uk='%1 має бути зареєстрована у Єдиному реєстрі податкових накладних!"
"Не можна видавати покупцю друкований документ до реєстрації у Єдиному реєстрі!'")
									   , НалоговаяНакладнаяСсылка)
			   , СтатусСообщения.ОченьВажное);			
	
	КонецЕсли;
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5_");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
		СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
	КонецЕсли;
	
	
	СимволДляПустыхПоказателей = "X";
	ПечататьКодУКТВЭДБезПробелов = Ложь;
	ПечататьДатыБезРазделителей = Ложь;
	ДополнитьНазваниеНомеромГТД = Ложь;
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	УчетнаяПолитика	= ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Шапка.Дата, Шапка.Организация);
	УчетнаяПолитикаНеЗадана = (УчетнаяПолитика = Неопределено);
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		СимволДляПустыхПоказателей 		= УчетнаяПолитика.СимволПустыхПоказателейВНалоговойНакладной; 
		ПечататьКодУКТВЭДБезПробелов	= УчетнаяПолитика.ПечататьКодУКТВЭДБезПробелов; 
		ПечататьДатыБезРазделителей		= НЕ УчетнаяПолитика.ПечататьДатыВНалоговыхНакладныхСРазделителями; 
		ДополнитьНазваниеНомеромГТД    	= НЕ УчетнаяПолитика.НеДополнятьНаименованиеНомеромГТДВНалоговыхДокументах; 
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = УчетнаяПолитика.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
	КонецЕсли;
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата, Истина, Неопределено, "uk");
		
		ДополнениеКНаименованиюОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдресПочтовый,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата, Истина, Неопределено, "uk");	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = ПодготовитьСтруктуруШапкиДокумента(Отказ,, Шапка.Организация, НалоговаяНакладнаяСсылка); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_" + ИмяМакета;

	Макет = ПолучитьОбщийМакет("НалоговаяНакладная2012");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьОбщийМакет("НалоговаяНакладная2012Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	
	ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, Шапка.ВидОперации, НалоговаяНакладнаяСсылка);
	
	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть(
		"ДатаОтгрузкиОплаты, Номенклатура, Характеристика, КодУКТВЭД, НомерГТД, ДатаГТД, ТекстДляПечатиВКолонкеКоличество, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", 
		"Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"
	);   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(НалоговаяНакладнаяСсылка)), 7);
	Если ЗначениеЗаполнено(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("0000" + СокрЛП(Шапка.Префикс), 4), "");  //число, сведущими нулями, 4 символа 
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НомерСвидетельстваОрганизации	= "0";
		НазваниеОрганизации				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
			АдресОрганизации 			= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдресПочтовый,",  Ложь)	
										  + " - " + АдресОрганизации;
		КонецЕсли;
		
	Иначе	
		
		СведенияОПродавце   		    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		ИННОрганизации					= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НомерСвидетельстваОрганизации 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдресПочтовый,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
	
	// телефон
	ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
	ТекТелефоныОрганизации = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата, Истина, Неопределено, "uk");
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			НомерСвидетельстваКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
			ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
		    НомерСвидетельстваКонтрагента = "0";
			ИННКонтрагента 				  = "0";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
	Иначе
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата, Истина, Неопределено, "uk");
		
		НазваниеКонтрагента				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдресПочтовый,",  Ложь);
		Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдресПочтовый,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		НомерСвидетельстваКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
		ИННКонтрагента 				  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
			НомерСвидетельстваКонтрагента = "0";
		КонецЕсли;		
		
		Если НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "0";
		КонецЕсли; 
		
	КонецЕсли; 
	НомерСвидетельстваКонтрагента = Прав("            " + НомерСвидетельстваКонтрагента, 10);
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	Если  Шапка.Дата >= '2014-01-01'
		И СокрЛП(НомерСвидетельстваКонтрагента) = "0"
		И НЕ СокрЛП(ИННКонтрагента) = "0" Тогда
		НомерСвидетельстваКонтрагента = "";	
	КонецЕсли;
	
	// телефон
	ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	ТекТелефоныКонтрагента = ФормированиеПечатныхФормСервер.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2
			И Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			// печатаем в одном экземпляре
			Продолжить;
		КонецЕсли;

		// Выводим область оригинал/копия
		Если Страница = 1 Тогда
			
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			
			Если Шапка.ТипПричиныНевыдачиПокупателю = 0  Тогда
				
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 1  Тогда	
				
				// т.к. причина лишь превышение над обычной ценой, то первый экземпляр таки должен быть выдан покупателю
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			Иначе
				
				// накладная остается у поставщика
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
				ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
			
		ИначеЕсли Страница = 2 Тогда
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("ПерваяКопия");
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		КонецЕсли;
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// Номер свидетельства продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		// Номер свидетельства покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
		КонецЦикла; 

		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	""+ОбластьМакетаЗаголовок.Параметры.ТипПричины1+ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	"");
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVSEL",НомерСвидетельстваОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVBUY",НомерСвидетельстваКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	Шапка.КтоВыписалНалоговуюНакладную);
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;

			Если Шапка.ПродажаНижеОбычнойЦены Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG",		СтруктураПоказателей.НалоговыйДокумент.HORIG);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",		СтруктураПоказателей.НалоговыйДокумент.HORIG1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HERPN",		СтруктураПоказателей.НалоговыйДокумент.HERPN);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",		1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HCOPY",		СтруктураПоказателей.НалоговыйДокумент.HCOPY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",		СтруктураПоказателей.НалоговыйДокумент.HFILL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",		СтруктураПоказателей.НалоговыйДокумент.HNUM);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",		СтруктураПоказателей.НалоговыйДокумент.HNUM1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",		СтруктураПоказателей.НалоговыйДокумент.HNUM2);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	СтруктураПоказателей.НалоговыйДокумент.HNAMESEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	СтруктураПоказателей.НалоговыйДокумент.HNAMEBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		СтруктураПоказателей.НалоговыйДокумент.HKSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		СтруктураПоказателей.НалоговыйДокумент.HKBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVSEL",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVBUY",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	СтруктураПоказателей.НалоговыйДокумент.HLOCSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	СтруктураПоказателей.НалоговыйДокумент.HLOCBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	СтруктураПоказателей.НалоговыйДокумент.HTELSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	СтруктураПоказателей.НалоговыйДокумент.HTELBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",		СтруктураПоказателей.НалоговыйДокумент.H01G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",		СтруктураПоказателей.НалоговыйДокумент.H01G2D);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",		СтруктураПоказателей.НалоговыйДокумент.H01G3S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",		СтруктураПоказателей.НалоговыйДокумент.H02G1S);
                СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",		СтруктураПоказателей.НалоговыйДокумент.H10G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	СтруктураПоказателей.НалоговыйДокумент.R003G10S);
			
			КонецЕсли;
			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
		Если ПечататьДатыБезРазделителей Тогда
			ОбластьМакета.Области.ДатаОтгрузкиОплаты.Формат = "ДФ=ddMMyyyy";	
		КонецЕсли;
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			Если ПечататьКодУКТВЭДБезПробелов Тогда
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
				ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
			КонецЕсли;
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить("В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
			
			// номенклатура с учетом характеристики
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура) 
												 + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
												 + ?(ДополнитьНазваниеНомеромГТД И ЗначениеЗаполнено(СтрокаТаблицы.НомерГТД), ". ВМД №: " + СтрокаТаблицы.НомерГТД + ", дата ВМД: " + Формат(СтрокаТаблицы.ДатаГТД, ?(ПечататьДатыБезРазделителей,"ДФ=ddMMyyyy","ДФ=dd.MM.yyyy")), "");
												 ;
												 
			
			
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
				СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"");
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим итог по I разделу
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
						
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары, ,СимволДляПустыхПоказателей);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
					
			// Итоги
			ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			Если СуффиксКолонки = "БезНДС" Тогда
				// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			ИначеЕсли СуффиксКолонки = "0Укр"
				  ИЛИ СуффиксКолонки = "0Эксп" Тогда
				// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
				ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Укр" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла; 

	
	Если Шапка.ПродажаНижеОбычнойЦены Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
		
			Если  Страница = 2
				И Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
			
			// Выводим область оригинал/копия
			Если Страница = 1 Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
				
				// накладная остается у поставщика
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				
				// безоплатная поставка тип причины - "12"
				Если Шапка.СуммаДокумента = 0 Тогда
					ОбластьМакета.Параметры.ТипПричины1 = "1";
					ОбластьМакета.Параметры.ТипПричины2 = "2";
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакета);
				
			ИначеЕсли Страница = 2 Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ПерваяКопия");
				ТабДокумент.Вывести(ОбластьМакета);
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			КонецЕсли;

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
				
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Номер свидетельства продавца
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
			КонецЦикла; 
			
			// название покупателя
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
			
			// адрес покупателя
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
			
			// телефон покупателя
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
			КонецЦикла;
			
			// Номер свидетельства покупателя
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
			КонецЦикла; 

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			Если ПечататьДатыБезРазделителей Тогда
				ОбластьМакета.Области.ДатаОтгрузкиОплаты.Формат = "ДФ=ddMMyyyy";	
			КонецЕсли;
			
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если ПечататьКодУКТВЭДБезПробелов Тогда
					ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
					ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
				КонецЕсли;
			
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Шапка.Дата;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить("В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!", СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом характеристики и текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура) 
													 + ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.Характеристика), "", "(" + СтрокаТаблицы.Характеристика +")")
													 + ?(ДополнитьНазваниеНомеромГТД И ЗначениеЗаполнено(СтрокаТаблицы.НомерГТД), ". ВМД №: " + СтрокаТаблицы.НомерГТД + ", дата ВМД: " + Формат(СтрокаТаблицы.ДатаГТД, ?(ПечататьДатыБезРазделителей,"ДФ=ddMMyyyy","ДФ=dd.MM.yyyy")), "")
													 +" "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены
													 ;
					
				
				ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
					СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"");
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЦикла;
			
		
			// Выводим итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначения.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			
			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначения.ФорматСумм(СуммаВозвратнойТары, ,СимволДляПустыхПоказателей);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, Шапка.ВалютаДокумента, Шапка.КонтрагентНеРезидент, Шапка.Дата);
						
				// Итоги
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				Если СуффиксКолонки = "БезНДС" Тогда
					// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ ";
				ИначеЕсли СуффиксКолонки = "0Укр"
					  ИЛИ СуффиксКолонки = "0Эксп" Тогда
					// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
					ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Укр" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначения.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначения.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;	
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 1, ОбъектыПечати, НалоговаяНакладнаяСсылка);
		КонецЕсли; 
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции  //ПечатьДокументаНалоговыйКодекс()

// В функции описано, какие данные следует сохранять в шаблоне
Функция СтруктураДополнительныхДанныхФормы() Экспорт
	
	Возврат ХранилищаНастроек.ДанныеФорм.СформироватьСтруктуруДополнительныхДанных("Товары,ВозвратнаяТара,Услуги,ОС,НематериальныеАктивы");
	
КонецФункции

// Функция по СтавкеНДС определяет суффикс имени параметра табличного документа:
// фактически колонкку таблицы налоговой накладной 20%, 0%... где должна отображаться соответствующая сумма
//
Функция ОпределитьКолонкуТаблицы(СтавкаНДС=Неопределено, ВалютаДокумента, КонтрагентНеРезидент = Ложь, ДатаДокумента)
	
	мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");

	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		Если НЕ ВалютаДокумента  = мВалютаРегламентированногоУчета
			// если это поставка на экспорт в гривнях - определим это по признаку нерезидентности контрагента
			ИЛИ КонтрагентНеРезидент = Истина 
			Тогда
			
			Возврат "0Эксп";
			
		Иначе
			
			Возврат "0Укр";
			
		КонецЕсли;
	ИначеЕсли  СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		Возврат "БезНДС";
	ИначеЕсли  СтавкаНДС = Перечисления.СтавкиНДС.НДС7 Тогда
		Если глЗначениеПеременной("ДатаНачалаИспользованияФормыННПоЛекарствам") <= ДатаДокумента Тогда
			Возврат "7";	
		Иначе	
			Возврат "0Укр";	
		КонецЕсли;
	Иначе
		Возврат "20";	
	КонецЕсли;
	
КонецФункции

Функция ОпределитьКодСтавки(ИмяКолонки)

	Если ИмяКолонки = "0Эксп" Тогда
		Возврат "901";	
	ИначеЕсли ИмяКолонки = "0Укр" Тогда
		Возврат "902";		
	ИначеЕсли ИмяКолонки = "БезНДС" Тогда
		Возврат "903";		
	ИначеЕсли ИмяКолонки = "7" Тогда
		Возврат "7";	
	Иначе
		Возврат "20";	
	КонецЕсли;	

КонецФункции // ОпределитьКодСтавки()


Функция ПодготовитьСтруктуруШапкиДокумента(Отказ, Заголовок = "", Организация, ЭтотОбъект)
	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента;
	
    мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");

	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке      = УправлениеЗапасами.СформироватьДеревоПолейЗапросаПоШапке();

	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "ВалютаУправленческогоУчета"                  , "ВалютаУправленческогоУчета");
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "КурсВалютыУправленческогоУчета"              , "КурсВалютыУправленческогоУчета");

	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "ДоговорКонтрагента", "Организация"                      , "ДоговорОрганизация");
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "ДоговорКонтрагента", "ВидДоговора"                      , "ВидДоговора");
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке,  "ДоговорКонтрагента", "ВедениеВзаиморасчетовРегл"                 , "ВедениеВзаиморасчетовРегл");
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета);

	// дополним структуру значением виртуального реквизита
	СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчете", Истина);
	
	// Прежде всего, проверим заполнение реквизита Организация в шапке документа
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	// Теперь позовем общую процедуру проверки
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Организация не заполнена, получать учетную политику нет смысла
	Если Отказ Тогда
		Возврат СтруктураШапкиДокумента;
	КонецЕсли;
	
	УчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(КонецМесяца(ЭтотОбъект.Дата), Организация,истина, Заголовок);
	
	Если НЕ Отказ Тогда
		СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыль"             , УчетнаяПолитикаРегл.ЕстьНалогНаПрибыль);
		СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыльДо2015"       , УчетнаяПолитикаРегл.ЕстьНалогНаПрибыльДо2015);
		СтруктураШапкиДокумента.Вставить("ЕстьНДС"                        , УчетнаяПолитикаРегл.ЕстьНДС);
	КонецЕсли;
	
	Возврат СтруктураШапкиДокумента;
	
КонецФункции

Процедура ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА, ВидОперации, ЭтотОбъект)
	
	
	ПогрешностиОкругления     = Новый Соответствие;
	ПогрешностиОкругленияПревышение = Новый Соответствие;
	ПогрешностиОкругленияТара = Новый Соответствие;

	
	// ТОВАРЫ
	// Получим необходимые для проведения и проверки заполнения данные по табличной части "Товары".
	СтруктураПолей        = Новый Структура();
    СтруктураПростыхПолей = Новый Структура();
	СтруктураСложныхПолей = Новый Структура();
	
	СтруктураПолей.Вставить("Номенклатура"              , "Номенклатура.НаименованиеПолное");
	СтруктураПолей.Вставить("КодУКТВЭД"                 , "КодУКТВЭД");
	СтруктураПолей.Вставить("КодВид"              	    , "КодУКТВЭД.Вид");
	СтруктураПолей.Вставить("КодСХ"              	    , "КодУКТВЭД.КодСХДеятельности");
	СтруктураПолей.Вставить("НомерГТД"              	, "НомерГТД.Код");
	СтруктураПолей.Вставить("ДатаГТД"              	    , "НомерГТД.Дата");
	СтруктураПолей.Вставить("ЕдиницаИзмерения"          , "ЕдиницаИзмерения.Наименование");
	СтруктураПолей.Вставить("ЕдиницаИзмеренияКод"       , "ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код");
	СтруктураПолей.Вставить("КодЛьготы"                 , "Номенклатура.КодЛьготы");
	СтруктураПолей.Вставить("Количество"            	, "Количество");	
	СтруктураПолей.Вставить("Цена"                      , "Цена");	
	СтруктураПолей.Вставить("Сумма"                     , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"                 , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"                       , "СуммаНДС");
	СтруктураПолей.Вставить("ПроцентСкидкиНаценки"      , "ПроцентСкидкиНаценки");
	СтруктураПолей.Вставить("ПроцентАвтоСкидкиНаценки"	, "ПроцентАвтоматическихСкидок");
	СтруктураПолей.Вставить("Характеристика"			, "ХарактеристикаНоменклатуры");
	СтруктураСложныхПолей.Вставить("СчетУчетаНДС"    	, "ВЫБОР КОГДА СчетУчетаНДС = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) ТОГДА Ссылка.СчетУчетаНДС ИНАЧЕ СчетУчетаНДС КОНЕЦ");
	СтруктураПолей.Вставить("НалоговоеНазначение"  , "НалоговоеНазначение");
	СтруктураПолей.Вставить("ДатаОтгрузкиОплаты"  		, "ДатаОтгрузкиОплаты");
	СтруктураПолей.Вставить("СтатьяКнигиПродаж"  		, "СтатьяКнигиПродаж");
	СтруктураПолей.Вставить("СуммаПревышения"           , "СуммаПревышения");
	СтруктураПолей.Вставить("СуммаНДСПревышения"        , "СуммаНДСПревышения");
	СтруктураПолей.Вставить("ТекстДляПечатиВКолонкеКоличество", "Номенклатура.ТекстДляПечатиВКолонкеКоличествоНалоговойНакладной");
	СтруктураПростыхПолей.Вставить("ТовароТранспортная", Ложь);
	
	РезультатЗапросаПоТоварам = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Товары", СтруктураПолей, СтруктураПростыхПолей, СтруктураСложныхПолей);

	// Подготовим таблицу товаров для проведения.
	ТаблицаПоТоварам = ПодготовитьТаблицуТоваров(РезультатЗапросаПоТоварам, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение,ЭтотОбъект);
	
	Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОблагаемыеОперации 
		ИЛИ СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации Тогда
		Если СтруктураШапкиДокумента.Дата < '2015-01-01' Тогда
			ТаблицаПоТоварам.ЗаполнитьЗначения("", "Количество,ЕдиницаИзмерения,ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл");
		КонецЕсли;
	КонецЕсли;

	// УСЛУГИ
	// Получим необходимые для проведения и проверки заполнения данные 
	// по табличной части "Услуги".
	СтруктураПолей        = Новый Структура();
	СтруктураПростыхПолей = Новый Структура();
	СтруктураСложныхПолей = Новый Структура();
	
	СтруктураПолей.Вставить("Номенклатура"              , "Содержание");
	СтруктураПолей.Вставить("КодУКТВЭД"					, "КодУКТВЭД");
	СтруктураПолей.Вставить("КодВид"              	    , "КодУКТВЭД.Вид");
	СтруктураПростыхПолей.Вставить("КодСХ"				, "");
	СтруктураПростыхПолей.Вставить("НомерГТД"           , "");
	СтруктураПростыхПолей.Вставить("ДатаГТД"            , "");
	СтруктураПолей.Вставить("ЕдиницаИзмерения"          , "Номенклатура.БазоваяЕдиницаИзмерения.Наименование");
	СтруктураПолей.Вставить("ЕдиницаИзмеренияКод"       , "Номенклатура.БазоваяЕдиницаИзмерения.Код");
	СтруктураПолей.Вставить("КодЛьготы"          , "Номенклатура.КодЛьготы");
	СтруктураПолей.Вставить("Количество"            	, "Количество");
	СтруктураПолей.Вставить("Цена"                      , "Цена");		
	СтруктураПолей.Вставить("Сумма"                     , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"                 , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"                       , "СуммаНДС");
	СтруктураСложныхПолей.Вставить("СчетУчетаНДС"    	, "ВЫБОР КОГДА СчетУчетаНДС = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) ТОГДА Ссылка.СчетУчетаНДС ИНАЧЕ СчетУчетаНДС КОНЕЦ");
	СтруктураПолей.Вставить("НалоговоеНазначение"  , "НалоговоеНазначение");
	СтруктураПолей.Вставить("ДатаОтгрузкиОплаты"  		, "ДатаОтгрузкиОплаты");
	СтруктураПолей.Вставить("СтатьяКнигиПродаж"  		, "СтатьяКнигиПродаж");	
	СтруктураПолей.Вставить("ТовароТранспортная"  		, "ТовароТранспортная");	
	СтруктураПолей.Вставить("ПроцентСкидкиНаценки"		, "ПроцентСкидкиНаценки");	
	СтруктураПолей.Вставить("СуммаПревышения"           , "СуммаПревышения");
	СтруктураПолей.Вставить("СуммаНДСПревышения"        , "СуммаНДСПревышения");
	СтруктураПолей.Вставить("ТекстДляПечатиВКолонкеКоличество", "Номенклатура.ТекстДляПечатиВКолонкеКоличествоНалоговойНакладной");
	СтруктураПростыхПолей.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());

	РезультатЗапросаПоУслугам = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Услуги", СтруктураПолей, СтруктураПростыхПолей, СтруктураСложныхПолей);
	
	// Подготовим таблицу Услуг для проведения или печати
	ТаблицаПоУслугам = ПодготовитьТаблицуУслуг(РезультатЗапросаПоУслугам, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение,ЭтотОбъект);

	
	// ОСНОВНЫЕ СРЕДСТВА
	// Получим необходимые для проведения и проверки заполнения данные 
	// по табличной части "ОС".
	СтруктураПолей        = Новый Структура();
	СтруктураПростыхПолей = Новый Структура();
	СтруктураСложныхПолей = Новый Структура();
	
	СтруктураПолей.Вставить("Номенклатура"              , "ОсновноеСредство.НаименованиеПолное");
	СтруктураПолей.Вставить("КодУКТВЭД"                 , "КодУКТВЭД");
	СтруктураПолей.Вставить("КодВид"              	    , "КодУКТВЭД.Вид");
	СтруктураПростыхПолей.Вставить("КодСХ"				, "");
	СтруктураПолей.Вставить("НомерГТД"              	, "НомерГТД.Код");
	СтруктураПолей.Вставить("ДатаГТД"              	    , "НомерГТД.Дата");
	СтруктураПолей.Вставить("Цена"                      , "Сумма");			
	СтруктураПолей.Вставить("Сумма"                     , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"                 , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"                       , "СуммаНДС");
	СтруктураСложныхПолей.Вставить("СчетУчетаНДС"    	, "ВЫБОР КОГДА СчетУчетаНДС = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) ТОГДА Ссылка.СчетУчетаНДС ИНАЧЕ СчетУчетаНДС КОНЕЦ");
	СтруктураПолей.Вставить("НалоговоеНазначение"  , "НалоговоеНазначение");
	СтруктураПолей.Вставить("ДатаОтгрузкиОплаты"  		, "ДатаОтгрузкиОплаты");
	СтруктураПолей.Вставить("СтатьяКнигиПродаж"  		, "СтатьяКнигиПродаж");	
	СтруктураПолей.Вставить("СуммаПревышения"           , "СуммаПревышения");
	СтруктураПолей.Вставить("СуммаНДСПревышения"        , "СуммаНДСПревышения");
	СтруктураПростыхПолей.Вставить("ЕдиницаИзмерения", "шт");
	СтруктураПростыхПолей.Вставить("ЕдиницаИзмеренияКод"          , "2009");
	СтруктураПростыхПолей.Вставить("КодЛьготы", "");
	СтруктураПростыхПолей.Вставить("Количество"  , 1);	
	СтруктураПростыхПолей.Вставить("ПроцентСкидкиНаценки", 0);
    СтруктураПростыхПолей.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
    СтруктураПростыхПолей.Вставить("ТовароТранспортная", Ложь);
	
	РезультатЗапросаПоОС = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураПолей, СтруктураПростыхПолей, СтруктураСложныхПолей);
	
	// Подготовим таблицу Основных Средств для проведения или печати
	ТаблицаПоОС = ПодготовитьТаблицуОС(РезультатЗапросаПоОС, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение,ЭтотОбъект);

	// НЕМАТЕРИАЛЬНЫЕ АКТИВЫ
	// Получим необходимые для проведения и проверки заполнения данные 
	// по табличной части "НематериальныеАктивы".
	СтруктураПолей        = Новый Структура();
	СтруктураПростыхПолей = Новый Структура();
	СтруктураСложныхПолей = Новый Структура();
	
	СтруктураПолей.Вставить("Номенклатура"              , "НематериальныйАктив.НаименованиеПолное");
	СтруктураПолей.Вставить("КодУКТВЭД"                 , "КодУКТВЭД");
	СтруктураПолей.Вставить("КодВид"              	    , "КодУКТВЭД.Вид");
	СтруктураПростыхПолей.Вставить("КодСХ"				, "");
	СтруктураПолей.Вставить("НомерГТД"              	, "НомерГТД.Код");
	СтруктураПолей.Вставить("ДатаГТД"              	    , "НомерГТД.Дата");
	СтруктураПолей.Вставить("Цена"                      , "Сумма");			
	СтруктураПолей.Вставить("Сумма"                     , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"                 , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"                       , "СуммаНДС");
	СтруктураСложныхПолей.Вставить("СчетУчетаНДС"    	, "ВЫБОР КОГДА СчетУчетаНДС = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) ТОГДА Ссылка.СчетУчетаНДС ИНАЧЕ СчетУчетаНДС КОНЕЦ");
	СтруктураПолей.Вставить("НалоговоеНазначение"  , "НалоговоеНазначение");
	СтруктураПолей.Вставить("ДатаОтгрузкиОплаты"  		, "ДатаОтгрузкиОплаты");
	СтруктураПолей.Вставить("СтатьяКнигиПродаж"  		, "СтатьяКнигиПродаж");	
	СтруктураПолей.Вставить("СуммаПревышения"           , "СуммаПревышения");
	СтруктураПолей.Вставить("СуммаНДСПревышения"        , "СуммаНДСПревышения");
	СтруктураПростыхПолей.Вставить("ЕдиницаИзмерения", "шт");
	СтруктураПростыхПолей.Вставить("ЕдиницаИзмеренияКод", "2009");
	СтруктураПростыхПолей.Вставить("КодЛьготы", "");
	СтруктураПростыхПолей.Вставить("Количество"  , 1);	
	СтруктураПростыхПолей.Вставить("ПроцентСкидкиНаценки", 0);
    СтруктураПростыхПолей.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
    СтруктураПростыхПолей.Вставить("ТовароТранспортная", Ложь);
	
	РезультатЗапросаПоНМА = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "НематериальныеАктивы", СтруктураПолей, СтруктураПростыхПолей, СтруктураСложныхПолей);
	
	// Подготовим таблицу Нематериальных активов для проведения или печати
	ТаблицаПоНМА = ПодготовитьТаблицуНМА(РезультатЗапросаПоНМА, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение,ЭтотОбъект);

	// ТАРА
	// Получим необходимые для проведения и проверки заполнения данные 
	// по табличной части "ВозвратнаяТара".
	СтруктураПолей        = Новый Структура();
	СтруктураПростыхПолей = Новый Структура();
	
	СтруктураПолей.Вставить("Сумма"         , "Сумма");
	СтруктураПолей.Вставить("НалоговоеНазначение"  , "НалоговоеНазначение");
	СтруктураПростыхПолей.Вставить("СчетУчетаНДС"  , ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	РезультатЗапросаПоТаре = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ВозвратнаяТара", СтруктураПолей, СтруктураПростыхПолей);

	// Подготовим таблицу тары для проведения или печати.
	ТаблицаПоТаре = ПодготовитьТаблицуТары(РезультатЗапросаПоТаре, СтруктураШапкиДокумента, ПогрешностиОкругленияТара);
	
	ОбщегоНазначенияКлиентСервер.ЗаполнитьСчетУчетаНДСВТаблицеДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам);
	ОбщегоНазначенияКлиентСервер.ЗаполнитьСчетУчетаНДСВТаблицеДокумента(СтруктураШапкиДокумента, ТаблицаПоУслугам);
	
КонецПроцедуры

// Процедура заполняет колонки таблицы товаров, которые будут в дальнейшем использоваться
// для формирования движений  и печати
Процедура ДобавитьКолонкиТоваровРегл(ТаблицаТоваров, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение, ЭтотОбъект) Экспорт
	мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");

	Если ТаблицаТоваров.Колонки.Найти("ПроцентАвтоСкидкиНаценки") = Неопределено Тогда
		ТаблицаТоваров.Колонки.Добавить("ПроцентАвтоСкидкиНаценки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));	
		ТаблицаТоваров.ЗаполнитьЗначения(0, "ПроцентАвтоСкидкиНаценки");	
	КонецЕсли;
	
	Если ТаблицаТоваров.Колонки.Найти("ТекстДляПечатиВКолонкеКоличество") = Неопределено Тогда
		ТаблицаТоваров.Колонки.Добавить("ТекстДляПечатиВКолонкеКоличество", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150)));	
		ТаблицаТоваров.ЗаполнитьЗначения("", "ТекстДляПечатиВКолонкеКоличество");	
	КонецЕсли;
	
	// Суммы в документе в валюте документа
	ТаблицаТоваров.Колонки.Добавить("СуммаБезНДСВал"        , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТоваров.Колонки.Добавить("СуммаНДСВал"           , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТоваров.Колонки.Добавить("СуммаСНДСВал"          , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	// Суммы в документе в валюте регл. учета
	ТаблицаТоваров.Колонки.Добавить("СуммаБезНДСРегл"        , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТоваров.Колонки.Добавить("СуммаНДСРегл"           , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТоваров.Колонки.Добавить("СуммаСНДСРегл"          , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	// Суммы в документе в валюте регл. учета
	ТаблицаТоваров.Колонки.Добавить("СуммаБезНДСПревышенияРегл" , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТоваров.Колонки.Добавить("СуммаНДСПревышенияРегл"    , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТоваров.Колонки.Добавить("СуммаСНДСПревышенияРегл"   , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	// Колонки, необходимые для печати документа
	ТаблицаТоваров.Колонки.Добавить("ЦенаМестаБезНДСБезСкидкиРегл", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,5)));
	ТаблицаТоваров.Колонки.Добавить("СуммаСкидкиБезНДСРегл"   	  , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТоваров.Колонки.Добавить("СуммаБезНДСБезСкидкиРегл"	  , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));	
	ТаблицаТоваров.Колонки.Добавить("ЦенаБезНДСРегл", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(18,2));
	
	
	Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		
		// Рассчитаем суммы в документе в валюте документа
		СтрокаТаблицы.СуммаСНДСВал    = СтрокаТаблицы.Сумма + ?(ЭтотОбъект.СуммаВключаетНДС, 0, СтрокаТаблицы.НДС);
		СтрокаТаблицы.СуммаНДСВал     = СтрокаТаблицы.НДС;
		СтрокаТаблицы.СуммаБезНДСВал  = СтрокаТаблицы.СуммаСНДСВал - СтрокаТаблицы.СуммаНДСВал;
		
		// Рассчитаем суммы в документе в валюте регл. учета
		Если СтруктураШапкиДокумента.ВалютаДокумента = СтруктураШапкиДокумента.ВалютаРегламентированногоУчета Тогда
			СтрокаТаблицы.СуммаСНДСРегл = СтрокаТаблицы.СуммаСНДСВал;
			СтрокаТаблицы.СуммаНДСРегл  = СтрокаТаблицы.СуммаНДСВал;
		Иначе
			// для услуг от нерезидента - база сумма без НДС, поэтому НДС в строке (в валюте) игнорируем
			Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
				
				СтрокаТаблицы.СуммаБезНДСРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаБезНДСВал, 
													СтруктураШапкиДокумента.ВалютаДокумента,
													СтруктураШапкиДокумента.ВалютаРегламентированногоУчета, 
													СтруктураШапкиДокумента.КурсДокумента, 
													СтруктураШапкиДокумента.КурсВалютыРегламентированногоУчета,
													СтруктураШапкиДокумента.КратностьДокумента,
													СтруктураШапкиДокумента.КратностьВалютыРегламентированногоУчета,
													, ПогрешностиОкругления, "СуммаБезНДСРегл");
																
				// НДС строго расчетный, если цены не включат НДС, то НДС из строки игнорируется	
				СтрокаТаблицы.СуммаНДСРегл  = Ценообразование.РассчитатьСуммуНДСсУчетомПогрешности(СтрокаТаблицы.СуммаБезНДСРегл,
													СтруктураШапкиДокумента.УчитыватьНДС,
													Ложь,
													СтрокаТаблицы.СтавкаНДС,
													ПогрешностиОкругления);
				
			    СтрокаТаблицы.СуммаСНДСРегл = СтрокаТаблицы.СуммаБезНДСРегл + СтрокаТаблицы.СуммаНДСРегл;
				
			Иначе
			
				СтрокаТаблицы.СуммаСНДСРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаСНДСВал, 
														СтруктураШапкиДокумента.ВалютаДокумента,
														СтруктураШапкиДокумента.ВалютаРегламентированногоУчета, 
														СтруктураШапкиДокумента.КурсДокумента, 
														СтруктураШапкиДокумента.КурсВалютыРегламентированногоУчета,
														СтруктураШапкиДокумента.КратностьДокумента,
														СтруктураШапкиДокумента.КратностьВалютыРегламентированногоУчета,
														, ПогрешностиОкругления, "СуммаСНДСРегл");
					// не правильно рассчитывать НДС "от обратного" исходя из суммы СНДС уже пересчитанной в грн
					// правильно - рассчитывать от валютной суммы с учетом округления
					СтрокаТаблицы.СуммаНДСРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаНДСВал, 
														СтруктураШапкиДокумента.ВалютаДокумента,
														СтруктураШапкиДокумента.ВалютаРегламентированногоУчета, 
														СтруктураШапкиДокумента.КурсДокумента, 
														СтруктураШапкиДокумента.КурсВалютыРегламентированногоУчета,
														СтруктураШапкиДокумента.КратностьДокумента,
														СтруктураШапкиДокумента.КратностьВалютыРегламентированногоУчета,
														, ПогрешностиОкругления, СтрокаТаблицы.СтавкаНДС);

	        КонецЕсли;		
			
		КонецЕсли;
		СтрокаТаблицы.СуммаБезНДСРегл = СтрокаТаблицы.СуммаСНДСРегл - СтрокаТаблицы.СуммаНДСРегл;
		
		
		// Рассчитаем суммы превыешния в документе в валюте регл. учета
		Если СтруктураШапкиДокумента.ВалютаДокумента = мВалютаРегламентированногоУчета Тогда
			СтрокаТаблицы.СуммаСНДСПревышенияРегл = СтрокаТаблицы.СуммаПревышения + СтрокаТаблицы.СуммаНДСПревышения;
			СтрокаТаблицы.СуммаНДСПревышенияРегл = СтрокаТаблицы.СуммаНДСПревышения;
		Иначе
			
			СтрокаТаблицы.СуммаСНДСПревышенияРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.СуммаПревышения + СтрокаТаблицы.СуммаНДСПревышения, 
												СтруктураШапкиДокумента.ВалютаДокумента,
												СтруктураШапкиДокумента.ВалютаРегламентированногоУчета, 
												СтруктураШапкиДокумента.КурсДокумента, 
												СтруктураШапкиДокумента.КурсВалютыРегламентированногоУчета,
												СтруктураШапкиДокумента.КратностьДокумента,
												СтруктураШапкиДокумента.КратностьВалютыРегламентированногоУчета,
												, ПогрешностиОкругленияПревышение, "СуммаСНДСРегл");
			
			СтрокаТаблицы.СуммаНДСПревышенияРегл  = Ценообразование.РассчитатьСуммуНДСсУчетомПогрешности(СтрокаТаблицы.СуммаСНДСПревышенияРегл,
												СтруктураШапкиДокумента.УчитыватьНДС,
												Истина,
												СтрокаТаблицы.СтавкаНДС,
												ПогрешностиОкругленияПревышение);
		КонецЕсли;
		СтрокаТаблицы.СуммаБезНДСПревышенияРегл = СтрокаТаблицы.СуммаСНДСПревышенияРегл - СтрокаТаблицы.СуммаНДСПревышенияРегл;
		
		
		// Поля, используемые при печати документа
		// Скидка
		ПроцентСкидкиНаценки = СтрокаТаблицы.ПроцентСкидкиНаценки + СтрокаТаблицы.ПроцентАвтоСкидкиНаценки;
		Если ПроцентСкидкиНаценки = 100  Тогда
			СтрокаТаблицы.СуммаСкидкиБезНДСРегл = 0;
		Иначе
			СтрокаТаблицы.СуммаСкидкиБезНДСРегл = ОбщегоНазначения.ОкруглитьСУчетомПогрешности(СтрокаТаблицы.СуммаБезНДСРегл * ПроцентСкидкиНаценки / (100 - ПроцентСкидкиНаценки), 2);			
		КонецЕсли;
		
		// Суммы
		СтрокаТаблицы.СуммаБезНДСБезСкидкиРегл 		= СтрокаТаблицы.СуммаБезНДСРегл + СтрокаТаблицы.СуммаСкидкиБезНДСРегл;
		
		Если  СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОблагаемыеОперации
		  ИЛИ СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации Тогда
		    СтрокаТаблицы.ЦенаМестаБезНДСБезСкидкиРегл = 0;
		ИначеЕсли  СтруктураШапкиДокумента.ВалютаДокумента = СтруктураШапкиДокумента.ВалютаРегламентированногоУчета 
			И НЕ СтруктураШапкиДокумента.СуммаВключаетНДС Тогда
			СтрокаТаблицы.ЦенаМестаБезНДСБезСкидкиРегл = СтрокаТаблицы.Цена;
		Иначе
			СтрокаТаблицы.ЦенаМестаБезНДСБезСкидкиРегл 	= СтрокаТаблицы.СуммаБезНДСБезСкидкиРегл /?(СтрокаТаблицы.Количество = 0, 1, СтрокаТаблицы.Количество);	 
		КонецЕсли;
		
		Если СтрокаТаблицы.Количество = 0 Тогда
			СтрокаТаблицы.ЦенаБезНДСРегл = СтрокаТаблицы.СуммаБезНДСРегл; 
		Иначе	
			Если     СтруктураШапкиДокумента.ВалютаДокумента = СтруктураШапкиДокумента.ВалютаРегламентированногоУчета 
				И НЕ СтруктураШапкиДокумента.СуммаВключаетНДС
				И    СтрокаТаблицы.СуммаСкидкиБезНДСРегл = 0 Тогда
				СтрокаТаблицы.ЦенаБезНДСРегл = 	СтрокаТаблицы.Цена;
			Иначе	
				СтрокаТаблицы.ЦенаБезНДСРегл = СтрокаТаблицы.СуммаБезНДСРегл / СтрокаТаблицы.Количество; 
			КонецЕсли;
		КонецЕсли;
		
		
	КонецЦикла;
	
	БухгалтерскийУчетРасчетовСКонтрагентами.ЗаполнитьСделкуРеглВТаблице(ТаблицаТоваров, СтруктураШапкиДокумента);
	
КонецПроцедуры

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоТоварам - результат запроса по табличной части "Товары",
//  СтруктураШапкиДокумента   - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблиица значений.
//
Функция ПодготовитьТаблицуТоваров(РезультатЗапросаПоТоварам, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение, ЭтотОбъект)

	ТаблицаТоваров = РезультатЗапросаПоТоварам.Выгрузить();
	
	ДобавитьКолонкиТоваровРегл(ТаблицаТоваров, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение, ЭтотОбъект);

	Если    ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОблагаемыеОперации
		ИЛИ ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
		ИЛИ ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОблагаемыеОперации
		ИЛИ ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		// очистим колонку ВидНалоговой деятельности
		
		ТаблицаТоваров.ЗаполнитьЗначения(Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка(), "НалоговоеНазначение");
				
	КонецЕсли;

	
	Возврат ТаблицаТоваров;

КонецФункции // ПодготовитьТаблицуТоваров()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоТоварам - результат запроса по табличной части "Товары",
//  СтруктураШапкиДокумента   - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблиица значений.
//
Функция ПодготовитьТаблицуУслуг(РезультатЗапросаПоУслугам, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение, ЭтотОбъект)

	ТаблицаПоУслугам = ПодготовитьТаблицуТоваров(РезультатЗапросаПоУслугам, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение, ЭтотОбъект);
	Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
		И СтруктураШапкиДокумента.Дата >= глЗначениеПеременной("ДатаВступленияВСилуЗУ643")
		И СтруктураШапкиДокумента.Дата < глЗначениеПеременной("ДатаВступленияВСилуПриказа1307") Тогда
		
		Для Каждого СтрокаУслуги Из ТаблицаПоУслугам Цикл
		
			СтрокаУслуги.Количество = 0;	
			СтрокаУслуги.ЦенаБезНДСРегл = 0;
			СтрокаУслуги.ЕдиницаИзмеренияКод = "";
			СтрокаУслуги.ЕдиницаИзмерения = "грн";
		
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат ТаблицаПоУслугам;

КонецФункции // ПодготовитьТаблицуУслуг()

Функция ПодготовитьТаблицуОС(РезультатЗапросаПоОС, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение, ЭтотОбъект)

	Возврат  ПодготовитьТаблицуТоваров(РезультатЗапросаПоОС, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение,ЭтотОбъект);

КонецФункции // ПодготовитьТаблицуОС()

Функция ПодготовитьТаблицуНМА(РезультатЗапросаПоНМА, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение,ЭтотОбъект)

	Возврат  ПодготовитьТаблицуТоваров(РезультатЗапросаПоНМА, СтруктураШапкиДокумента, ПогрешностиОкругления, ПогрешностиОкругленияПревышение,ЭтотОбъект);

КонецФункции // ПодготовитьТаблицуНМА()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоТаре  - результат запроса по табличной части "ВозвратнаяТара",
//  СтруктураШапкиДокумента - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблиица значений.
//
Функция ПодготовитьТаблицуТары(РезультатЗапросаПоТаре, СтруктураШапкиДокумента, ПогрешностиОкругления)

	ТаблицаТары = РезультатЗапросаПоТаре.Выгрузить();
	
	ТаблицаТары.Колонки.Добавить("СтавкаНДС", 	  Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	ТаблицаТары.Колонки.Добавить("СуммаСНДСРегл", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТаблицаТары.Колонки.Добавить("СуммаСНДСВал", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	// Надо заполнить новые колонки.
	ТаблицаТары.ЗаполнитьЗначения(Перечисления.СтавкиНДС.НеНДС, "СтавкаНДС");
	
	Для каждого СтрокаТаблицы Из ТаблицаТары Цикл
		
		СтрокаТаблицы.СуммаСНДСВал   = СтрокаТаблицы.Сумма;

		Если СтруктураШапкиДокумента.ВалютаДокумента = СтруктураШапкиДокумента.ВалютаРегламентированногоУчета Тогда
			СтрокаТаблицы.СуммаСНДСРегл = СтрокаТаблицы.Сумма;
		Иначе
			СтрокаТаблицы.СуммаСНДСРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Сумма, 
												СтруктураШапкиДокумента.ВалютаДокумента,
												СтруктураШапкиДокумента.ВалютаРегламентированногоУчета, 
												СтруктураШапкиДокумента.КурсДокумента, 
												СтруктураШапкиДокумента.КурсВалютыРегламентированногоУчета,
												СтруктураШапкиДокумента.КратностьДокумента,
												СтруктураШапкиДокумента.КратностьВалютыРегламентированногоУчета,
												,ПогрешностиОкругления, "СуммаСНДСРегл");
		КонецЕсли;

	КонецЦикла;
	
	БухгалтерскийУчетРасчетовСКонтрагентами.ЗаполнитьСделкуРеглВТаблице(ТаблицаТары, СтруктураШапкиДокумента);
	
	Возврат ТаблицаТары;

КонецФункции // ПодготовитьТаблицуТары()