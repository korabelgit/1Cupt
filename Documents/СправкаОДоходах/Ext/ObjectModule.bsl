Перем НП Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура АвтозаполнениеПроизвольная() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = "ВЫБРАТЬ
	                     |	ВложенныйЗапрос.Период КАК Период,
	                     |	СУММА(ВложенныйЗапрос.Начисления) КАК СовокупныйДоход,
	                     |	СУММА(ВложенныйЗапрос.Удержания) КАК Удержания,
	                     |	СУММА(ВложенныйЗапрос.СуммаКВыплате) КАК СуммаКВыплате
	                     |ИЗ
	                     |	(ВЫБРАТЬ
	                     |		Начисления.ПериодРегистрации КАК Период,
	                     |		СУММА(Начисления.Результат) КАК Начисления,
	                     |		NULL КАК Удержания,
	                     |		СУММА(Начисления.Результат) КАК СуммаКВыплате
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Результат,
	                     |			НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
	                     |		ИЗ
	                     |			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации
	                     |) КАК Начисления
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Начисления.ПериодРегистрации
	                     |	
	                     |	ОБЪЕДИНИТЬ ВСЕ
	                     |	
	                     |	ВЫБРАТЬ
	                     |		Удержания.ПериодРегистрации,
	                     |		NULL,
	                     |		СУММА(Удержания.Результат),
	                     |		СУММА(-Удержания.Результат)
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	                     |			СУММА(ВзносыВФонды.Результат) КАК Результат
	                     |		ИЗ
	                     |			РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
	                     |		ГДЕ
	                     |			ВзносыВФонды.Сотрудник = &Сотрудник
	                     |			И ВзносыВФонды.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ВзносыВФонды.Организация.Ссылка = &парамОрганизация
	                     |			И ВзносыВФонды.Результат <> 0
	                     |			И (НЕ ВзносыВФонды.Налог В ИЕРАРХИИ (&ГруппаНалоговФОТ))
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ)
	                     |		
	                     |		ОБЪЕДИНИТЬ ВСЕ
	                     |		
	                     |		ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ),
	                     |			СУММА(УдержанияРаботниковОрганизаций.Результат)
	                     |		ИЗ
	                     |			РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			УдержанияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И УдержанияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И УдержанияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	                     |			И УдержанияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	                     |		
	                     |		ОБЪЕДИНИТЬ ВСЕ
	                     |		
	                     |		ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
	                     |			СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход)
	                     |		ИЗ
	                     |			РегистрНакопления.ВзаиморасчетыПоНДФЛ.Обороты(, , Месяц, ) КАК ВзаиморасчетыПоНДФЛОбороты
	                     |		ГДЕ
	                     |			ВзаиморасчетыПоНДФЛОбороты.Сотрудник = &Сотрудник
	                     |			И ВзаиморасчетыПоНДФЛОбороты.Период МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ВзаиморасчетыПоНДФЛОбороты.Организация.Ссылка = &парамОрганизация
	                     |			И ВзаиморасчетыПоНДФЛОбороты.НалогПриход <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ)) КАК Удержания
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Удержания.ПериодРегистрации) КАК ВложенныйЗапрос
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВложенныйЗапрос.Период";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	Запрос.УстановитьПараметр("ГруппаНалоговФОТ", Справочники.Налоги.ВзносыФОТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = Доходы.Добавить();
		
		Строка.Период			= Выборка.Период;
		Строка.СовокупныйДоход	= Выборка.СовокупныйДоход;
		Строка.Удержания		= Выборка.Удержания;
		Строка.СуммаКВыплате	= Выборка.СуммаКВыплате;
	КонецЦикла;
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеСоцстрах() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
	"ВЫБРАТЬ
	|РезультатыБезОграничения.ПериодРегистрации КАК Период,
	|РезультатыБезОграничения.Налог КАК Налог,
	|РезультатыБезОграничения.Дней КАК ОтработаноДней,
	|РезультатыБезОграничения.ВсегоОблагоемое КАК ВсегоОблагаемое,
	|ВЫБОР КОГДА РезультатыБезОграничения.ВсегоОблагоемое <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.ВсегоОблагоемое 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатВсего,
	|ВЫБОР КОГДА РезультатыБезОграничения.РезультатОсновное <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатОсновное 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатОсновное,
	|ВЫБОР
	|КОГДА (РезультатыБезОграничения.РезультатОсновное+РезультатыБезОграничения.РезультатСовместительство)<= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатСовместительство 
	|КОГДА РезультатыБезОграничения.РезультатОсновное >= РезультатыБезОграничения.Предел
	|ТОГДА 0
	|ИНАЧЕ
	|РезультатыБезОграничения.Предел - РезультатыБезОграничения.РезультатОсновное
	|КОНЕЦ КАК РезультатСовместительство,
	|РезультатыБезОграничения.Предел КАК Предел
	|ИЗ
	|(ВЫБРАТЬ
	|СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК ВсегоОблагоемое,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней
	|ИНАЧЕ 0
	|КОНЕЦ) КАК Дней,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатОсновное,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатСовместительство,
	|НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|ВидыРасчетовВзносовВФонды.ВидРасчета КАК Налог,
	|СведенияОВзносахВФонды.Предел  КАК Предел
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВидыРасчетовВзносовВФонды.Период) КАК Период,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВидыРасчетовВзносовВФонды.Период
	|ГДЕ
	|	ВидыРасчетовВзносовВФонды.Налог = &Соцстрах
	|СГРУППИРОВАТЬ ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)
	|)КАК ВидыРасчетовВзносовВФондыДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВидыРасчетовВзносовВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|ПО ВидыРасчетовВзносовВФонды.Период = ВидыРасчетовВзносовВФондыДаты.Период
	| И ВидыРасчетовВзносовВФонды.Налог = &Соцстрах
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(СведенияОВзносахВФонды.Период) КАК Период,
	|	СведенияОВзносахВФонды.Налог КАК Налог,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|	ПО Начисления.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|	И  Начисления.ПериодРегистрации >= СведенияОВзносахВФонды.Период
	|ГДЕ
	|	СведенияОВзносахВФонды.Налог = &ЕСВ
	|СГРУППИРОВАТЬ ПО Налог, ПериодРегистрации	
	|)КАК СведенияОВзносахВФондыДаты
	|ПО ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = СведенияОВзносахВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО СведенияОВзносахВФонды.Период = СведенияОВзносахВФондыДаты.Период
	| И СведенияОВзносахВФонды.Налог = &ЕСВ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК ВзносыВФондыБазовыеВидыРасчета
	|ПО  ВзносыВФондыБазовыеВидыРасчета.Ссылка = ВидыРасчетовВзносовВФонды.ВидРасчета
	|   И ВзносыВФондыБазовыеВидыРасчета.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|ГДЕ
	|ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &парамСотрудник
	|И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	|И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	|И НЕ (ВзносыВФондыБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL)
	|СГРУППИРОВАТЬ ПО
	|ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, 
	|ВидыРасчетовВзносовВФонды.ВидРасчета, 
	|СведенияОВзносахВФонды.Предел
	|) КАК РезультатыБезОграничения
	|УПОРЯДОЧИТЬ ПО Период
	|";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("Соцстрах", Справочники.Налоги.Соцстрах);
	Запрос.УстановитьПараметр("ЕСВ", Справочники.Налоги.ЕСВРаботники);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеБезработица() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
	"ВЫБРАТЬ
	|РезультатыБезОграничения.ПериодРегистрации КАК Период,
	|РезультатыБезОграничения.Налог КАК Налог,
	|РезультатыБезОграничения.ВсегоОблагоемое КАК ВсегоОблагаемое,
	|ВЫБОР КОГДА РезультатыБезОграничения.ВсегоОблагоемое <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.ВсегоОблагоемое 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатВсего,
	|РезультатыБезОграничения.Предел КАК Предел,
	|РезультатыБезОграничения.УдержаноВзносов КАК РезультатВзносы,
	|РАЗНОСТЬДАТ(РезультатыБезОграничения.ПериодРегистрации,КОНЕЦПЕРИОДА(РезультатыБезОграничения.ПериодРегистрации,МЕСЯЦ),ДЕНЬ)+1 - ЕСТЬNULL(РезультатыБезОграничения.НеявкиКалендарные,0) КАК КалендарныеДни,
	|РезультатыБезОграничения.НеявкиКалендарные КАК НеявкиКалендарные
	|ИЗ
	|(ВЫБРАТЬ
	|СУММА(
	| ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	| ТОГДА 0
	| ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.Результат
	| КОНЕЦ) КАК ВсегоОблагоемое,
	|НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|ВидыРасчетовВзносовВФонды.ВидРасчета КАК Налог,
	|СведенияОВзносахВФонды.Предел  КАК Предел,
	|ВзносыСотрудника.УдержаноВзносов КАК УдержаноВзносов,
	|Неявки.Календарные КАК НеявкиКалендарные
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВидыРасчетовВзносовВФонды.Период) КАК Период,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВидыРасчетовВзносовВФонды.Период
	|ГДЕ
	|	ВидыРасчетовВзносовВФонды.Налог = &Безработица
	|СГРУППИРОВАТЬ ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)
	|)КАК ВидыРасчетовВзносовВФондыДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВидыРасчетовВзносовВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|ПО ВидыРасчетовВзносовВФонды.Период = ВидыРасчетовВзносовВФондыДаты.Период
	| И ВидыРасчетовВзносовВФонды.Налог = &Безработица
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(СведенияОВзносахВФонды.Период) КАК Период,
	|	СведенияОВзносахВФонды.Налог КАК Налог,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|	ПО Начисления.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|	И  Начисления.ПериодРегистрации >= СведенияОВзносахВФонды.Период
	|ГДЕ
	|	СведенияОВзносахВФонды.Налог = &ЕСВ
	|СГРУППИРОВАТЬ ПО Налог, ПериодРегистрации	
	|)КАК СведенияОВзносахВФондыДаты
	|ПО ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = СведенияОВзносахВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО СведенияОВзносахВФонды.Период = СведенияОВзносахВФондыДаты.Период
	| И СведенияОВзносахВФонды.Налог = &ЕСВ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК ВзносыВФондыБазовыеВидыРасчета
	|ПО  ВзносыВФондыБазовыеВидыРасчета.Ссылка = ВидыРасчетовВзносовВФонды.ВидРасчета
	|   И ВзносыВФондыБазовыеВидыРасчета.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|		ВзносыВФонды.ПериодРегистрации КАК ПериодРегистрации,
	|		ВзносыВФонды.Сотрудник КАК Сотрудник,
	|		Сумма(ВзносыВФонды.Результат) КАК УдержаноВзносов
	|	ИЗ
	|		РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
	|		ГДЕ ВзносыВФонды.ВидРасчета В
	|		(ВЫБРАТЬ
	|		   ВидРасчета
	|		 ИЗ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетов
	|		 ГДЕ ВидыРасчетов.Налог В (&СписокБезработица)  
	|		)
	|	СГРУППИРОВАТЬ ПО
	|		ВзносыВФонды.ПериодРегистрации,
	|		ВзносыВФонды.Сотрудник) КАК ВзносыСотрудника
	|ПО  ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = ВзносыСотрудника.ПериодРегистрации
	|   И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = ВзносыСотрудника.Сотрудник
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,МЕСЯЦ) КАК ПериодРегистрации,
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник,
	|		СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,ДЕНЬ)+1) КАК Календарные
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|		ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,МЕСЯЦ),
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник) КАК Неявки
	|ПО  ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = Неявки.ПериодРегистрации
	|   И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = Неявки.Сотрудник
	|ГДЕ
	|ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &парамСотрудник
	|И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	|И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	|И (НЕ (ВзносыВФондыБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL)  ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки))
	|СГРУППИРОВАТЬ ПО
	|ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, 
	|ВидыРасчетовВзносовВФонды.ВидРасчета, 
	|СведенияОВзносахВФонды.Предел,
	|ВзносыСотрудника.УдержаноВзносов,
	|Неявки.Календарные
	|) КАК РезультатыБезОграничения
	|УПОРЯДОЧИТЬ ПО Период
	|";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("Безработица", Справочники.Налоги.Безработица);
	Запрос.УстановитьПараметр("ЕСВ", Справочники.Налоги.ЕСВРаботники);
	СписокБезработица = Новый Массив(7);
	СписокБезработица[0]=(Справочники.Налоги.Безработица);
	СписокБезработица[1]=(Справочники.Налоги.ЕСВБольничные);
	СписокБезработица[2]=(Справочники.Налоги.ЕСВГПХ);
	СписокБезработица[3]=(Справочники.Налоги.ЕСВИнвалидыУТОГУТОС);
	СписокБезработица[4]=(Справочники.Налоги.ЕСВЛетчики);
	СписокБезработица[5]=(Справочники.Налоги.ЕСВРаботники);
	СписокБезработица[6]=(Справочники.Налоги.ЕСВРаботникиСР);
	Запрос.УстановитьПараметр("СписокБезработица", СписокБезработица);
	МассивНеявки = Новый Массив(3);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("УважительныеНеявки", МассивНеявки);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеПенсия() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
	"ВЫБРАТЬ
	|РезультатыБезОграничения.ПериодРегистрации КАК Период,
	|РезультатыБезОграничения.Дней КАК Дней,
	|РезультатыБезОграничения.ВсегоОблагоемое КАК ВсегоОблагаемое,
	|ВЫБОР КОГДА РезультатыБезОграничения.ВсегоОблагоемое <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.ВсегоОблагоемое 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатВсего,
	|ВЫБОР КОГДА РезультатыБезОграничения.РезультатОсновное <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатОсновное 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатОсновное,
	|ВЫБОР
	|КОГДА (РезультатыБезОграничения.РезультатОсновное+РезультатыБезОграничения.РезультатСовместительство)<= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатСовместительство 
	|КОГДА РезультатыБезОграничения.РезультатОсновное >= РезультатыБезОграничения.Предел
	|ТОГДА 0
	|ИНАЧЕ
	|РезультатыБезОграничения.Предел - РезультатыБезОграничения.РезультатОсновное
	|КОНЕЦ КАК РезультатСовместительство,
	|РезультатыБезОграничения.Предел КАК Предел
	|ИЗ
	|(ВЫБРАТЬ
	|СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК ВсегоОблагоемое,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней
	|ИНАЧЕ 0
	|КОНЕЦ) КАК Дней,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатОсновное,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатСовместительство,
	|НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|СведенияОВзносахВФонды.Предел  КАК Предел
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВзносыВФондыРаботниковОрганизаций.Период) КАК Период,
	|	ВзносыВФондыРаботниковОрганизаций.Налог КАК Налог,
	|	ВзносыВФондыРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВзносыВФондыРаботниковОрганизаций.Период
	|	 И Начисления.Сотрудник = ВзносыВФондыРаботниковОрганизаций.Сотрудник 
	|ГДЕ
	|ВзносыВФондыРаботниковОрганизаций.Налог В (&СписокПенсия)
	|СГРУППИРОВАТЬ ПО ВзносыВФондыРаботниковОрганизаций.Сотрудник, ВзносыВФондыРаботниковОрганизаций.Налог,	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)
	|)КАК ВзносыВФондыРаботниковОрганизацийДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВзносыВФондыРаботниковОрганизацийДаты.ПериодРегистрации
	| И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = ВзносыВФондыРаботниковОрганизацийДаты.Сотрудник
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
	|ПО  ВзносыВФондыРаботниковОрганизаций.Налог = ВзносыВФондыРаботниковОрганизацийДаты.Налог
	| И  ВзносыВФондыРаботниковОрганизаций.Период = ВзносыВФондыРаботниковОрганизацийДаты.Период
	| И  ВзносыВФондыРаботниковОрганизаций.Сотрудник = ВзносыВФондыРаботниковОрганизацийДаты.Сотрудник
	| И  ВзносыВФондыРаботниковОрганизаций.Актуальность
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВидыРасчетовВзносовВФонды.Период) КАК Период,
	|	ВидыРасчетовВзносовВФонды.Налог КАК Налог,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВидыРасчетовВзносовВФонды.Период
	|СГРУППИРОВАТЬ ПО ВидыРасчетовВзносовВФонды.Налог,КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)	
	|)КАК ВидыРасчетовВзносовВФондыДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВидыРасчетовВзносовВФондыДаты.ПериодРегистрации
	| И ВзносыВФондыРаботниковОрганизаций.Налог = ВидыРасчетовВзносовВФондыДаты.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|ПО ВидыРасчетовВзносовВФонды.Период = ВидыРасчетовВзносовВФондыДаты.Период
	| И ВидыРасчетовВзносовВФонды.Налог = ВидыРасчетовВзносовВФондыДаты.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ
	|МАКСИМУМ(СведенияОВзносахВФонды.Период) КАК Период,
	|СведенияОВзносахВФонды.Налог КАК Налог,
	|Начисления.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО Начисления.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И  Начисления.ПериодРегистрации >= СведенияОВзносахВФонды.Период
	|СГРУППИРОВАТЬ ПО СведенияОВзносахВФонды.Налог,Начисления.ПериодРегистрации	
	|)КАК СведенияОВзносахВФондыДаты
	|ПО ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = СведенияОВзносахВФондыДаты.ПериодРегистрации
	| И СведенияОВзносахВФондыДаты.Налог = ВидыРасчетовВзносовВФонды.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО СведенияОВзносахВФонды.Период = СведенияОВзносахВФондыДаты.Период
	| И СведенияОВзносахВФонды.Налог = СведенияОВзносахВФондыДаты.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК ВзносыВФондыБазовыеВидыРасчета
	|ПО  ВзносыВФондыБазовыеВидыРасчета.Ссылка = ВидыРасчетовВзносовВФонды.ВидРасчета
	|   И ВзносыВФондыБазовыеВидыРасчета.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|ГДЕ
	|ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &парамСотрудник
	|И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	|И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	|И НЕ (ВзносыВФондыБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL)
	|СГРУППИРОВАТЬ ПО
	|ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, 
	|СведенияОВзносахВФонды.Предел
	|) КАК РезультатыБезОграничения
	|УПОРЯДОЧИТЬ ПО Период
	|";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	СписокПенсия = Новый Массив(8);
	СписокПенсия[0]=(Справочники.Налоги.Пенсионный1_5);
	СписокПенсия[1]=(Справочники.Налоги.Пенсионный);
	СписокПенсия[2]=(Справочники.Налоги.ЕСВБольничные);
	СписокПенсия[3]=(Справочники.Налоги.ЕСВГПХ);
	СписокПенсия[4]=(Справочники.Налоги.ЕСВИнвалидыУТОГУТОС);
	СписокПенсия[5]=(Справочники.Налоги.ЕСВЛетчики);
	СписокПенсия[6]=(Справочники.Налоги.ЕСВРаботники);
	СписокПенсия[7]=(Справочники.Налоги.ЕСВРаботникиСР);
	Запрос.УстановитьПараметр("СписокПенсия", СписокПенсия);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеСубсидия() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                     |	ВложенныйЗапрос.Период КАК Период,
	                     |	СУММА(ВложенныйЗапрос.СовокупныйДоход) КАК СовокупныйДоход,
	                     |	СУММА(ВложенныйЗапрос.НачисленоЗП) КАК НачисленоЗП,
	                     |	СУММА(ВложенныйЗапрос.НачисленоПрочее) КАК НачисленоПрочее,
						 |	СУММА(ВложенныйЗапрос.Удержания) КАК Алименты
	                     |ИЗ
	                     |	(ВЫБРАТЬ
	                     |		Начисления.ПериодРегистрации КАК Период,
						 |		СУММА(Начисления.Результат) КАК СовокупныйДоход,
						 |      СУММА(ВЫБОР 
						 |			КОГДА Начисления.ВидРасчета.СчетУчета В (&СчетаЗарплата) ТОГДА
						 |			Начисления.Результат
						 |			ИНАЧЕ 0
						 |		КОНЕЦ) КАК НачисленоЗП,
						 |      СУММА(ВЫБОР 
						 |			КОГДА Начисления.ВидРасчета.СчетУчета В (&СчетаЗарплата) ТОГДА
						 |			0
						 |			ИНАЧЕ Начисления.Результат
						 |		КОНЕЦ) КАК НачисленоПрочее,
					     |		NULL КАК Удержания
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Результат,
						 |			ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	                     |			НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия, МЕСЯЦ) КАК ПериодРегистрации
	                     |		ИЗ
	                     |			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия, ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета 
	                     |) КАК Начисления
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Начисления.ПериодРегистрации
	                     |	
	                     |	ОБЪЕДИНИТЬ ВСЕ
	                     |	
	                     |	ВЫБРАТЬ
	                     |		Удержания.ПериодРегистрации,
	                     |		NULL,
						 |		NULL,
						 |		NULL,
	                     |		СУММА(Удержания.Результат)
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	                     |			СУММА(УдержанияРаботниковОрганизаций.Результат) КАК Результат
	                     |		ИЗ
	                     |			РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			УдержанияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И УдержанияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И УдержанияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
						 |			И УдержанияРаботниковОрганизаций.ВидРасчета.СпособРасчета В (&ЭтоАлименты)
	                     |			И УдержанияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	                     |	) КАК Удержания
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Удержания.ПериодРегистрации) КАК ВложенныйЗапрос
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВложенныйЗапрос.Период";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
    СчетаЗарплата = Новый Массив(3);
	СчетаЗарплата[0]=(Планысчетов.Хозрасчетный.РасчетыПоЗаработнойПлате);
	Запрос.УстановитьПараметр("СчетаЗарплата", СчетаЗарплата);
	ВидыАлиментов = Новый Массив(5);
	ВидыАлиментов[0] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыПроцентом;
	ВидыАлиментов[1] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыПроцентомДоПредела;
	ВидыАлиментов[2] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыФиксСуммой;
	ВидыАлиментов[3] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыФиксСуммойДоПредела;
	Запрос.УстановитьПараметр("ЭтоАлименты", ВидыАлиментов);


	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Доходы.Загрузить(ТЗ);	
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеСубсидия2015() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = "
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |  НДФЛ.НалоговыйПериод КАК Период,
	 |  ВЫБОР 
	 |   КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП)
	 |   ТОГДА НДФЛ.Доход 
	 |   ИНАЧЕ 0
	 |  КОНЕЦ КАК НачисленоЗП,
	 |  ВЫБОР 
	 |   КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП) ИЛИ НДФЛ.ДоходНДФЛ В (&парамВидыДоходовВС)
	 |   ТОГДА 0 
	 |   ИНАЧЕ НДФЛ.Доход
	 |  КОНЕЦ КАК НачисленоПрочее,
	 |  ВЫБОР 
	 |   КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП)
	 |   ТОГДА НДФЛ.Налог 
	 |   ИНАЧЕ 0
	 |  КОНЕЦ КАК НДФЛ,
	 |  ВЫБОР 
	 |   КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП) ИЛИ НДФЛ.ДоходНДФЛ В (&парамВидыДоходовВС)
	 |   ТОГДА 0 
	 |   ИНАЧЕ НДФЛ.Налог
	 |  КОНЕЦ КАК НДФЛПрочее
	 |ПОМЕСТИТЬ ВТНДФЛ
	 |ИЗ РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК НДФЛ
	 |ГДЕ
	 |	НДФЛ.Сотрудник = &Сотрудник
     |	И НДФЛ.НалоговыйПериод МЕЖДУ &парамДатаНач И &парамДатаКон
     |	И НДФЛ.Организация = &парамОрганизация
	 |	И НДФЛ.ВидДвижения = &парамПриход
	 |;
	 |
	 |///////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
     |		Удержания.ПериодРегистрации КАК Период,
     |		Удержания.Результат КАК Алименты
	 |ПОМЕСТИТЬ ВТАлименты
	 |ИЗ РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
     |ГДЕ
     |	Удержания.Сотрудник = &Сотрудник
     |	И Удержания.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
     |	И Удержания.Организация = &парамОрганизация
	 |	И Удержания.ВидРасчета.СпособРасчета В (&парамВидыАлиментов)
	 |;
	 |
	 |///////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВложенныйЗапрос.Период КАК Период,
     |	СУММА(ВложенныйЗапрос.НачисленоЗП+ВложенныйЗапрос.НачисленоПрочее) КАК СовокупныйДоход,
     |	СУММА(ВложенныйЗапрос.НачисленоЗП) КАК НачисленоЗП,
     |	СУММА(ВложенныйЗапрос.НачисленоПрочее) КАК НачисленоПрочее,
	 |	СУММА(ВложенныйЗапрос.НДФЛ) КАК НДФЛ,
     |	СУММА(ВложенныйЗапрос.НДФЛПрочее) КАК НДФЛПрочее,
	 |	СУММА(ВложенныйЗапрос.Алименты) КАК Алименты
     |ИЗ
     |	(ВЫБРАТЬ
     |  	ТаблицаНДФЛ.Период КАК Период,
	 |  	ТаблицаНДФЛ.НачисленоЗП КАК НачисленоЗП,
	 |  	ТаблицаНДФЛ.НачисленоПрочее КАК НачисленоПрочее,
	 |  	ТаблицаНДФЛ.НДФЛ КАК НДФЛ,
	 |  	ТаблицаНДФЛ.НДФЛПрочее КАК НДФЛПрочее,
	 |  	0 КАК Алименты
     |	 ИЗ ВТНДФЛ КАК ТаблицаНДФЛ
     |	
     |	 ОБЪЕДИНИТЬ ВСЕ
     |	
     |	ВЫБРАТЬ
     |		ТаблицаАлименты.Период,
     |		0,
	 |		0,
	 |		0,
	 |		0,
     |		ТаблицаАлименты.Алименты
     |	ИЗ ВТАлименты КАК ТаблицаАлименты
     |) КАК ВложенныйЗапрос
     |
     |СГРУППИРОВАТЬ ПО
     |	ВложенныйЗапрос.Период";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамПриход", ВидДвиженияНакопления.Приход);
    ВидыДоходовЗП = Новый Массив();
	ВидыДоходовЗП.Добавить(Справочники.ВидыДоходовНДФЛ.Код01);
	Запрос.УстановитьПараметр("парамВидыДоходовЗП", ВидыДоходовЗП);
	ВидыДоходовВС = Новый Массив();
	ВидыДоходовВС.Добавить(Справочники.ВидыДоходовНДФЛ.ВоенныйСбор);
	Запрос.УстановитьПараметр("парамВидыДоходовВС", ВидыДоходовВС);
	ВидыАлиментов = Новый Массив();
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.АлиментыПроцентом);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.АлиментыПроцентомДоПредела);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.АлиментыФиксСуммой);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.АлиментыФиксСуммойДоПредела);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИндексацияАлиментов);
	Запрос.УстановитьПараметр("парамВидыАлиментов", ВидыАлиментов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Доходы.Загрузить(ТЗ);	
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеСоцстрах2015() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = "
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |  НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало,МЕСЯЦ) КАК Период,
	 |  СУММА(
	 |   ВЫБОР
	 |    КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы) ТОГДА 0
	 |    ИНАЧЕ ЕСВ.БазаВзноса-ЕСВ.БазаДоначисление
	 |	 КОНЕЦ ) КАК РезультатВсего,
	 |  СУММА(
	 |   ВЫБОР
	 |    КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы) ТОГДА ЕСВ.Результат
	 |    ИНАЧЕ 0
	 |	 КОНЕЦ ) КАК РезультатВзносы,
	 |  МАКСИМУМ(
	 |   ВЫБОР
	 |    КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы) ТОГДА ЕСВ.Ставка
	 |    ИНАЧЕ 0
	 |	 КОНЕЦ ) КАК СтавкаВзносов,
	 |  ЕСВ.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета
	 |ПОМЕСТИТЬ ВТЕСВ
	 |ИЗ РегистрРасчета.ВзносыВФонды КАК ЕСВ
	 |ГДЕ
	 |	ЕСВ.Сотрудник = &Сотрудник
     |	И ЕСВ.БазовыйПериодНачало МЕЖДУ &парамДатаНач И &парамДатаКон
     |	И ЕСВ.Организация = &парамОрганизация
	 |	И ЕСВ.ВидРасчета НЕ В (&парамВидыЕСВНеВключая)
	 |СГРУППИРОВАТЬ ПО
	 |  НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало,МЕСЯЦ),
	 |  ЕСВ.ВидРасчета.КатегорияРасчета
	 |;
	 |
	 |///////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
     |	Сотрудники.ДатаПриемаНаРаботу КАК ДатаПриема,
     |	Сотрудники.ДатаУвольнения КАК ДатаУвольнения
	 |ПОМЕСТИТЬ ВТПриемУвольнение
	 |ИЗ Справочник.СотрудникиОрганизаций КАК Сотрудники
     |ГДЕ
     |	Сотрудники.Ссылка = &Сотрудник
	 |;
	 |///////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ 
     |	НАЧАЛОПЕРИОДА(Календарь.ДатаКалендаря,МЕСЯЦ) КАК Период,
     |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Календарь.ДатаКалендаря) КАК КалендарныеДниВсего
	 |ПОМЕСТИТЬ ВТКалендарныеДни
	 |ИЗ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК Календарь
	 |   ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемУвольнение КАК ПриемУвольнение 
	 |   ПО ИСТИНА
     |ГДЕ
     |	Календарь.ДатаКалендаря МЕЖДУ &парамДатаНач И &парамДатаКон
	 |	И Календарь.ДатаКалендаря >= ПриемУвольнение.ДатаПриема
	 |	И (Календарь.ДатаКалендаря <= ПриемУвольнение.ДатаУвольнения
	 |    ИЛИ ПриемУвольнение.ДатаУвольнения = ДАТАВРЕМЯ(1,1,1))
	 |СГРУППИРОВАТЬ ПО
	 |	НАЧАЛОПЕРИОДА(Календарь.ДатаКалендаря,МЕСЯЦ)
	 |;
	 |
	 |///////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,МЕСЯЦ) КАК Период,
	 |	СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,ДЕНЬ)+1) КАК Календарные
	 |ПОМЕСТИТЬ ВТКалендарныеДниНеявки
	 |ИЗ
	 |РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	 |ГДЕ
	 |	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &Сотрудник
	 |	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Организация = &парамОрганизация
	 |	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.УважительнаяПричинаДляБольничных = ИСТИНА
	 |	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
	 |СГРУППИРОВАТЬ ПО
	 |		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,МЕСЯЦ)
	 |;
	 |
	 |///////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |   КалендарныеДни.Период,
	 |   ВЫБОР
	 |		КОГДА ЕСТЬNULL(ЕСВ.КатегорияРасчета,ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)) = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)
	 | 		ТОГДА ЕСТЬNULL(КалендарныеДни.КалендарныеДниВсего,0) - ЕСТЬNULL(КалендарныеДниНеявки.Календарные,0)
	 | 		ИНАЧЕ 0 
	 |	КОНЕЦ КАК КалендарныеДни,
	 |  ЕСТЬNULL(ЕСВ.РезультатВсего,0) КАК РезультатВсего,
	 |  ЕСТЬNULL(ЕСВ.РезультатВзносы,0)	КАК РезультатВзносы,
	 |  ЕСТЬNULL(ЕСВ.СтавкаВзносов,0)*100 КАК СтавкаВзносов
	 |
	 |ИЗ ВТКалендарныеДни КАК КалендарныеДни
	 |   ЛЕВОЕ СОЕДИНЕНИЕ ВТЕСВ КАК ЕСВ
	 |   ПО КалендарныеДни.Период = ЕСВ.Период
	 |   ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниНеявки КАК КалендарныеДниНеявки
	 |   ПО КалендарныеДни.Период = КалендарныеДниНеявки.Период
	 |УПОРЯДОЧИТЬ ПО
	 |  КалендарныеДни.Период, ЕСВ.КатегорияРасчета
	 |
	 |";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	ВидыЕСВНеВключая = Новый Массив();
	ВидыЕСВНеВключая.Добавить(ПланыВидовРасчета.ВзносыВФонды.ЕСВБольничные);
	ВидыЕСВНеВключая.Добавить(ПланыВидовРасчета.ВзносыВФонды.ЕСВФОТБольничные);
	ВидыЕСВНеВключая.Добавить(ПланыВидовРасчета.ВзносыВФонды.ЕСВДекретные);
	ВидыЕСВНеВключая.Добавить(ПланыВидовРасчета.ВзносыВФонды.ЕСВФОТДекретные);
	ВидыЕСВНеВключая.Добавить(ПланыВидовРасчета.ВзносыВФонды.ЕСВМобилизованные);
	Запрос.УстановитьПараметр("парамВидыЕСВНеВключая", ВидыЕСВНеВключая);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Доходы.Загрузить(ТЗ);	
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеПенсия2015() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = "
	 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |  НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало,МЕСЯЦ) КАК Период,
	 |  СУММА(ЕСВ.БазаВзноса-ЕСВ.БазаДоначисление) КАК РезультатВсего
	 |ИЗ РегистрРасчета.ВзносыВФонды КАК ЕСВ
	 |ГДЕ
	 |	ЕСВ.Сотрудник = &Сотрудник
     |	И ЕСВ.БазовыйПериодНачало МЕЖДУ &парамДатаНач И &парамДатаКон
     |	И ЕСВ.Организация = &парамОрганизация
	 |	И ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФОТ)
	 |СГРУППИРОВАТЬ ПО
	 |  НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало,МЕСЯЦ)
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |  Период
	 |
	 |";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Доходы.Загрузить(ТЗ);
	
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеДоходыИНалоги() Экспорт
	
	Запрос = Новый Запрос;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо", Сотрудник.Физлицо);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	Запрос.УстановитьПараметр("ГруппаНалоговФОТ", Справочники.Налоги.ВзносыФОТ);

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДФЛ.НалоговыйПериод КАК НалоговыйПериод,
	|	НДФЛЛьготы.КоличествоЛьгот КАК КвоЛьгот,
	|	НДФЛЛьготы.Льгота.КодОтчетностиНДФЛ КАК ПризнакСоциальнойЛьготы
	|ПОМЕСТИТЬ ВТЛьготыПоПериодам
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛ.НалоговыйПериод, МЕСЯЦ) КАК НалоговыйПериод,
	|		МАКСИМУМ(ВзаиморасчетыПоНДФЛ.Период) КАК ПериодАктуальнойЛьготы
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК ВзаиморасчетыПоНДФЛ
	|	ГДЕ
	|		ВзаиморасчетыПоНДФЛ.НалоговыйПериод МЕЖДУ &парамДатаНач И &парамДатаКон
	|		И ВзаиморасчетыПоНДФЛ.Организация = &парамОрганизация
	|		И ВзаиморасчетыПоНДФЛ.Сотрудник = &Сотрудник
	|		И ВзаиморасчетыПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//ВОЕННЫЙ СБОР
	|		И ВзаиморасчетыПоНДФЛ.ДоходНДФЛ.ВидСтавкиВоенныйСбор <> ВзаиморасчетыПоНДФЛ.ДоходНДФЛ.ВидСтавкиРезидента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛ.НалоговыйПериод, МЕСЯЦ)) КАК НДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК НДФЛЛьготы
	|		ПО (НЕ НДФЛ.НалоговыйПериод ЕСТЬ NULL )
	|			И (НДФЛЛьготы.Период <= &парамДатаКон)
	|			И (НДФЛЛьготы.Организация = &парамОрганизация)
	|			И (НДФЛЛьготы.Сотрудник = &Сотрудник)
	|			И (НДФЛЛьготы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (НАЧАЛОПЕРИОДА(НДФЛЛьготы.НалоговыйПериод, МЕСЯЦ) = НАЧАЛОПЕРИОДА(НДФЛ.НалоговыйПериод, МЕСЯЦ))
	|			И (НДФЛЛьготы.Период = НДФЛ.ПериодАктуальнойЛьготы)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛ.НалоговыйПериод,
	|	НДФЛЛьготы.КоличествоЛьгот,
	|	НДФЛЛьготы.Льгота.КодОтчетностиНДФЛ
	|";
	
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ
	|	Основной.НалоговыйПериод КАК НалоговыйПериод,
	|	МАКСИМУМ(ПрожиточныеМинимумы.Период) КАК ПериодПрожиточныеМинимумы
	|ПОМЕСТИТЬ ВТПериодыПрожиточныеМинимумы
	|ИЗ
	|	ВТЛьготыПоПериодам КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрожиточныеМинимумы КАК ПрожиточныеМинимумы
	|		ПО НАЧАЛОПЕРИОДА(Основной.НалоговыйПериод,ГОД) >= ПрожиточныеМинимумы.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НалоговыйПериод";	
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПериодыПрожиточныеМинимумы.НалоговыйПериод КАК Период,
	|	ПрожиточныеМинимумы.Размер
	|ПОМЕСТИТЬ ВТПрожиточныеМинимумы
	|ИЗ
	|	ВТПериодыПрожиточныеМинимумы КАК ПериодыПрожиточныеМинимумы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрожиточныеМинимумы КАК ПрожиточныеМинимумы
	|		ПО ПериодыПрожиточныеМинимумы.ПериодПрожиточныеМинимумы = ПрожиточныеМинимумы.Период
	|ГДЕ
	|	ПрожиточныеМинимумы.СоциальнаяГруппа = ЗНАЧЕНИЕ(Перечисление.СоциальныеГруппыНаселения.Трудоспособные)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПрожиточныеМинимумы.НалоговыйПериод,
	|	ПрожиточныеМинимумы.Размер";
	
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктивныеПериоды.НалоговыйПериод КАК НалоговыйПериод,
	|	РазмерыЛьготНДФЛ.Ставка КАК Ставка,
	|   ПрожиточныеМинимумы.Размер КАК ПрожиточныйМинимум
	|ПОМЕСТИТЬ ВТРазмеры
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.НалоговыйПериод КАК НалоговыйПериод,
	|		МАКСИМУМ(РазмерыЛьготНДФЛ.Период) КАК ПериодРазмерыЛьготНДФЛ
	|	ИЗ
	|		ВТЛьготыПоПериодам КАК Основной
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыЛьготНДФЛ КАК РазмерыЛьготНДФЛ
	|			ПО Основной.НалоговыйПериод >= РазмерыЛьготНДФЛ.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основной.НалоговыйПериод) КАК АктивныеПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыЛьготНДФЛ КАК РазмерыЛьготНДФЛ
	|		ПО АктивныеПериоды.ПериодРазмерыЛьготНДФЛ = РазмерыЛьготНДФЛ.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПрожиточныеМинимумы КАК ПрожиточныеМинимумы
	|			ПО АктивныеПериоды.НалоговыйПериод = ПрожиточныеМинимумы.Период";
	Запрос.Выполнить();
	
	Доходы.Очистить();
	
	ДоходыТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ПериодРегистрации КАК Период,
	|	СУММА(ВложенныйЗапрос.РезультатВзносы) КАК РезультатВзносы,
	|	СУММА(ВложенныйЗапрос.ОблагаемоеЕСВ) КАК ОблагаемоеЕСВ,
	|	СУММА(ВложенныйЗапрос.ОблагаемоеЕСВПредел) КАК ОблагаемоеЕСВПредел,
	|	СУММА(ВложенныйЗапрос.ДоходНДФЛ) КАК ДоходНДФЛ,
	|	СУММА(ВложенныйЗапрос.НДФЛ) КАК НДФЛ,
	|	СУММА(ВложенныйЗапрос.СуммаКВыплате) КАК Выплачено,
	|	МАКСИМУМ(ВложенныйЗапрос.ПризнакСоциальнойЛьготы) КАК ПризнакСоциальнойЛьготы,
	|	МАКСИМУМ(ВложенныйЗапрос.СуммаНалоговойЛьготы) КАК СуммаНалоговойЛьготы,
	|	СУММА(ВложенныйЗапрос.ДоходВоенныйСбор) КАК ДоходВоенныйСбор,
	|	СУММА(ВложенныйЗапрос.ВоенныйСбор) КАК ВоенныйСбор,
	|	СУММА(ВложенныйЗапрос.ДоходЗаВычетомНДФЛ) КАК ДоходЗаВычетомНДФЛ	
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|		СУММА(ВзносыВФонды.Результат) КАК РезультатВзносы,
	|		ВзносыВФонды.База КАК ОблагаемоеЕСВ,
	|		ВзносыВФонды.БазаВзноса КАК ОблагаемоеЕСВПредел,
	|		NULL КАК ДоходНДФЛ,
	|		NULL КАК НДФЛ,
	|		NULL КАК СуммаКВыплате,
	|		NULL КАК ПризнакСоциальнойЛьготы,
	|		NULL КАК СуммаНалоговойЛьготы,
	|		NULL КАК ДоходВоенныйСбор,
	|		NULL КАК ВоенныйСбор,
	|		NULL КАК ДоходЗаВычетомНДФЛ
	|	ИЗ
	|		РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
	|	ГДЕ
	|		ВзносыВФонды.Сотрудник = &Сотрудник
	|		И ВзносыВФонды.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|		И ВзносыВФонды.Организация.Ссылка = &парамОрганизация
	|		И ВзносыВФонды.Результат <> 0
	|		И НЕ ВзносыВФонды.Налог В ИЕРАРХИИ (&ГруппаНалоговФОТ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ),
	|		ВзносыВФонды.База,
	|		ВзносыВФонды.БазаВзноса
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(ВзаиморасчетыПоНДФЛОбороты.ДоходПриход),
	|		СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(ВзаиморасчетыПоНДФЛОбороты.ДоходПриход) - СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход) 
    |	ИЗ
	|		РегистрНакопления.ВзаиморасчетыПоНДФЛ.Обороты(
	|				,
	|				,
	|				Месяц,
	|				Сотрудник = &Сотрудник
	|					И Организация = &парамОрганизация
	|					И (ПериодВзаиморасчетов МЕЖДУ &парамДатаНач И &парамДатаКон)
	|					И ДоходНДФЛ <> 0
	//ВОЕННЫЙ СБОР
	|					И ДоходНДФЛ.ВидСтавкиВоенныйСбор <> ДоходНДФЛ.ВидСтавкиРезидента
	|		) КАК ВзаиморасчетыПоНДФЛОбороты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	//ВОЕННЫЙ СБОР
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(ВзаиморасчетыПоНДФЛОбороты.ДоходПриход),
	|		СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход),
	|		NULL
    |	ИЗ
	|		РегистрНакопления.ВзаиморасчетыПоНДФЛ.Обороты(
	|				,
	|				,
	|				Месяц,
	|				Сотрудник = &Сотрудник
	|					И Организация = &парамОрганизация
	|					И (ПериодВзаиморасчетов МЕЖДУ &парамДатаНач И &парамДатаКон)
	|					И ДоходНДФЛ <> 0
	|					И ДоходНДФЛ.ВидСтавкиВоенныйСбор = ДоходНДФЛ.ВидСтавкиРезидента
	|		) КАК ВзаиморасчетыПоНДФЛОбороты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.ПериодВзаиморасчетов, МЕСЯЦ),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетов),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
	|	ГДЕ
	|		ВзаиморасчетыСРаботникамиОрганизаций.Сотрудник = &Сотрудник
	|		И ВзаиморасчетыСРаботникамиОрганизаций.Организация = &парамОрганизация
	|		И ВзаиморасчетыСРаботникамиОрганизаций.ПериодВзаиморасчетов МЕЖДУ &парамДатаНач И &парамДатаКон
	|		И ВзаиморасчетыСРаботникамиОрганизаций.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Выплата)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.ПериодВзаиморасчетов, МЕСЯЦ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЛьготыПоПериодам.НалоговыйПериод,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ЛьготыПоПериодам.ПризнакСоциальнойЛьготы,
	|		МАКСИМУМ(Размеры.Ставка * Размеры.ПрожиточныйМинимум * ЛьготыПоПериодам.КвоЛьгот),
	|		NULL,
	|		NULL,
	|		NULL
	|	ИЗ
	|		ВТЛьготыПоПериодам КАК ЛьготыПоПериодам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмеры КАК Размеры
	|			ПО ЛьготыПоПериодам.НалоговыйПериод = Размеры.НалоговыйПериод
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЛьготыПоПериодам.НалоговыйПериод,
	|		ЛьготыПоПериодам.ПризнакСоциальнойЛьготы,
	|		Размеры.ПрожиточныйМинимум) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
						 
	Запрос.Текст = ДоходыТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Колонки = Результат.Колонки;
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = Доходы.Добавить();
		Строка.Период			= Выборка.Период;
		Строка.РезультатВзносы	= Выборка.РезультатВзносы;
		Строка.ОблагаемоеЕСВ	= Выборка.ОблагаемоеЕСВ;
		Строка.ОблагаемоеЕСВПредел	= Выборка.ОблагаемоеЕСВПредел;
		Строка.ДоходНДФЛ		= Выборка.ДоходНДФЛ;
		Строка.НДФЛ				= Выборка.НДФЛ;
		
		Строка.ДоходВоенныйСбор	= Выборка.ДоходВоенныйСбор;
		Строка.ВоенныйСбор		= Выборка.ВоенныйСбор;
		Строка.ПризнакСоциальнойЛьготы = Выборка.ПризнакСоциальнойЛьготы;
		Строка.СуммаНалоговойЛьготы = Выборка.СуммаНалоговойЛьготы;
		Строка.Выплачено		= Выборка.Выплачено;
		
		Строка.ДоходЗаВычетомНДФЛ = Выборка.ДоходЗаВычетомНДФЛ
	КонецЦикла;
	
КонецПроцедуры //  Автозаполнение

#Если Клиент Тогда

Функция ПечатьПроизвольная()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дт, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дт", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дт, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ";
		
	ЗапросДолжность = Новый Запрос(ТекстЗапроса);
	ЗапросДолжность.УстановитьПараметр("Дт", Дата);
	ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДолжность.УстановитьПараметр("Организация", Организация);
	ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
	РезультатДолжность.Следующий();
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(Доходы.Период) КАК НачалоПериодаДоходов,
	|	МАКСИМУМ(КОНЕЦПЕРИОДА(Доходы.Период,МЕСЯЦ)) КАК ОкончаниеПериодаДоходов
	|ИЗ
	|	Документ.СправкаОДоходах.Доходы КАК Доходы
	|ГДЕ
	|	Доходы.Ссылка = &Ссылка";
		
	ЗапросПериодДоходов = Новый Запрос(ТекстЗапроса);
	ЗапросПериодДоходов.УстановитьПараметр("Ссылка", Ссылка);
		
	РезультатПериодДоходов = ЗапросПериодДоходов.Выполнить().Выбрать();
	РезультатПериодДоходов.Следующий();
				
	// получаем макет
	Макет = ПолучитьМакет("Макет");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		
	Если  Сотрудник.Физлицо.Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		ОбластьМакетаШапка.Параметры.он                     =НСтр("ru='он';uk='він'",КодЯзыкаПечать);
		ОкончаниеРаботал = НСтр("ru='';uk='в'",КодЯзыкаПечать);
	Иначе
		ОбластьМакетаШапка.Параметры.он                     =НСтр("ru='она';uk='вона'",КодЯзыкаПечать);
		ОкончаниеРаботал = НСтр("ru='а';uk='ла'",КодЯзыкаПечать);;
	КонецЕсли;	
		
	ТекстДоговор = "";
		
	Если Сотрудник.ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.Подряда Тогда
		ТекстРаботает = НСтр("ru='работал';uk='працюва'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+Организация.НаименованиеПолное +
		ТекстДоговор + НСтр("ru=' по гражданско-правовому договору';uk=' за цивільно-правовим договором'",КодЯзыкаПечать);
	Иначе		
		Если НЕ ЗначениеЗаполнено(Сотрудник.ДатаУвольнения) Тогда
			ТекстРаботает = НСтр("ru='работает в ';uk='працює в '",КодЯзыкаПечать) + Организация.НаименованиеПолное +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
			Формат(Сотрудник.ДатаПриемаНаРаботу, "ДЛФ=Д")+НСтр("ru='г.';uk='р.'",КодЯзыкаПечать) + ТекстДоговор + НСтр("ru='. В настоящий момент занимает должность ';uk='. На даний момент займає посаду '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
		Иначе
			ТекстРаботает = НСтр("ru='работал';uk='працюва'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+Организация.НаименованиеПолное +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
			Формат(Сотрудник.ДатаПриемаНаРаботу, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'",КодЯзыкаПечать) + " по " + Формат(Сотрудник.ДатаУвольнения-86400, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'",КодЯзыкаПечать)  + ТекстДоговор + НСтр("ru=' на должности ';uk=' на посаді '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
		КонецЕсли;
	КонецЕсли;
	ОбластьМакетаШапка.Параметры.Номер						= Номер;
	ОбластьМакетаШапка.Параметры.Дата						= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДатаНач					= Формат(МАКС(Сотрудник.ДатаПриемаНаРаботу,РезультатПериодДоходов.НачалоПериодаДоходов), "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДатаКон					= Формат(?(НЕ ЗначениеЗаполнено(Сотрудник.ДатаУвольнения),РезультатПериодДоходов.ОкончаниеПериодаДоходов,МИН(Сотрудник.ДатаУвольнения,РезультатПериодДоходов.ОкончаниеПериодаДоходов)), "ДЛФ=Д");
		
	ОбластьМакетаШапка.Параметры.ИдентификационныйКод		= Сотрудник.Физлицо.КодПоДРФО;
	ОбластьМакетаШапка.Параметры.ТекстРаботает				= ТекстРаботает;
		
	ОбластьМакетаШапка.Параметры.СуммаДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПериод"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,			"Л="+КодЯзыкаПечать+"; ДФ='ММММ ` гггг'");
		ОбластьМакета.Параметры.СовокупныйДоход	= Формат(СтрокаТЧ.СовокупныйДоход,	"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.Удержания		= Формат(СтрокаТЧ.Удержания,		"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.СуммаКВыплате	= Формат(СтрокаТЧ.СуммаКВыплате,	"ЧЦ=10; ЧДЦ=2");
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаИтого");
	ОбластьМакета.Параметры.СовокупныйДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
	ОбластьМакета.Параметры.Удержания		= Формат(Доходы.Итог("Удержания"),			"ЧЦ=10; ЧДЦ=2");
	ОбластьМакета.Параметры.СуммаКВыплате	= Формат(Доходы.Итог("СуммаКВыплате"),		"ЧЦ=10; ЧДЦ=2");
	ТабДокумент.Вывести(ОбластьМакета);
		
	//Дно
	ТекстЗапроса="ВЫБРАТЬ
	             |	ФИОФизЛицСрезПоследних.Фамилия,
	             |	ФИОФизЛицСрезПоследних.Имя,
	             |	ФИОФизЛицСрезПоследних.Отчество
	             |ИЗ
	             |	РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	             |ГДЕ
	             |	ФИОФизЛицСрезПоследних.ФизЛицо = &ФизЛицо";
	Запрос = Новый Запрос(ТекстЗапроса);
		
	Отбор = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо");
	Отбор.СтруктурнаяЕдиница	= Организация;
	Отбор.ОтветственноеЛицо		= Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер;
		
	Выборка = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(Дата, Отбор);
	Для Каждого Строка Из Выборка Цикл
		Если Не (Строка.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка()) Тогда  
			Запрос.УстановитьПараметр("ФизЛицо",Строка.ФизическоеЛицо);
			ВыборкаФам = Запрос.Выполнить().Выбрать();
			ВыборкаФам.Следующий();
			ГлавныйБухгалтер = ВыборкаФам.Фамилия +" "+Лев(ВыборкаФам.Имя, 1)+"."+Лев(ВыборкаФам.Отчество, 1);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Отбор = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо");
	Отбор.СтруктурнаяЕдиница	= Организация;
	Отбор.ОтветственноеЛицо		= Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		
	Выборка = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(Дата, Отбор);
	Для Каждого Строка Из Выборка Цикл
		Если Не (Строка.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка()) Тогда 
			Запрос.УстановитьПараметр("ФизЛицо",Строка.ФизическоеЛицо);
			ВыборкаФам = Запрос.Выполнить().Выбрать();
			ВыборкаФам.Следующий();
			Директор = ВыборкаФам.Фамилия +" "+Лев(ВыборкаФам.Имя, 1)+"."+Лев(ВыборкаФам.Отчество, 1);
			Прервать;
		КонецЕсли;
	КонецЦикла;


	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.НазначениеСправки	= НазначениеСправки;
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Директор			= Директор;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьСоцстрах()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетСоцСтрах");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	
	ОбластьМакетаШапка.Параметры.Номер			= Номер;
	ОбластьМакетаШапка.Параметры.Дата			= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
			
	//ОбластьМакетаШапка.Параметры.СуммаДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л=""uk""");
		ОбластьМакета.Параметры.ОтработаноДней	= СтрокаТЧ.ОтработаноДней;
		ОбластьМакета.Параметры.РезультатОсновное	= СтрокаТЧ.РезультатОсновное;
		ОбластьМакета.Параметры.РезультатСовместительство	= СтрокаТЧ.РезультатСовместительство;
		ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.ОтработаноДней	= Доходы.Итог("ОтработаноДней");
	ОбластьМакета.Параметры.РезультатОсновное	= Доходы.Итог("РезультатОсновное");
	ОбластьМакета.Параметры.РезультатСовместительство	= Доходы.Итог("РезультатСовместительство");
	ОбластьМакета.Параметры.РезультатВсего	= Доходы.Итог("РезультатВсего");
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Если  Доходы.Итог("ОтработаноДней") <> 0 Тогда
		Результат = Доходы.Итог("РезультатВсего")/Доходы.Итог("ОтработаноДней");
	Иначе
		Результат = 0;
	КонецЕсли;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ОбластьМакета.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), "uk")+"  ( "+Формат(Цел(Результат),"ЧЦ=10; ЧДЦ=0; ЧН=0; ЧГ=")+" грн. "+Формат((Результат-Цел(Результат))*100,"ЧЦ=2; ЧДЦ=0; ЧН=00; ЧВН=")+" коп.)";
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьБезработица()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетБезработица");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	Если ЗначениеЗаполнено(Адрес) Тогда
		ОбластьМакетаШапка.Параметры.Организация = ОбластьМакетаШапка.Параметры.Организация + ", "+Адрес;
	Конецесли;	
	
	ОбластьМакетаШапка.Параметры.Номер			= Номер;
	ОбластьМакетаШапка.Параметры.Дата			= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
			
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л=""uk""");
		Если СтрокаТЧ.КалендарныеДни > 0 Тогда
			ОбластьМакета.Параметры.Месяц			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ""; Л=""uk""");
		Иначе
			ОбластьМакета.Параметры.Месяц			= СписокНеявок(СтрокаТЧ.Период);
		КонецЕсли;	
		ОбластьМакета.Параметры.КалендарныеДни	= Строка(СтрокаТЧ.КалендарныеДни)+ СписокНеявокПоДням(СтрокаТЧ.Период);
		ОбластьМакета.Параметры.ВсегоОблагаемое	= СтрокаТЧ.ВсегоОблагаемое;
		ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
		ОбластьМакета.Параметры.РезультатВзносы	= СтрокаТЧ.РезультатВзносы;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.КалендарныеДни	= Доходы.Итог("КалендарныеДни");
	ОбластьМакета.Параметры.ВсегоОблагаемое	= Доходы.Итог("ВсегоОблагаемое");
	ОбластьМакета.Параметры.РезультатВсего	= Доходы.Итог("РезультатВсего");
	ОбластьМакета.Параметры.РезультатВзносы	= Доходы.Итог("РезультатВзносы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Если  Доходы.Итог("КалендарныеДни") <> 0 Тогда
		Результат1 = Доходы.Итог("РезультатВсего")/Доходы.Итог("КалендарныеДни");
		Результат2 = СтрокаТЧ.Предел/30.44;
		Если Результат2 = 0 Тогда
			Результат = Результат1;
		Иначе
			Результат = Мин(Результат1,Результат2);
		КонецЕсли;	
	Иначе
		Результат = 0;
	КонецЕсли;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");

	Если Сотрудник.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.Совместительство Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Работники.Период КАК ДатаУвольнения
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|	И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ";
			
		ЗапросДатаУвольнения = Новый Запрос(ТекстЗапроса);
		ЗапросДатаУвольнения.УстановитьПараметр("Сотрудник", Сотрудник);
		ЗапросДатаУвольнения.УстановитьПараметр("Организация", Организация);
			
		РезультатДатаУвольнения = ЗапросДатаУвольнения.Выполнить().Выбрать();
		Пока РезультатДатаУвольнения.Следующий() Цикл
			ОбластьМакета.Параметры.ДатаУвольнения	= РезультатДатаУвольнения.ДатаУвольнения-1;
		КонецЦикла;	
		
	КонецЕсли;
	
	
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ОбластьМакета.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), "uk")+"  ( "+Формат(Цел(Результат),"ЧЦ=10; ЧДЦ=0; ЧН=0; ЧГ=")+" грн. "+Формат((Результат-Цел(Результат))*100,"ЧЦ=2; ЧДЦ=0; ЧН=00; ЧВН=")+" коп.)";
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьПенсия()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетПенсия");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	Результат = Доходы.Итог("РезультатВсего");
	ОбластьМакетаШапка.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), "uk");
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Таблица|ПерваяКолонка");
	ТабДокумент.Вывести(ОбластьМакета);
	Год = 0;
	Итог = 0;
	ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
	ТЧДоходы = Доходы.Выгрузить();
	ТЧДоходы.Сортировать("Период");
	Для каждого СтрокаТЧ Из ТЧДоходы Цикл
		Если Год(СтрокаТЧ.Период) <> Год Тогда
			Если Год > 0 Тогда
				ОбластьКолонка.Параметры.Итог = Итог;
				ТабДокумент.Присоединить(ОбластьКолонка);
			КонецЕсли;
			Год = Год(СтрокаТЧ.Период);
			Итог = 0;
			ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
			ОбластьКолонка.Параметры.Год = Строка(Год)+" р.";
			ОбластьКолонка.Параметры.Январь = 0;
			ОбластьКолонка.Параметры.Февраль = 0;
			ОбластьКолонка.Параметры.Март = 0;
			ОбластьКолонка.Параметры.Апрель = 0;
			ОбластьКолонка.Параметры.Май = 0;
			ОбластьКолонка.Параметры.Июнь = 0;
			ОбластьКолонка.Параметры.Июль = 0;
			ОбластьКолонка.Параметры.Август = 0;
			ОбластьКолонка.Параметры.Сентябрь = 0;
			ОбластьКолонка.Параметры.Октябрь = 0;
			ОбластьКолонка.Параметры.Ноябрь = 0;
			ОбластьКолонка.Параметры.Декабрь = 0;
		КонецЕсли;	
		Если Месяц(СтрокаТЧ.Период) = 1 Тогда
			ОбластьКолонка.Параметры.Январь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 2 Тогда
			ОбластьКолонка.Параметры.Февраль = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 3 Тогда
			ОбластьКолонка.Параметры.Март = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 4 Тогда
			ОбластьКолонка.Параметры.Апрель = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 5 Тогда
			ОбластьКолонка.Параметры.Май = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 6 Тогда
			ОбластьКолонка.Параметры.Июнь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 7 Тогда
			ОбластьКолонка.Параметры.Июль = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 8 Тогда
			ОбластьКолонка.Параметры.Август = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 9 Тогда
			ОбластьКолонка.Параметры.Сентябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 10 Тогда
			ОбластьКолонка.Параметры.Октябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 11 Тогда
			ОбластьКолонка.Параметры.Ноябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 12 Тогда
			ОбластьКолонка.Параметры.Декабрь = СтрокаТЧ.РезультатВсего;
		КонецЕсли;	
		Итог = Итог + СтрокаТЧ.РезультатВсего;	
	КонецЦикла;
	
	ОбластьКолонка.Параметры.Итог = Итог;
	ТабДокумент.Присоединить(ОбластьКолонка);
	
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	ГодНач = Год(ТЧДоходы[0].Период);
	ГодКон = Год(ТЧДоходы[ТЧДоходы.Количество()-1].Период);
	Если ГодНач = ГодКон Тогда
		Года = Строка(ГодНач);
	Иначе
		Года = Строка(ГодНач)+" - "+Строка(ГодКон);
	КонецЕсли;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ОбластьМакета.Параметры.Года = Года;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьСубсидия()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дт, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ";
		
	ЗапросДолжность = Новый Запрос(ТекстЗапроса);
	ЗапросДолжность.УстановитьПараметр("Дт", Дата);
	ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДолжность.УстановитьПараметр("Организация", Организация);
	ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
	РезультатДолжность.Следующий();

		
	// получаем макет
	Макет = ПолучитьМакет("МакетСубсидия");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	ОбластьМакетаШапка.Параметры.Должность = РезультатДолжность.Должность;
	Если Сотрудник.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы Тогда
		ОбластьМакетаШапка.Параметры.ВидЗанятости = "основне";
	Иначе
		ОбластьМакетаШапка.Параметры.ВидЗанятости = "за сумісництвом";
	КонецЕсли;	
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.ФЛП = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо,СведенияОбОрганизации.ПолноеНаименование,"");
	ОбластьМакетаШапка.Параметры.Организация = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо,СведенияОбОрганизации.ПолноеНаименование,"");
	ОбластьМакетаШапка.Параметры.Организация_ФЛП = СведенияОбОрганизации.ПолноеНаименование;
	ОбластьМакетаШапка.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	ОбластьМакетаШапка.Параметры.Телефон = СведенияОбОрганизации.Телефоны;
	ОбластьМакетаШапка.Параметры.ЕДРПОУ = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо,СведенияОбОрганизации.КодПоЕДРПОУ,СведенияОбОрганизации.КодПоДРФО);
	
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
			
	Срез = РегистрыСведений.КодыОрганизации.СрезПоследних(Дата, НОВЫЙ Структура("Организация",Организация));
	Если Срез.Количество() > 0 тогда
		ОбластьМакетаШапка.Параметры.ГНА = Срез[0].НалоговаяИнспекция;
	КонецЕсли;	
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л=""uk""");
		ОбластьМакета.Параметры.НачисленоЗП	= СтрокаТЧ.НачисленоЗП;
		ОбластьМакета.Параметры.НачисленоПрочее	= СтрокаТЧ.НачисленоПрочее;
		ОбластьМакета.Параметры.Алименты	= СтрокаТЧ.Алименты;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.НачисленоЗП	= Доходы.Итог("НачисленоЗП");
	ОбластьМакета.Параметры.НачисленоПрочее	= Доходы.Итог("НачисленоПрочее");
	ОбластьМакета.Параметры.Алименты	= Доходы.Итог("Алименты");
    ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Результат = Доходы.Итог("НачисленоЗП")+Доходы.Итог("НачисленоПрочее")-Доходы.Итог("Алименты");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ПериодС = Формат(Доходы[0].Период,	"ДФ=""ММММ гггг""; Л=""uk""");
	ОбластьМакета.Параметры.ПериодПо = Формат(СтрокаТЧ.Период,	"ДФ=""ММММ гггг""; Л=""uk""");
	ОбластьМакета.Параметры.ДолжностьРуководителя	= ОтветственныеЛица.РуководительДолжность;
	ОбластьМакета.Параметры.Дата	= Дата;
	ОбластьМакета.Параметры.Номер	= Номер;
	ОбластьМакета.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), "uk");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;

	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьСубсидия2015()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ";
		
	ЗапросДолжность = Новый Запрос(ТекстЗапроса);
	ЗапросДолжность.УстановитьПараметр("Дата", Дата);
	ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДолжность.УстановитьПараметр("Организация", Организация);
	ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
	РезультатДолжность.Следующий();

		
	// получаем макет
	Макет = ПолучитьМакет("МакетСубсидия2015");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	ОбластьМакетаШапка.Параметры.Должность = РезультатДолжность.Должность;
	Если Сотрудник.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы Тогда
		ОбластьМакетаШапка.Параметры.ВидЗанятости = "основне";
	Иначе
		ОбластьМакетаШапка.Параметры.ВидЗанятости = "за сумісництвом";
	КонецЕсли;	
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.ФЛП = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо,СведенияОбОрганизации.ПолноеНаименование,"");
	ОбластьМакетаШапка.Параметры.Организация = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо,СведенияОбОрганизации.ПолноеНаименование,"");
	ОбластьМакетаШапка.Параметры.Организация_ФЛП = СведенияОбОрганизации.ПолноеНаименование;
	ОбластьМакетаШапка.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	ОбластьМакетаШапка.Параметры.Телефон = СведенияОбОрганизации.Телефоны;
	
	ОбластьМакетаШапка.Параметры.ЕДРПОУ = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо,СведенияОбОрганизации.КодПоЕДРПОУ,"");
	ОбластьМакетаШапка.Параметры.ДРФОФЛП = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо,"",СведенияОбОрганизации.КодПоДРФО);
	
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
	
	ОбластьМакетаШапка.Параметры.Год			= Формат(Год(ДатаНач),"ЧЦ=4; ЧГ=");
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ""; Л=""uk""");
		ОбластьМакета.Параметры.НачисленоЗП	= СтрокаТЧ.НачисленоЗП;
		ОбластьМакета.Параметры.НачисленоПрочее	= СтрокаТЧ.НачисленоПрочее;
		ОбластьМакета.Параметры.НДФЛ	= СтрокаТЧ.НДФЛ;
		ОбластьМакета.Параметры.НДФЛПрочее	= СтрокаТЧ.НДФЛПрочее;
		ОбластьМакета.Параметры.Алименты	= СтрокаТЧ.Алименты;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.НачисленоЗП	= Доходы.Итог("НачисленоЗП");
	ОбластьМакета.Параметры.НачисленоПрочее	= Доходы.Итог("НачисленоПрочее");
	ОбластьМакета.Параметры.НДФЛ	= Доходы.Итог("НДФЛ");
	ОбластьМакета.Параметры.НДФЛПрочее	= Доходы.Итог("НДФЛПрочее");
	ОбластьМакета.Параметры.Алименты	= Доходы.Итог("Алименты");
    ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Результат = Доходы.Итог("НачисленоЗП")+Доходы.Итог("НачисленоПрочее")-Доходы.Итог("НДФЛ")-Доходы.Итог("НДФЛПрочее")-Доходы.Итог("Алименты");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ПериодС = Формат(Доходы[0].Период,	"ДФ=""ММММ гггг ""; Л=""uk""");
	ОбластьМакета.Параметры.ПериодПо = Формат(СтрокаТЧ.Период,	"ДФ=""ММММ гггг ""; Л=""uk""");
	ОбластьМакета.Параметры.ДолжностьРуководителя	= ОтветственныеЛица.РуководительДолжность;
	ОбластьМакета.Параметры.Дата	= Дата;
	ОбластьМакета.Параметры.Номер	= Номер;
	ОбластьМакета.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), "uk");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;

	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьСоцстрах2015()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетСоцстрах2015");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	ОбластьМакетаШапка.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	
	ОбластьМакетаШапка.Параметры.Номер			= Номер;
	ОбластьМакетаШапка.Параметры.Дата			= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
			
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л=""uk""");
		ОбластьМакета.Параметры.КалендарныеДни	= СтрокаТЧ.КалендарныеДни;
		ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
		ОбластьМакета.Параметры.РезультатВзносы	= СтрокаТЧ.РезультатВзносы;
		ОбластьМакета.Параметры.СтавкаВзносов	= СтрокаТЧ.СтавкаВзносов;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.КалендарныеДни	= Доходы.Итог("КалендарныеДни");
	ОбластьМакета.Параметры.РезультатВсего	= Доходы.Итог("РезультатВсего");
	ОбластьМакета.Параметры.РезультатВзносы	= Доходы.Итог("РезультатВзносы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	Неявки = СписокНеявокСоцстрах2015();
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	
	Инд =1;
	Для Каждого Неявка из Неявки Цикл
		ОбластьМакета.Параметры["Причина"+Строка(Инд)] = Неявка.Наименование;
		Инд = Инд + 1;
		Если Инд > 4 Тогда
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПенсия2015()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетПенсия2015");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	Результат = Доходы.Итог("РезультатВсего");
	ОбластьМакетаШапка.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), "uk");
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Таблица|ПерваяКолонка");
	ТабДокумент.Вывести(ОбластьМакета);
	Год = 0;
	Итог = 0;
	ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
	ТЧДоходы = Доходы.Выгрузить();
	ТЧДоходы.Сортировать("Период");
	Для каждого СтрокаТЧ Из ТЧДоходы Цикл
		Если Год(СтрокаТЧ.Период) <> Год Тогда
			Если Год > 0 Тогда
				ОбластьКолонка.Параметры.Итог = Итог;
				ТабДокумент.Присоединить(ОбластьКолонка);
			КонецЕсли;
			Год = Год(СтрокаТЧ.Период);
			Итог = 0;
			ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
			ОбластьКолонка.Параметры.Год = Формат(Год,"ЧЦ=4; ЧДЦ=0; ЧГ=")+" р.";
			ОбластьКолонка.Параметры.Январь = 0;
			ОбластьКолонка.Параметры.Февраль = 0;
			ОбластьКолонка.Параметры.Март = 0;
			ОбластьКолонка.Параметры.Апрель = 0;
			ОбластьКолонка.Параметры.Май = 0;
			ОбластьКолонка.Параметры.Июнь = 0;
			ОбластьКолонка.Параметры.Июль = 0;
			ОбластьКолонка.Параметры.Август = 0;
			ОбластьКолонка.Параметры.Сентябрь = 0;
			ОбластьКолонка.Параметры.Октябрь = 0;
			ОбластьКолонка.Параметры.Ноябрь = 0;
			ОбластьКолонка.Параметры.Декабрь = 0;
		КонецЕсли;	
		Если Месяц(СтрокаТЧ.Период) = 1 Тогда
			ОбластьКолонка.Параметры.Январь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 2 Тогда
			ОбластьКолонка.Параметры.Февраль = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 3 Тогда
			ОбластьКолонка.Параметры.Март = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 4 Тогда
			ОбластьКолонка.Параметры.Апрель = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 5 Тогда
			ОбластьКолонка.Параметры.Май = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 6 Тогда
			ОбластьКолонка.Параметры.Июнь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 7 Тогда
			ОбластьКолонка.Параметры.Июль = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 8 Тогда
			ОбластьКолонка.Параметры.Август = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 9 Тогда
			ОбластьКолонка.Параметры.Сентябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 10 Тогда
			ОбластьКолонка.Параметры.Октябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 11 Тогда
			ОбластьКолонка.Параметры.Ноябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 12 Тогда
			ОбластьКолонка.Параметры.Декабрь = СтрокаТЧ.РезультатВсего;
		КонецЕсли;	
		Итог = Итог + СтрокаТЧ.РезультатВсего;	
	КонецЦикла;
	
	ОбластьКолонка.Параметры.Итог = Итог;
	ТабДокумент.Присоединить(ОбластьКолонка);
	
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьДоходыИНалоги()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дт, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ";
		
	ЗапросДолжность = Новый Запрос(ТекстЗапроса);
	ЗапросДолжность.УстановитьПараметр("Дт", Дата);
	ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДолжность.УстановитьПараметр("Организация", Организация);
	ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
	РезультатДолжность.Следующий();

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(Доходы.Период) КАК НачалоПериодаДоходов,
	|	МАКСИМУМ(КОНЕЦПЕРИОДА(Доходы.Период,МЕСЯЦ)) КАК ОкончаниеПериодаДоходов
	|ИЗ
	|	Документ.СправкаОДоходах.Доходы КАК Доходы
	|ГДЕ
	|	Доходы.Ссылка = &Ссылка";
		
	ЗапросПериодДоходов = Новый Запрос(ТекстЗапроса);
	ЗапросПериодДоходов.УстановитьПараметр("Ссылка", Ссылка);
		
	РезультатПериодДоходов = ЗапросПериодДоходов.Выполнить().Выбрать();
	РезультатПериодДоходов.Следующий();
	
	// получаем макет
	Макет = ПолучитьМакет("МакетНалоги");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		
	Если  Сотрудник.Физлицо.Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		ОбластьМакетаШапка.Параметры.он                     =НСтр("ru='он';uk='він'",КодЯзыкаПечать);
		ОкончаниеРаботал = НСтр("ru='';uk='в'",КодЯзыкаПечать);
	Иначе
		ОбластьМакетаШапка.Параметры.он                     =НСтр("ru='она';uk='вона'",КодЯзыкаПечать);
		ОкончаниеРаботал = НСтр("ru='а';uk='ла'",КодЯзыкаПечать);;
	КонецЕсли;	
		
	ТекстДоговор = "";
		
	Если Сотрудник.ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.Подряда Тогда
		ТекстРаботает = НСтр("ru='работал';uk='працюва'",КодЯзыкаПечать)+ОкончаниеРаботал+" в "+Организация.НаименованиеПолное +
		ТекстДоговор + НСтр("ru=' по гражданско-правовому договору';uk=' за цивільно-правовим договором'",КодЯзыкаПечать);
	Иначе	
		Если НЕ ЗначениеЗаполнено(Сотрудник.ДатаУвольнения) Тогда
			ТекстРаботает = НСтр("ru='работает в ';uk='працює в '",КодЯзыкаПечать) + Организация.НаименованиеПолное +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
			Формат(Сотрудник.ДатаПриемаНаРаботу, "ДЛФ=Д")+НСтр("ru=' г';uk=' р'",КодЯзыкаПечать) + ТекстДоговор + НСтр("ru='. В настоящий момент занимает должность ';uk='. На даний момент займає посаду '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
		Иначе
			ТекстРаботает = НСтр("ru='работал';uk='працюва'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+Организация.НаименованиеПолное +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
			Формат(Сотрудник.ДатаПриемаНаРаботу, "ДЛФ=Д")+ НСтр("ru=' г.';uk=' р.'",КодЯзыкаПечать) + " по " + Формат(Сотрудник.ДатаУвольнения-86400, "ДЛФ=Д")+ НСтр("ru=' г.';uk=' р.'",КодЯзыкаПечать)  + ТекстДоговор + НСтр("ru=' на должности ';uk=' на посаді '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
		КонецЕсли;
	КонецЕсли;
	ОбластьМакетаШапка.Параметры.Номер						= Номер;
	ОбластьМакетаШапка.Параметры.Дата						= Формат(Дата, "ДЛФ=Д");
	//ОбластьМакетаШапка.Параметры.ДатаНач					= Формат(МАКС(Сотрудник.ДатаПриемаНаРаботу,РезультатПериодДоходов.НачалоПериодаДоходов), "ДЛФ=Д");
	//ОбластьМакетаШапка.Параметры.ДатаКон					= Формат(?(НЕ ЗначениеЗаполнено(Сотрудник.ДатаУвольнения),РезультатПериодДоходов.ОкончаниеПериодаДоходов,МИН(Сотрудник.ДатаУвольнения,РезультатПериодДоходов.ОкончаниеПериодаДоходов)), "ДЛФ=Д");
		
	ОбластьМакетаШапка.Параметры.ИдентификационныйКод		= Сотрудник.Физлицо.КодПоДРФО;
	ОбластьМакетаШапка.Параметры.ТекстРаботает				= ТекстРаботает;
		
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	
	//Выводим шапку
	ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("ОбластьПериод");
	ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
	
	ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	Для Каждого СтрокаНастройки ИЗ НастройкиВыводаНаПечать Цикл
		Если СтрокаНастройки.Выводить И СтрокаНастройки.ИмяКолонки <> "Период" Тогда
			ОбластьМакетаЗаголовок.Параметры.Заголовок = СтрокаНастройки.ИмяКолонкиДляПечати;
			ТабДокумент.Присоединить(ОбластьМакетаЗаголовок);
		КонецЕсли;	
	КонецЦикла;	
		
	// выводим строки
	
	ДоходыКолонки = Доходы.ВыгрузитьКолонки();
	СписокВыводимыхКолонок = Новый СписокЗначений;
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Выводить", Истина);
	НайденныеСтроки = НастройкиВыводаНаПечать.НайтиСтроки(ПараметрыОтбора);
	ВыводимыеКолонки = "";
	Для Каждого ДоходыКолонка Из НайденныеСтроки Цикл
		ВыводимыеКолонки = ВыводимыеКолонки + "," + ДоходыКолонка.ИмяКолонки; 
	КонецЦикла;
	
	ТаблицаПечати = Доходы.Выгрузить();
	ТаблицаПечати = ТаблицаПечати.Скопировать(,ВыводимыеКолонки);
	ОбластьПериод = Макет.ПолучитьОбласть("ОбластьСтрокаПериод"); 
	ОбластьМакета = Макет.ПолучитьОбласть("ОбластьСтрока"); 
	
	Для Каждого СтрокаТЧ Из ТаблицаПечати Цикл
		Для Каждого СтолбецТЧ из ТаблицаПечати.Колонки Цикл
			ИндексКолонки = ТаблицаПечати.Колонки.Индекс(СтолбецТЧ);
			Если ИндексКолонки = 0 Тогда
				ОбластьПериод.Параметры.Период = Формат(СтрокаТЧ.Период,			"Л="+КодЯзыкаПечать+"; ДФ='ММММ ` гггг'");
			Иначе
				ОбластьМакета.Параметры.СтрокаДанные = Формат(СтрокаТЧ[ИндексКолонки],	"ЧЦ=10; ЧДЦ=2");
			КонецЕсли;	
			Если ИндексКолонки = 0 Тогда
				ТабДокумент.Вывести(ОбластьПериод);
			Иначе
				ТабДокумент.Присоединить(ОбластьМакета);
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;		
	//	
	//Итоги
	ОбластьИтог  = Макет.ПолучитьОбласть("ОбластьИтог");
	ОбластьМакета = Макет.ПолучитьОбласть("ОбластьКолонкиИтог");
	Для Каждого СтолбецТЧ из ТаблицаПечати.Колонки Цикл
		ИндексКолонки = ТаблицаПечати.Колонки.Индекс(СтолбецТЧ);
		ВыводитьВПодвале = НастройкиВыводаНаПечать.Найти(СтолбецТЧ.Имя).ИтогиВПодвале;
		Если ИндексКолонки <> 0  Тогда
			Если ВыводитьВПодвале Тогда
				ОбластьМакета.Параметры.ИтоговыеДанные = Формат(ТаблицаПечати.Итог(СтолбецТЧ.Имя),	"ЧЦ=10; ЧДЦ=2");
			Иначе
				ОбластьМакета.Параметры.ИтоговыеДанные = "";
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьМакета);
		Иначе
			ТабДокумент.Вывести(ОбластьИтог);
		КонецЕсли;
	КонецЦикла;		
	//Дно
	ОбластьИтоги  = Макет.ПолучитьОбласть("Итоги");
	Для Каждого СтрокаНастройки ИЗ НастройкиВыводаНаПечать Цикл
		Если СтрокаНастройки.ИтогиВПодвале Тогда
			ОбластьИтоги.Параметры.ДатаНач			= Формат(МАКС(Сотрудник.ДатаПриемаНаРаботу,РезультатПериодДоходов.НачалоПериодаДоходов), "ДЛФ=Д");
			ОбластьИтоги.Параметры.ДатаКон			= Формат(?(НЕ ЗначениеЗаполнено(Сотрудник.ДатаУвольнения),РезультатПериодДоходов.ОкончаниеПериодаДоходов,МИН(Сотрудник.ДатаУвольнения,РезультатПериодДоходов.ОкончаниеПериодаДоходов)), "ДЛФ=Д");
			ОбластьИтоги.Параметры.ИмяКолонки		= СтрокаНастройки.ИмяКолонкиДляПечати;
			ОбластьИтоги.Параметры.ИтогПоКолонке	= Формат(Доходы.Итог(СтрокаНастройки.ИмяКолонки),	"ЧЦ=10; ЧДЦ=2");
			ТабДокумент.Вывести(ОбластьИтоги);
		КонецЕсли;	
	КонецЦикла;	

	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	//
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.НазначениеСправки	= НазначениеСправки;
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Директор	= ОтветственныеЛица.Руководитель;

	ТабДокумент.Вывести(ОбластьМакета);
	//
	Возврат ТабДокумент;
КонецФункции

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура  Печать(НазваниеМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ЭтоНовый() Тогда
		Предупреждение(НСтр("ru='Документ можно распечатать только после его записи';uk='Документ можна роздрукувати тільки після його запису'"));
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Получить экземпляр документа на печать
	Если НазваниеМакета = "Справка" Тогда
		Если ПроверкаЗаполненияРеквизитов() Тогда
			Возврат;
		КонецЕсли;
		
		
		Если ВидСправки = Перечисления.ВидыСправокОДоходах.Произвольная Тогда
			ТабДокумент = ПечатьПроизвольная();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах Тогда	
			ТабДокумент = ПечатьСоцСтрах();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Безработица Тогда	
			ТабДокумент = ПечатьБезработица();	
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Пенсия Тогда	
			ТабДокумент = ПечатьПенсия();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Субсидия Тогда	
			ТабДокумент = ПечатьСубсидия();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Субсидия2015 Тогда	
			ТабДокумент = ПечатьСубсидия2015();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах2015 Тогда	
			ТабДокумент = ПечатьСоцстрах2015();		
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Пенсия2015 Тогда	
			ТабДокумент = ПечатьПенсия2015();	
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.ДоходыИНалоги Тогда	
			ТабДокумент = ПечатьДоходыИНалоги();	
		КонецЕсли;	
			
			
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,НСтр("ru='Справка о доходах ';uk='Довідка про доходи '"));	
	КонецЕсли;
	
	

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Справка",НСтр("ru='Справка';uk='Довідка'"));

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Функция ПроверкаЗаполненияРеквизитов()
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указана организация';uk='Не вказано організацію'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указан работник';uk='Не вказано працівника'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указана дата справки';uk='Не вказано дату довідки'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНач) ИЛИ Не ЗначениеЗаполнено(ДатаКон) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указан период';uk='Не вказано період'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	
	Если Доходы.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не предоставлена информация о доходах';uk='Не надано інформацію про доходи'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕСли;
	
		Если ВидСправки = Перечисления.ВидыСправокОДоходах.Произвольная Тогда
		Для Каждого Строка ИЗ Доходы Цикл
			Если Строка.Период = Дата(1,1,1) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В строке № ""%1"" не указан период';uk='В строці № ""%1"" не вказано період'"), Строка.НомерСтроки),,, СтатусСообщения.Важное);
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах Тогда
		Если Доходы.Итог("ОтработаноДней") = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Количество отработанных дней не может равнятся 0';uk='Кількість відпрацьованих днів не може бути рівною 0'"),,,СтатусСообщения.Важное);
			Возврат Истина;
		КонецЕсли;			
	КонецЕсли;
	
	Если НЕ(Сотрудник.ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.Подряда И (ВидСправки = Перечисления.ВидыСправокОДоходах.ДоходыИНалоги ИЛИ ВидСправки = Перечисления.ВидыСправокОДоходах.Произвольная))Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕстьNULL(Работники.Период, ДАТАВРЕМЯ(1,1,1)) КАК ДатаПриема
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПервых(, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период";
		ЗапросДатаПриема = Новый Запрос(ТекстЗапроса);
		ЗапросДатаПриема.УстановитьПараметр("Сотрудник", Сотрудник);
		ЗапросДатаПриема.УстановитьПараметр("Организация", Организация);
			
		РезультатДатаПриема = ЗапросДатаПриема.Выполнить().Выбрать();
		РезультатДатаПриема.Следующий();
		
		Если НЕ ЗначениеЗаполнено(РезультатДатаПриема.ДатаПриема) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Работник не принят на работу в данную организацию';uk='Працівник не прийнятий на работу в дану організацію'"),,,СтатусСообщения.Важное);
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

Функция СписокНеявок(ДатаПериода)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК Причина
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	|		И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &парамСотрудник
	|       И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
	|";
						 
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаПериода);
	Запрос.УстановитьПараметр("парамДатаКон", КонецМесяца(ДатаПериода));
	МассивНеявки = Новый Массив(3);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("УважительныеНеявки", МассивНеявки);
	Неявки = Запрос.Выполнить().Выбрать();
	
	Результат = "";
	Пока Неявки.Следующий() Цикл
		Если Результат <> "" Тогда
			Результат = Результат + ", ";
		КонецЕсли;
		Если Неявки.Причина = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь Тогда
			Результат = Результат + "тимчасова непрацездатність";
		Иначе
			Результат = Результат + "відпустка";
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции	

Функция СписокНеявокПоДням(ДатаПериода)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК Причина,
	|		СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,ДЕНЬ)+1) КАК Календарные
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	|		И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &парамСотрудник
	|       И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
	|   СГРУППИРОВАТЬ ПО ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени
	|";
						 
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаПериода);
	Запрос.УстановитьПараметр("парамДатаКон", КонецМесяца(ДатаПериода));
	МассивНеявки = Новый Массив(3);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("УважительныеНеявки", МассивНеявки);
	Неявки = Запрос.Выполнить().Выбрать();
	
	Результат = "";
	Пока Неявки.Следующий() Цикл
		Если Результат <> "" Тогда
			Результат = Результат + ", ";
		КонецЕсли;
		Если Неявки.Причина = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь Тогда
			Результат = Результат + Строка(Неявки.Календарные)+" - хвороба";
		Иначе
			Результат = Результат + Строка(Неявки.Календарные)+ " - відпустка";
		КонецЕсли;	
	КонецЦикла;	
	
	Если Результат = "" Тогда 
		Возврат Результат;
	Иначе
		Возврат " ("+Результат+")";
	Конецесли;	
	
КонецФункции

Функция СписокНеявокСоцстрах2015()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
    |	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета КАК ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.Наименование КАК Наименование,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидВремени
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &парамСотрудник
	|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
	|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.УважительнаяПричинаДляБольничных = ИСТИНА
	|";
						 
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	
	Неявки = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Неявка из Неявки Цикл
		Если Неявка.ВидВремени = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь ИЛИ
			 Неявка.ВидВремени = Справочники.КлассификаторИспользованияРабочегоВремени.БолезньБезОплаты Тогда
			 Неявка.Наименование = "Тимчасова непрацездатність";
		ИначеЕсли Неявка.ВидВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам Тогда
			Если Неявка.ВидРасчета.НачислениеЗаСчетФСС Тогда
				Неявка.Наименование = "Відпустка у зв’язку з вагітністю та пологами";
			Иначе
				Неявка.Наименование = "Відпустка по догляду за дитиною до досягнення нею трирічного віку";
			КонецЕсли;
		ИначеЕсли Неявка.ВидВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком Тогда	
			Неявка.Наименование = "Відпустка по догляду за дитиною до досягнення нею шестирічного віку";
		Иначе
			Неявка.Наименование = "Відпустка без збереження заробітної плати";
		КонецЕсли;	 
	КонецЦикла;	
	
	Неявки.Свернуть("Наименование");
	
	Возврат Неявки;
	
КонецФункции

Процедура ОпределитьСтруктуруНастройкиВыводаНаПечать() Экспорт
	
	СохраненныеНастройки = Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	СправкаОДоходах.Ссылка КАК СправкаОДоходах,
	|	МАКСИМУМ(СправкаОДоходах.Дата) КАК Дата
	|ИЗ
	|	Документ.СправкаОДоходах КАК СправкаОДоходах
	|ГДЕ
	|	СправкаОДоходах.ВидСправки = ЗНАЧЕНИЕ(Перечисление.ВидыСправокОДоходах.ДоходыИНалоги)
	|
	|СГРУППИРОВАТЬ ПО
	|	СправкаОДоходах.Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СохраненныеНастройки = Выборка.СправкаОДоходах.НастройкиВыводаНаПечать.Выгрузить();
	КонецЕсли;	
	
	Если СохраненныеНастройки.Количество() > 0 Тогда
		НастройкиВыводаНаПечать.Загрузить(СохраненныеНастройки);
	Иначе 
		КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
		НастройкиВыводаНаПечать.Очистить();
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "Период";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Период';uk='Період'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "ОблагаемоеЕСВ";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='База ЕСВ';uk='База ЄСВ'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "ОблагаемоеЕСВПредел";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='База ЕСВ с учетом предела';uk='База ЄСВ з урахуванням межі'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "РезультатВзносы";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Удержано ЕСВ';uk='Утримано ЄСВ'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "ДоходНДФЛ";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Начисленный доход';uk='Нарахований дохід'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "НДФЛ";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Сумма НДФЛ';uk='Сума ПДФО'",КодЯзыкаПечать);
		//ВОЕННЫЙ СБОР
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "ДоходВоенныйСбор";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Доход для военного сбора';uk='Дохід для військового збору'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "ВоенныйСбор";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Военный сбор';uk='Військовий збір'",КодЯзыкаПечать);

		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "ПризнакСоциальнойЛьготы";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Признак социальной льготы';uk='Ознака соціальної льготи'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "СуммаНалоговойЛьготы";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Сумма налоговой социальной льготы';uk='Сума податкової соціальної льготи'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "Выплачено";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Выплачено';uk='Виплачено'",КодЯзыкаПечать);
		НоваяСтрока = НастройкиВыводаНаПечать.Добавить();
		НоваяСтрока.Выводить = Истина;
		НоваяСтрока.ИтогиВПодвале = Ложь;
		НоваяСтрока.ИмяКолонки = "ДоходЗаВычетомНДФЛ";
		НоваяСтрока.ИмяКолонкиДляПечати = НСтр("ru='Доход за вычетом НДФЛ';uk='Дохід за вирахуванням ПДФО'",КодЯзыкаПечать);

	КонецЕсли;
	
КонецПроцедуры	

#Если Клиент Тогда
НП = Новый НастройкаПериода;
#КонецЕсли
