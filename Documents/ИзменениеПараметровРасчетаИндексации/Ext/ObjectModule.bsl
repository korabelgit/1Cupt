

Процедура АвтозаполнениеНачисления(Регистратор, Начисления, Сотрудники ) Экспорт
	
	//Получим список видов расчета, входящих в базу индексации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		| ОсновныеНачисленияОрганизаций.Ссылка.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ИндексацияЗарплаты) 
		|";
	МассивБазаИндексации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета");
	
	//Получим список видов расчета, использующих тарифную ставку
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		| ОсновныеНачисленияОрганизаций.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы) 
		| ИЛИ ОсновныеНачисленияОрганизаций.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы)
		| ИЛИ ОсновныеНачисленияОрганизаций.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавкеУмножитьНаПроцент)
		| 
		| ОБЪЕДИНИТЬ	ВСЕ
		| 
		| ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		| ОсновныеНачисленияОрганизаций.Показатель.ТарифнаяСтавка
		|";
	МассивТребуетОклад = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("парамПериодРегистрации" , ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудник",Сотрудники); 
	
	Запрос.УстановитьПараметр("парамНачало" , ПериодРегистрации);
	Запрос.УстановитьПараметр("парамКонец" , КонецМесяца(ПериодРегистрации));
	
	Если Начисления = НачисленияДо Тогда
		Запрос.УстановитьПараметр("парамСрез" , ПериодРегистрации-1);
		Запрос.УстановитьПараметр("парамСРИндексация" , Перечисления.СпособыРасчетаОплатыТруда.ИндексацияЗарплаты);
	Иначе	
        Запрос.УстановитьПараметр("парамСрез" , КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамСРИндексация" , Перечисления.СпособыРасчетаОплатыТруда.ПустаяСсылка());
	КонецЕсли;	
	Запрос.УстановитьПараметр("парамБазаИндексации" , МассивБазаИндексации);
	
	Запрос.УстановитьПараметр("парамОрганизация" , Организация);
	Запрос.УстановитьПараметр("парамРегистратор" , Регистратор);

	МассивДействий = Новый Массив(2);
	МассивДействий[0] = Перечисления.ВидыДействияСНачислением.Изменить;
	МассивДействий[1] = Перечисления.ВидыДействияСНачислением.Начать;
	Запрос.УстановитьПараметр("парамДействиеНачатьИзменить", МассивДействий);
	Запрос.УстановитьПараметр("парамПрекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
	
	Запрос.УстановитьПараметр("парамТребуетОклад" , МассивТребуетОклад);
	
	Запрос.УстановитьПараметр("парамДатаВалютногоУчета" , ПериодРегистрации);
	Запрос.УстановитьПараметр("парамПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамВалютаРегламентУчета" , Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("парамМассивСпособовРасчетовБезВалюты" , ПроведениеРасчетов.ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты());
	Запрос.УстановитьПараметр("парамИндивидуальныйПоказатель",Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный);		
	Запрос.УстановитьПараметр("парамПоПодраделению",Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению);
	
	
	МассивСпособовРасчета = Новый Массив(2);
	МассивСпособовРасчета[0] = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы;
	МассивСпособовРасчета[1] = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы;
	Запрос.УстановитьПараметр("СпособыРасчета", МассивСпособовРасчета);		

	//	ВТСписокРаботникиИЗамены
	Если Истина Тогда 
		//	Описание:
		// 		Все сотрудники из табличной части, их внутренние совместительства и все сотрудники которых замещали
		//		Для п.1.
		ТекстЗапроса = "
		|// ---------------
		|// Сотрудники, самые обыкновенные основные работники и внешние совместители
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР	КОГДА Сотрудники.ОсновноеНазначение=ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка) 
		|				ТОГДА Сотрудники.Ссылка 
		|			ИНАЧЕ Сотрудники.ОсновноеНазначение 
		|	КОНЕЦ КАК Сотрудник,
		|	Сотрудники.Ссылка КАК Назначение
		|ПОМЕСТИТЬ ВТСписокРаботникиИЗамены	
		|ИЗ Справочник.СотрудникиОрганизаций КАК Сотрудники
		|ГДЕ	ВЫБОР КОГДА Сотрудники.ОсновноеНазначение=ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка) ТОГДА Сотрудники.Ссылка ИНАЧЕ Сотрудники.ОсновноеНазначение КОНЕЦ В ( &парамСотрудник )
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		ТекстЗапросаВТСписокРаботникиИЗамены = "ВТСписокРаботникиИЗамены";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТСписокРаботникиИЗамены";
	
	//	ВТСписокРаботники
	Если Истина Тогда 
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР КОГДА Сотрудники.ОсновноеНазначение=ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка) ТОГДА Сотрудники.Ссылка ИНАЧЕ Сотрудники.ОсновноеНазначение КОНЕЦ КАК Сотрудник,
		|	Сотрудники.Ссылка КАК Назначение
		|ПОМЕСТИТЬ ВТСписокРаботники	
		|ИЗ Справочник.СотрудникиОрганизаций КАК Сотрудники
		|ГДЕ	ВЫБОР КОГДА Сотрудники.ОсновноеНазначение=ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка) ТОГДА Сотрудники.Ссылка ИНАЧЕ Сотрудники.ОсновноеНазначение КОНЕЦ
		|			В ( &парамСотрудник )
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		ТекстЗапросаВТСписокРаботники = "ВТСписокРаботники";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТСписокРаботники";
	
	//	ВТДвиженияРаботников
	Если Истина Тогда 
		//	Описание:
		// 		Получим движения по регистру РаботникиОрганизации (Сотрудники из ВТСписокРаботникиИЗамены)
		//		Начало дня - это начало события, Конец дня это закрытие события
		//		Для п.1.
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Работники.Сотрудник					КАК Сотрудник,
		|	&парамНачало						КАК ДатаНачала,
		|   КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ)	КАК ДатаОкончания,
		|	Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
		|	Работники.ГрафикРаботы				КАК ГрафикРаботы,
		|	Работники.Должность					КАК Должность
		|ПОМЕСТИТЬ ВТДвиженияРаботников	
		|ИЗ (
		|	ВЫБРАТЬ 
		|		РаботникиОрганизаций.Сотрудник					КАК Сотрудник,
		|		РаботникиОрганизаций.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
		|		РаботникиОрганизаций.ГрафикРаботы				КАК ГрафикРаботы,
		|		РаботникиОрганизаций.Должность					КАК Должность
		|	ИЗ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамСрез, Сотрудник В (ВЫБРАТЬ ФильтрРаботники.Назначение ИЗ ВТСписокРаботники КАК ФильтрРаботники)) КАК РаботникиОрганизаций 
		|	ГДЕ	РаботникиОрганизаций.ЗанимаемыхСтавок > 0
		|   ) КАК Работники
		|
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачала
		|";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		ТекстЗапросаВТДвиженияРаботников = "ВТДвиженияРаботников";
	КонецЕсли; 
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТДвиженияРаботников";
	
	//	ВТПлановыеНачисления
	Если Истина Тогда 
		ТекстЗапроса = "
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		ПлановыеНачисления.Сотрудник 				КАК Сотрудник,
		|		&парамНачало								КАК ДатаНачала,
		|		КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ)			КАК ДатаОкончания,
		|		ПлановыеНачисления.ОсновноеНачисление 		КАК ОсновноеНачисление, // Истина = Оклад
		|		ПлановыеНачисления.ВидРасчета 				КАК ВидРасчета,
		|		ПлановыеНачисления.ДокументОснование,
		|		ПлановыеНачисления.Действие,
		|		ПлановыеНачисления.Показатель1,
		|		ПлановыеНачисления.Показатель2,
		|		ПлановыеНачисления.Показатель3,
		|		ПлановыеНачисления.Показатель4,
		|		ПлановыеНачисления.Показатель5,
		|		ПлановыеНачисления.Показатель6,
		|		ПлановыеНачисления.Валюта1,
		|		ПлановыеНачисления.Валюта2,
		|		ПлановыеНачисления.Валюта3,
		|		ПлановыеНачисления.Валюта4,
		|		ПлановыеНачисления.Валюта5,
		|		ПлановыеНачисления.Валюта6,
		|		ПлановыеНачисления.ВидУчетаВремениДляСредней
		|	ПОМЕСТИТЬ ВТПлановыеНачисления	
		|	ИЗ (
		|		ВЫБРАТЬ
		|			Начисления.Сотрудник			КАК Сотрудник,
		|			Начисления.ВидРасчетаИзмерение	КАК ВидРасчетаИзмерение,
		|			&парамНачало					КАК ДатаНачала,
		|			ВЫБОР	КОГДА Начисления.ВидРасчетаИзмерение.Код ЕСТЬ NULL 
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ							КАК ОсновноеНачисление, // Оклад
		|			Начисления.ВидРасчета			КАК ВидРасчета,
		|			Начисления.Действие				КАК Действие,
		|			Начисления.ДокументОснование	КАК ДокументОснование,
		|";
		Показатель1Текст = "
		|			ВЫБОР	КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|						ТОГДА ТарифныеСтавки1.Размер
		|					ИНАЧЕ Начисления.Показатель1
		|			КОНЕЦ";
		Показатель2Текст = СтрЗаменить(Показатель1Текст, "1", "2");
		Показатель3Текст = СтрЗаменить(Показатель1Текст, "1", "3");
		Показатель4Текст = СтрЗаменить(Показатель1Текст, "1", "4");
		Показатель5Текст = СтрЗаменить(Показатель1Текст, "1", "5");
		Показатель6Текст = СтрЗаменить(Показатель1Текст, "1", "6");
		ТекстЗапроса = ТекстЗапроса + "
		|			" + Показатель1Текст + "	КАК Показатель1,
		|			" + Показатель2Текст + "	КАК Показатель2,
		|			" + Показатель3Текст + "	КАК Показатель3,
		|			" + Показатель4Текст + "	КАК Показатель4,
		|			" + Показатель5Текст + "	КАК Показатель5,
		|			" + Показатель6Текст + "	КАК Показатель6,
		|";
		Валюта1Текст = "
		|			ВЫБОР	КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|						ТОГДА ТарифныеСтавки1.Валюта
		|					ИНАЧЕ Начисления.Валюта1
		|			КОНЕЦ";
		Валюта2Текст = СтрЗаменить(Валюта1Текст, "1", "2");
		Валюта3Текст = СтрЗаменить(Валюта1Текст, "1", "3");
		Валюта4Текст = СтрЗаменить(Валюта1Текст, "1", "4");
		Валюта5Текст = СтрЗаменить(Валюта1Текст, "1", "5");
		Валюта6Текст = СтрЗаменить(Валюта1Текст, "1", "6");
		ТекстЗапроса = ТекстЗапроса + "
		|			" + Валюта1Текст + "		КАК Валюта1,
		|			" + Валюта2Текст + "		КАК Валюта2,
		|			" + Валюта3Текст + "		КАК Валюта3,
		|			" + Валюта4Текст + "		КАК Валюта4,		
		|			" + Валюта5Текст + "		КАК Валюта5,		
		|			" + Валюта6Текст + "		КАК Валюта6,		
		|			Начисления.ВидУчетаВремениДляСредней	КАК ВидУчетаВремениДляСредней
		|
		|			ИЗ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
		|					&парамСрез, 
		|			    	Сотрудник В (ВЫБРАТЬ ФильтрРаботники.Назначение ИЗ ВТСписокРаботники КАК ФильтрРаботники)
		|				) КАК Начисления
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамСрез, ) КАК ТарифныеСтавки1
		|			ПО Начисления.ТарифныйРазряд1 = ТарифныеСтавки1.ТарифныйРазряд
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамСрез, ) КАК ТарифныеСтавки2
		|			ПО Начисления.ТарифныйРазряд2 = ТарифныеСтавки2.ТарифныйРазряд
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамСрез, ) КАК ТарифныеСтавки3
		|			ПО Начисления.ТарифныйРазряд3 = ТарифныеСтавки3.ТарифныйРазряд
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамСрез, ) КАК ТарифныеСтавки4
		|			ПО Начисления.ТарифныйРазряд4 = ТарифныеСтавки4.ТарифныйРазряд		
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамСрез, ) КАК ТарифныеСтавки5
		|			ПО Начисления.ТарифныйРазряд5 = ТарифныеСтавки5.ТарифныйРазряд		
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамСрез, ) КАК ТарифныеСтавки6
		|			ПО Начисления.ТарифныйРазряд6 = ТарифныеСтавки6.ТарифныйРазряд		
		|	
		|			ГДЕ Начисления.Актуальность
		|			
		|	) КАК ПлановыеНачисления		
		|			
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ОсновноеНачисление,
		|	ДатаНачала,
		|	ДатаОкончания,
		|	ВидРасчета
		|";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		ТекстЗапросаВТПлановыеНачисления = "ВТПлановыеНачисления";
	КонецЕсли; 
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПлановыеНачисления";

	
	//	ВТШтатноеРасписание
	Если Истина Тогда 
		ТекстЗапроса = "
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|		ШтатныеНадбавки.Должность					КАК Должность,
		|		ШтатныеНадбавки.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
		|		&парамНачало								КАК ДатаНачала,
		|		КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ)			КАК ДатаОкончания,
		|		ШтатныеНадбавки.ВидНадбавки	КАК ВидРасчета,
		|		ШтатныеНадбавки.Показатель1	КАК Показатель1,
		|		ШтатныеНадбавки.Показатель2	КАК Показатель2,
		|		ШтатныеНадбавки.Показатель3	КАК Показатель3,
		|		ШтатныеНадбавки.Показатель4	КАК Показатель4,		
		|		ШтатныеНадбавки.Показатель5	КАК Показатель5,		
		|		ШтатныеНадбавки.Показатель6	КАК Показатель6,		
		|		ШтатныеНадбавки.Валюта1		КАК Валюта1,
		|		ШтатныеНадбавки.Валюта2		КАК Валюта2,
		|		ШтатныеНадбавки.Валюта3		КАК Валюта3,
		|		ШтатныеНадбавки.Валюта4		КАК Валюта4,		
		|		ШтатныеНадбавки.Валюта5		КАК Валюта5,		
		|		ШтатныеНадбавки.Валюта6		КАК Валюта6		
		|
		|	ПОМЕСТИТЬ ВТШтатноеРасписание	
		|	ИЗ (
		|			ВЫБРАТЬ
		|				Надбавки.Должность					КАК Должность,
		|				Надбавки.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
		|				Надбавки.ВидНадбавки				КАК ВидНадбавки,
		|				&парамНачало			КАК ДатаНачала,
		|				Надбавки.Показатель1	КАК Показатель1,
		|				Надбавки.Показатель2	КАК Показатель2,
		|				Надбавки.Показатель3	КАК Показатель3,
		|				Надбавки.Показатель4	КАК Показатель4,		
		|				Надбавки.Показатель5	КАК Показатель5,		
		|				Надбавки.Показатель6	КАК Показатель6,		
		|				Надбавки.Валюта1		КАК Валюта1,
		|				Надбавки.Валюта2		КАК Валюта2,
		|				Надбавки.Валюта3		КАК Валюта3,
		|				Надбавки.Валюта4		КАК Валюта4,		
		|				Надбавки.Валюта5		КАК Валюта5,		
		|				Надбавки.Валюта6		КАК Валюта6		
		|			ИЗ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(&парамСрез, ПодразделениеОрганизации.Владелец = &парамОрганизация) КАК Надбавки
		|			ГДЕ		Надбавки.Показатель1 > 0 
		|				ИЛИ	Надбавки.Показатель2 > 0 
		|				ИЛИ	Надбавки.Показатель3 > 0 		
		|				ИЛИ	Надбавки.Показатель4 > 0
		|				ИЛИ	Надбавки.Показатель5 > 0
		|				ИЛИ	Надбавки.Показатель6 > 0
		|	) КАК ШтатныеНадбавки
		|			
		|";			
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		ТекстЗапросаВТШтатноеРасписание = "ВТШтатноеРасписание";
	КонецЕсли; 
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТШтатноеРасписание";

	//	ВТВсеНачисления
	Если Истина Тогда
		ТекстЗапросаВТ = "
		|// Оклады по назначениям (основные, совместители) и штатные надбавки
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		РаботникиОрганизации.Сотрудник,
		|		РаботникиОрганизации.Назначение,
		|		ОсновныеНачисления.ВидРасчета,
		|		ИСТИНА											КАК ОсновноеНачисление,
		|		&парамНачало КАК ДатаНачала,
		|		КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ) КАК ДатаОкончания,
		|		ДвиженияРаботников.ПодразделениеОрганизации,
		|		ДвиженияРаботников.ГрафикРаботы,
		|		ДвиженияРаботников.Должность,
		//|		NULL											КАК ДокументОснование,
		|		ОсновныеНачисления.ДокументОснование	КАК ДокументОснование,
		|
		|		ОсновныеНачисления.Показатель1,
		|		ОсновныеНачисления.Показатель2,
		|		ОсновныеНачисления.Показатель3,
		|		ОсновныеНачисления.Показатель4,
		|		ОсновныеНачисления.Показатель5,
		|		ОсновныеНачисления.Показатель6,
		|		ОсновныеНачисления.Валюта1,
		|		ОсновныеНачисления.Валюта2,
		|		ОсновныеНачисления.Валюта3,
		|		ОсновныеНачисления.Валюта4,		
		|		ОсновныеНачисления.Валюта5,		
		|		ОсновныеНачисления.Валюта6,		
		|		ОсновныеНачисления.ВидУчетаВремениДляСредней	КАК ВидУчетаВремениДляСредней
		|ПОМЕСТИТЬ ВТВсеНачисления	
		|	ИЗ " + ТекстЗапросаВТСписокРаботники + " КАК РаботникиОрганизации
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ТекстЗапросаВТДвиженияРаботников + " КАК ДвиженияРаботников	
		|	ПО		РаботникиОрганизации.Назначение = ДвиженияРаботников.Сотрудник	
		|
 		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ТекстЗапросаВТПлановыеНачисления + " КАК ОсновныеНачисления	
		|	ПО		РаботникиОрганизации.Назначение = ОсновныеНачисления.Сотрудник	
		|		И	(ОсновныеНачисления.ОсновноеНачисление
		|		ИЛИ	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&СпособыРасчета))
		|		И	ДвиженияРаботников.ДатаНачала <= ОсновныеНачисления.ДатаОкончания
		|		И	ОсновныеНачисления.ДатаНачала <= ДвиженияРаботников.ДатаОкончания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|// (п.1.) Основные, совместители и их штатные надбавки
		|	ВЫБРАТЬ
		|		РаботникиОрганизации.Сотрудник,
		|		РаботникиОрганизации.Назначение,
		|		ШтатныеНадбавки.ВидРасчета,
		|		ЛОЖЬ											КАК ОсновноеНачисление,
		|		&парамНачало КАК ДатаНачала,
		|		КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ) КАК ДатаОкончания,
		|		ДвиженияРаботников.ПодразделениеОрганизации		КАК ПодразделениеОрганизации,
		|		ДвиженияРаботников.ГрафикРаботы,
		|		ДвиженияРаботников.Должность,
		|		NULL											КАК ДокументОснование,
		|
		|		ШтатныеНадбавки.Показатель1,
		|		ШтатныеНадбавки.Показатель2,
		|		ШтатныеНадбавки.Показатель3,
		|		ШтатныеНадбавки.Показатель4,
		|		ШтатныеНадбавки.Показатель5,
		|		ШтатныеНадбавки.Показатель6,
		|		ШтатныеНадбавки.Валюта1,
		|		ШтатныеНадбавки.Валюта2,
		|		ШтатныеНадбавки.Валюта3,
		|		ШтатныеНадбавки.Валюта4,		
		|		ШтатныеНадбавки.Валюта5,		
		|		ШтатныеНадбавки.Валюта6,		
		|		NULL	КАК ВидУчетаВремениДляСредней
		|	ИЗ " + ТекстЗапросаВТСписокРаботники + " КАК РаботникиОрганизации
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ТекстЗапросаВТДвиженияРаботников + " КАК ДвиженияРаботников	
		|	ПО		РаботникиОрганизации.Назначение = ДвиженияРаботников.Сотрудник	
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ТекстЗапросаВТШтатноеРасписание + " КАК ШтатныеНадбавки	
		|	ПО		ШтатныеНадбавки.ПодразделениеОрганизации = ДвиженияРаботников.ПодразделениеОрганизации
		|		И	ШтатныеНадбавки.Должность = ДвиженияРаботников.Должность
		|		И	ДвиженияРаботников.ДатаНачала <= ШтатныеНадбавки.ДатаОкончания
		|		И	ШтатныеНадбавки.ДатаНачала <= ДвиженияРаботников.ДатаОкончания
		|
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|// (п.2.) Прочие плановые начисления по работникам кроме начислений по которым заменяли
		|	ВЫБРАТЬ
		|		РаботникиОрганизации.Сотрудник,
		|       ВЫБОР	КОГДА		Начисления.ДокументОснование ССЫЛКА Документ.ОплатаПоСреднемуЗаработку	
		|       				И	Начисления.ДокументОснование.Назначение <> ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
		|				ТОГДА Начисления.ДокументОснование.Назначение
		|				ИНАЧЕ РаботникиОрганизации.Назначение
		|		КОНЕЦ 									КАК Назначение,
		|		Начисления.ВидРасчета,
		|		ЛОЖЬ									КАК ОсновноеНачисление,
		|		&парамНачало,
		|		КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ),
		|   	ВЫБОР КОГДА ДвиженияРаботников.ПодразделениеОрганизации	ЕСТЬ NULL
		|				ТОГДА Начисления.ДокументОснование.ПодразделениеОрганизации
		|        	 ИНАЧЕ
		|				ДвиженияРаботников.ПодразделениеОрганизации	
		|   	КОНЕЦ                                                КАК ПодразделениеОрганизации,
		|
		|		ДвиженияРаботников.ГрафикРаботы,
		|		ДвиженияРаботников.Должность,
		|		Начисления.ДокументОснование,
		|
		|		Начисления.Показатель1,
		|		Начисления.Показатель2,
		|		Начисления.Показатель3,
		|		Начисления.Показатель4,
		|		Начисления.Показатель5,
		|		Начисления.Показатель6,
		|		Начисления.Валюта1,
		|		Начисления.Валюта2,
		|		Начисления.Валюта3,
		|		Начисления.Валюта4,		
		|		Начисления.Валюта5,		
		|		Начисления.Валюта6,		
		|		Начисления.ВидУчетаВремениДляСредней
		|
		|	ИЗ " + ТекстЗапросаВТСписокРаботники + " КАК РаботникиОрганизации
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ТекстЗапросаВТПлановыеНачисления + " КАК Начисления	
		|	ПО		РаботникиОрганизации.Назначение = Начисления.Сотрудник	
		|		И	НЕ Начисления.ОсновноеНачисление
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (	
		|		ВЫБРАТЬ
		|			ПлановыеНачисления.Сотрудник  КАК Сотрудник,
		|			ПлановыеНачисления.ВидРасчета  КАК ВидРасчета,
		|			ПлановыеНачисления.ДатаНачала  КАК ДатаНачала,
		|			МАКСИМУМ(Движения.ДатаНачала)  КАК АктуальнаяДата
		|		ИЗ " + ТекстЗапросаВТПлановыеНачисления + " КАК ПлановыеНачисления	
		|		ЛЕВОЕ СОЕДИНЕНИЕ  " + ТекстЗапросаВТДвиженияРаботников + " КАК Движения
		|   	ПО		Движения.Сотрудник = ПлановыеНачисления.Сотрудник
		|			И	Движения.ДатаНачала <= ПлановыеНачисления.ДатаНачала
		|		ГДЕ	НЕ ПлановыеНачисления.ОсновноеНачисление
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисления.Сотрудник,
		|			ПлановыеНачисления.ВидРасчета,
		|			ПлановыеНачисления.ДатаНачала
		|	) КАК ПериодАктуальногоДвижения
		|	ПО 		ПериодАктуальногоДвижения.Сотрудник = Начисления.Сотрудник
		|		И	ПериодАктуальногоДвижения.ВидРасчета = Начисления.ВидРасчета		
		|		И	ПериодАктуальногоДвижения.ДатаНачала = Начисления.ДатаНачала		
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ  " + ТекстЗапросаВТДвиженияРаботников + " КАК ДвиженияРаботников
		|	ПО		ДвиженияРаботников.Сотрудник = РаботникиОрганизации.Назначение
		|		И	ПериодАктуальногоДвижения.АктуальнаяДата = ДвиженияРаботников.ДатаНачала
		|	ГДЕ
		|	Начисления.ВидРасчета.СпособРасчета НЕ В(&СпособыРасчета)
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТВсеНачисления = "ВТВсеНачисления";
	КонецЕсли;
	
	// ВТСводныеИндивидуальныеГрафики
	Если Истина Тогда 
		ТекстЗапросаВТ = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СводныеИндивидуальныеГрафики.Сотрудник КАК Сотрудник,
		|	СводныеИндивидуальныеГрафики.Назначение КАК Назначение,
		|	СводныеИндивидуальныеГрафики.Месяц КАК Месяц,
		|	СводныеИндивидуальныеГрафики.Дней КАК НормаДнейПоГрафику,
		|	СводныеИндивидуальныеГрафики.Часов КАК НормаЧасовПоГрафику
		|ПОМЕСТИТЬ ВТСводныеИндивидуальныеГрафики
		|ИЗ РегистрСведений.СводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
		|ГДЕ	СводныеИндивидуальныеГрафики.Сотрудник в (ВЫБРАТЬ ФильтрРаботники.Назначение ИЗ ВТСписокРаботники КАК ФильтрРаботники)
		|	И	СводныеИндивидуальныеГрафики.Месяц = &парамПериодРегистрации
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли; 
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТСводныеИндивидуальныеГрафики";
	
	//	ВТОкладТариф
	Если Истина Тогда 
		
		Если Начисления = НачисленияДо Тогда
			ФильтрПериод = "";
			ТекстПериод = "Начисления.Период";
		Иначе	
			ТекстПериод = "НАЧАЛОПЕРИОДА(Начисления.Период, МЕСЯЦ)";
			ФильтрПериод = "И   (Окончания.Период ЕСТЬ NULL ИЛИ НАЧАЛОПЕРИОДА(Окончания.Период, МЕСЯЦ) <> &парамНачало)";
		КонецЕсли;	
		
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Начисления.Организация	КАК Организация,
		|	Начисления.Сотрудник	КАК Назначение,
		|	Начисления.ВидРасчета	КАК ВидРасчета,
		|	ВЫБОР	КОГДА 		Начисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням)
		|					ИЛИ Начисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам)
		|				ТОГДА ""ЗА МЕСЯЦ""
		|			КОГДА 	Начисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке)
		|			ТОГДА ""ЗА ДЕНЬ""
		|			ИНАЧЕ ""ЗА ЧАС""
		|	КОНЕЦ					КАК СпособУчетаВремени,
		|	ВЫБОР	КОГДА Начисления.ТарифныйРазряд1 <> ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка) 
		|				ТОГДА РазмерТарифныхСтавок.Размер
		|			ИНАЧЕ Начисления.Показатель1
		|	КОНЕЦ	КАК ОкладТариф,
		|	ВЫБОР	КОГДА Начисления.ТарифныйРазряд1 <> ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка) 
		|				ТОГДА РазмерТарифныхСтавок.Валюта
		|			ИНАЧЕ Начисления.Валюта1
		|	КОНЕЦ		КАК Валюта1,
		|	"+ТекстПериод+"		КАК ДатаНачала,
		|	МИНИМУМ(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Окончания.Период, СЕКУНДА, -1),ДЕНЬ))	КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТОкладТариф	
		|ИЗ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамСрез, ) КАК РазмерТарифныхСтавок
		|ПО Начисления.ТарифныйРазряд1 = РазмерТарифныхСтавок.ТарифныйРазряд
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Окончания
		|ПО Начисления.ВидРасчетаИзмерение <> Начисления.ВидРасчета
		|	И	Начисления.Актуальность 
		|	И	Начисления.Организация = &парамОрганизация
		|	И	Начисления.Сотрудник = Окончания.Сотрудник
		|	И	Начисления.ВидРасчетаИзмерение = Окончания.ВидРасчетаИзмерение
		|	И	Начисления.Период < Окончания.Период
		|	И   Начисления.Период < НАЧАЛОПЕРИОДА(&парамСрез,ДЕНЬ)
		|	И   Окончания.Период <= НАЧАЛОПЕРИОДА(&парамСрез,ДЕНЬ)
		|
		|
		|ГДЕ	Начисления.ВидРасчетаИзмерение <> Начисления.ВидРасчета
		|	И	Начисления.Актуальность 
		|	И	Начисления.Организация = &парамОрганизация
		|	И	Начисления.Сотрудник В (ВЫБРАТЬ Назначение ИЗ " + ТекстЗапросаВТСписокРаботникиИЗамены + " КАК Работники)
		|	И   Начисления.Период <= &парамСрез
		|	"+ФильтрПериод+"
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.Организация,
		|	Начисления.Сотрудник,
		|	Начисления.ВидРасчета,
		|	ВЫБОР	КОГДА 		Начисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням)
		|					ИЛИ Начисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам)
		|				ТОГДА ""ЗА МЕСЯЦ""
		|			КОГДА 	Начисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке)
		|			ТОГДА ""ЗА ДЕНЬ""
		|			ИНАЧЕ ""ЗА ЧАС""
		|	КОНЕЦ,
		|	ВЫБОР	КОГДА Начисления.ТарифныйРазряд1 <> ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка) 
		|				ТОГДА РазмерТарифныхСтавок.Размер
		|			ИНАЧЕ Начисления.Показатель1
		|	КОНЕЦ,
		|	ВЫБОР	КОГДА Начисления.ТарифныйРазряд1 <> ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка) 
		|				ТОГДА РазмерТарифныхСтавок.Валюта
		|			ИНАЧЕ Начисления.Валюта1
		|	КОНЕЦ,
		|	"+ТекстПериод+"
 		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТОкладТариф";
	
	//	ВТЗначенияПоказателей
	Если Истина Тогда 
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗначенияПоказателей.Сотрудник,
		|	ЗначенияПоказателей.Подразделение,
		|	ЗначенияПоказателей.Показатель,
		|	ЗначенияПоказателей.ПериодДействия КАК ПериодДействия,
		|	ВЫБОР
		|		КОГДА ЗначенияПоказателей.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
		|		И НЕ (ЗначенияПоказателей.Валюта В (&парамВалютаРегламентУчета, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)))
		|			ТОГДА ЗначенияПоказателей.Значение * ЕСТЬNULL(Валюты.Курс / Валюты.Кратность, 0)
		|		ИНАЧЕ ЗначенияПоказателей.Значение
		|	КОНЕЦ КАК Значение
		|ПОМЕСТИТЬ ВТЗначенияПоказателей
		|ИЗ 
		|   (ВЫБРАТЬ 
		|	ЗначенияПоказателей.Сотрудник,
		|	ЗначенияПоказателей.Организация,
		|	ЗначенияПоказателей.Подразделение,
		|	ЗначенияПоказателей.Показатель,
		|	НАЧАЛОПЕРИОДА(ЗначенияПоказателей.ПериодДействия, МЕСЯЦ) КАК ПериодДействия,
		|	ЗначенияПоказателей.Валюта,
		|	ЗначенияПоказателей.Значение
		|	ИЗ РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателей
		|	
		|	ОБЪЕДИНИТЬ
		|
		|   ВЫБРАТЬ 
		|	ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка),
		|	ЗначенияПоказателей.Организация,
		|	ЗначенияПоказателей.Подразделение,
		|	ЗначенияПоказателей.Показатель,
		|	&парамНачало,
		|	ЗначенияПоказателей.Валюта,
		|	ЗначенияПоказателей.Значение
		|	ИЗ РегистрСведений.ПериодическиеЗначенияПоказателейСхемМотивации.СрезПоследних(&парамСрез, Организация = &парамОрганизация) КАК ЗначенияПоказателей
		|   ) КАК ЗначенияПоказателей
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&парамДатаВалютногоУчета) Как Валюты
		|ПО Валюты.Валюта = ЗначенияПоказателей.Валюта 
		|	
		|ГДЕ	ЗначенияПоказателей.Организация = &парамОрганизация
		|	И	НАЧАЛОПЕРИОДА(ЗначенияПоказателей.ПериодДействия, МЕСЯЦ) = &парамНачало
		|	И	(ЗначенияПоказателей.Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
		|	ИЛИ	ЗначенияПоказателей.Сотрудник В (ВЫБРАТЬ Назначение ИЗ ВТСписокРаботникиИЗамены КАК Работники))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Показатель
		|";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗначенияПоказателей";
	
	
	//	ВТПоказатели
	Если Истина Тогда 
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиПодразделенияВПоказателях.Сотрудник КАК Сотрудник,
		|	СотрудникиПодразделенияВПоказателях.Подразделение КАК Подразделение,
		|	ПоказателиВидовРасчета.Ссылка КАК ВидРасчета,
		|	ПоказателиВидовРасчета.Показатель1.ТипПоказателя КАК ТипПоказателя1,
		|	ПоказателиВидовРасчета.Показатель2.ТипПоказателя КАК ТипПоказателя2,
		|	ПоказателиВидовРасчета.Показатель3.ТипПоказателя КАК ТипПоказателя3,
		|	ПоказателиВидовРасчета.Показатель4.ТипПоказателя КАК ТипПоказателя4,
		|	ПоказателиВидовРасчета.Показатель5.ТипПоказателя КАК ТипПоказателя5,
		|	ПоказателиВидовРасчета.Показатель6.ТипПоказателя КАК ТипПоказателя6,
		|	ПоказателиВидовРасчета.Показатель1.ВозможностьИзменения КАК ВозможностьИзменения1,
		|	ПоказателиВидовРасчета.Показатель2.ВозможностьИзменения КАК ВозможностьИзменения2,
		|	ПоказателиВидовРасчета.Показатель3.ВозможностьИзменения КАК ВозможностьИзменения3,
		|	ПоказателиВидовРасчета.Показатель4.ВозможностьИзменения КАК ВозможностьИзменения4,
		|	ПоказателиВидовРасчета.Показатель5.ВозможностьИзменения КАК ВозможностьИзменения5,
		|	ПоказателиВидовРасчета.Показатель6.ВозможностьИзменения КАК ВозможностьИзменения6,
		|	ЗначенияПоказателей1.Значение КАК Показатель1,
		|	ЗначенияПоказателей2.Значение КАК Показатель2,
		|	ЗначенияПоказателей3.Значение КАК Показатель3,
		|	ЗначенияПоказателей4.Значение КАК Показатель4,
		|	ЗначенияПоказателей5.Значение КАК Показатель5,
		|	ЗначенияПоказателей6.Значение КАК Показатель6
		|ПОМЕСТИТЬ ВТПоказатели
		|ИЗ (ВЫБРАТЬ РАЗЛИЧНЫЕ Подразделение, Сотрудник ИЗ ВТЗначенияПоказателей КАК ЗначенияПоказателей) КАК СотрудникиПодразделенияВПоказателях
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		Показатели.Ссылка КАК Ссылка,
		|		Показатели1.Показатель КАК Показатель1,
		|		Показатели2.Показатель КАК Показатель2,
		|		Показатели3.Показатель КАК Показатель3,
		|		Показатели4.Показатель КАК Показатель4,
		|		Показатели5.Показатель КАК Показатель5,
		|		Показатели6.Показатель КАК Показатель6
		|	ИЗ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели1
		|	ПО Показатели.Ссылка = Показатели1.Ссылка И Показатели1.НомерСтроки = 1
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели2
		|	ПО Показатели.Ссылка = Показатели2.Ссылка И Показатели2.НомерСтроки = 2
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели3
		|	ПО Показатели.Ссылка = Показатели3.Ссылка И Показатели3.НомерСтроки = 3
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели4
		|	ПО Показатели.Ссылка = Показатели4.Ссылка И Показатели4.НомерСтроки = 4
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели5
		|	ПО Показатели.Ссылка = Показатели5.Ссылка И Показатели5.НомерСтроки = 5
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели6
		|	ПО Показатели.Ссылка = Показатели6.Ссылка И Показатели6.НомерСтроки = 6
		|	
		|) КАК ПоказателиВидовРасчета
		|ПО ИСТИНА
		|	
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей1
		|ПО 	ПоказателиВидовРасчета.Показатель1 = ЗначенияПоказателей1.Показатель
		|	И	СотрудникиПодразделенияВПоказателях.Сотрудник = ЗначенияПоказателей1.Сотрудник
		|	И	СотрудникиПодразделенияВПоказателях.Подразделение = ЗначенияПоказателей1.Подразделение
		|ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей2
		|ПО		ПоказателиВидовРасчета.Показатель2 = ЗначенияПоказателей2.Показатель
		|	И	СотрудникиПодразделенияВПоказателях.Сотрудник = ЗначенияПоказателей2.Сотрудник
		|	И	СотрудникиПодразделенияВПоказателях.Подразделение = ЗначенияПоказателей2.Подразделение
		|ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей3
		|ПО		ПоказателиВидовРасчета.Показатель3 = ЗначенияПоказателей3.Показатель
		|	И	СотрудникиПодразделенияВПоказателях.Сотрудник = ЗначенияПоказателей3.Сотрудник
		|	И	СотрудникиПодразделенияВПоказателях.Подразделение = ЗначенияПоказателей3.Подразделение
		|ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей4
		|ПО		ПоказателиВидовРасчета.Показатель4 = ЗначенияПоказателей4.Показатель
		|	И	СотрудникиПодразделенияВПоказателях.Сотрудник = ЗначенияПоказателей4.Сотрудник
		|	И	СотрудникиПодразделенияВПоказателях.Подразделение = ЗначенияПоказателей4.Подразделение
		|ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей5
		|ПО		ПоказателиВидовРасчета.Показатель5 = ЗначенияПоказателей5.Показатель
		|	И	СотрудникиПодразделенияВПоказателях.Сотрудник = ЗначенияПоказателей5.Сотрудник
		|	И	СотрудникиПодразделенияВПоказателях.Подразделение = ЗначенияПоказателей5.Подразделение
		|ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей6
		|ПО		ПоказателиВидовРасчета.Показатель6 = ЗначенияПоказателей6.Показатель
		|	И	СотрудникиПодразделенияВПоказателях.Сотрудник = ЗначенияПоказателей6.Сотрудник
		|	И	СотрудникиПодразделенияВПоказателях.Подразделение = ЗначенияПоказателей6.Подразделение
		|
		|ГДЕ	ЗначенияПоказателей1.Значение ЕСТЬ НЕ NULL
		|	ИЛИ	ЗначенияПоказателей2.Значение ЕСТЬ НЕ NULL
		|	ИЛИ	ЗначенияПоказателей3.Значение ЕСТЬ НЕ NULL
		|	ИЛИ	ЗначенияПоказателей4.Значение ЕСТЬ НЕ NULL
		|	ИЛИ	ЗначенияПоказателей5.Значение ЕСТЬ НЕ NULL
		|	ИЛИ	ЗначенияПоказателей6.Значение ЕСТЬ НЕ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасчета
		|";
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПоказатели";
	
	//ВТПараметрыНалоговЕСВ
	Если Истина Тогда 
		парамНалогиЕСВ = Новый СписокЗначений();
		парамНалогиЕСВ.Добавить(Справочники.Налоги.ЕСВИнвалидыУТОГУТОС);
		парамНалогиЕСВ.Добавить(Справочники.Налоги.ЕСВЛетчики);
		парамНалогиЕСВ.Добавить(Справочники.Налоги.ЕСВРаботники);
		парамНалогиЕСВ.Добавить(Справочники.Налоги.ЕСВРаботникиСР);
		Запрос.УстановитьПараметр("парамНалогиЕСВ", парамНалогиЕСВ);
		Запрос.УстановитьПараметр("парамНДФЛ1", Перечисления.ВидыСтавокНДФЛ.Основная);
		Запрос.УстановитьПараметр("парамНДФЛ2", Перечисления.ВидыСтавокНДФЛ.Увеличенная);
		Запрос.УстановитьПараметр("парамВС", Перечисления.ВидыСтавокНДФЛ.ВоенныйСбор);
		
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|   ВзносыДаты.Сотрудник КАК Сотрудник,
		|   Взносы.Налог КАК Налог
		|ПОМЕСТИТЬ ВТВзносыСотрудников
		|ИЗ
		|	(ВЫБРАТЬ
		|	   Взносы.Сотрудник КАК Сотрудник,
		|	   МАКСИМУМ(Взносы.Период) КАК Период
		|	ИЗ РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК Взносы
		|	ГДЕ Взносы.Сотрудник В (&парамСотрудник)
		|	    И Взносы.Актуальность
		|	    И Взносы.Налог В (&парамНалогиЕСВ)
		|	    И Взносы.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		|	СГРУППИРОВАТЬ ПО Взносы.Сотрудник) КАК ВзносыДаты
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК Взносы
		|	ПО Взносы.Сотрудник = ВзносыДаты.Сотрудник
		|	 И Взносы.Актуальность
		|	 И Взносы.Налог В (&парамНалогиЕСВ)
		|	 И Взносы.Период = ВзносыДаты.Период  
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|   Взносы.Сотрудник КАК Сотрудник,
		|   Взносы.Налог КАК Налог,
		|   ШкалаСтавокНалогов.Ставка КАК Ставка,
		|   СведенияОВзносахВФонды.Предел КАК Предел
		|ПОМЕСТИТЬ ВТПараметрыНалоговЕСВ
		|ИЗ ВТВзносыСотрудников КАК Взносы
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(&парамПериодРегистрации) КАК ШкалаСтавокНалогов
		|	ПО Взносы.Налог = ШкалаСтавокНалогов.Налог
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОВзносахВФонды.СрезПоследних(&парамПериодРегистрации) КАК СведенияОВзносахВФонды
		|	ПО Взносы.Налог = СведенияОВзносахВФонды.Налог
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();

	КонецЕсли; 
	
	Запрос.Текст = " 
	|	ВЫБРАТЬ 
	|		СписокНачислений1.Сотрудник			КАК Сотрудник,
	|		СписокНачислений1.Назначение		КАК Назначение,
	|		СписокНачислений1.ДатаНачала		КАК ДатаНачала,
	|		СписокНачислений1.ДатаОкончания		КАК ДатаОкончания,
	|		СписокНачислений1.ВидРасчета		КАК ВидРасчета,
	|		СписокНачислений1.ДокументОснование	КАК ДокументОснование,
	|		МАКСИМУМ(Оклады1.ДатаНачала) КАК ДатаНачалаОклада
	|	ИЗ " + ТекстЗапросаВТВсеНачисления + " КАК СписокНачислений1
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОкладТариф КАК Оклады1
	|	ПО		СписокНачислений1.Назначение = Оклады1.Назначение
	| 		И  (СписокНачислений1.ДатаНачала <= Оклады1.ДатаОкончания ИЛИ Оклады1.ДатаОкончания ЕСТЬ NULL)
	| 		И  Оклады1.ДатаНачала <= СписокНачислений1.ДатаОкончания
	|	СГРУППИРОВАТЬ ПО 
	|		СписокНачислений1.Сотрудник,
	|		СписокНачислений1.Назначение,
	|		СписокНачислений1.ДатаНачала,
	|		СписокНачислений1.ДатаОкончания,
	|		СписокНачислений1.ВидРасчета,
	|		СписокНачислений1.ДокументОснование
	|";

	//Основной текст запроса
	ОсновнойТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокНачислений.Сотрудник		КАК Сотрудник,
	|	СписокНачислений.Назначение		КАК Назначение,
	|	ВЫБОР КОГДА ЕСТЬNULL(Оклады.ДатаНачала,СписокНачислений.ДатаНачала) <= СписокНачислений.ДатаНачала		ТОГДА СписокНачислений.ДатаНачала	ИНАЧЕ Оклады.ДатаНачала		КОНЕЦ			КАК ДатаНачала,
	|	ВЫБОР КОГДА ЕСТЬNULL(Оклады.ДатаОкончания,СписокНачислений.ДатаОкончания) < СписокНачислений.ДатаОкончания	ТОГДА Оклады.ДатаОкончания	ИНАЧЕ СписокНачислений.ДатаОкончания	КОНЕЦ	КАК ДатаОкончания,
	|	ВЫБОР КОГДА ЕСТЬNULL(Оклады.ДатаНачала,СписокНачислений.ДатаНачала) <= СписокНачислений.ДатаНачала		ТОГДА СписокНачислений.ДатаНачала	ИНАЧЕ Оклады.ДатаНачала		КОНЕЦ 			КАК БазовыйПериодНачало,
	|	ВЫБОР КОГДА ЕСТЬNULL(Оклады.ДатаОкончания,СписокНачислений.ДатаОкончания) < СписокНачислений.ДатаОкончания	ТОГДА Оклады.ДатаОкончания	ИНАЧЕ СписокНачислений.ДатаОкончания	КОНЕЦ	КАК БазовыйПериодКонец,
	|	СписокНачислений.ОсновноеНачисление КАК ОсновноеНачисление,
	|	СписокНачислений.ВидРасчета КАК ВидРасчета,
	|	СписокНачислений.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
	|	СписокНачислений.Валюта1 КАК Валюта,
	|
	|	ВЫБОР
	|		КОГДА СписокНачислений.Валюта1 = &парамВалютаРегламентУчета
	|				ИЛИ СписокНачислений.Валюта1 = &парамПустаяВалюта
	|			ТОГДА 1
	|		ИНАЧЕ Валюты1.Курс
	|	КОНЕЦ КАК КурсВалюты,		
	|";
	НормаЧасовЗаМесяц =  "
	|	ВЫБОР	КОГДА ЕСТЬNULL(ДанныеИндивидуальногоКалендаря.НормаЧасовЗаМесяц, 0)<> 0 
	|				ТОГДА ДанныеИндивидуальногоКалендаря.НормаЧасовЗаМесяц 
	|			КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаЧасовПоГрафику, 0)<> 0 
	|				ТОГДА  СводныеИндивидуальныеГрафики.НормаЧасовПоГрафику
	|			ИНАЧЕ  ДанныеКалендаря.НормаЧасовЗаМесяц
	|	КОНЕЦ
	|	";
	НормаДнейЗаМесяц =  "
	|	ВЫБОР	КОГДА ЕСТЬNULL(ДанныеИндивидуальногоКалендаря.НормаДнейЗаМесяц, 0)<> 0 
	|				ТОГДА ДанныеИндивидуальногоКалендаря.НормаДнейЗаМесяц 
	|			КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаДнейПоГрафику, 0)<> 0 
	|				ТОГДА  СводныеИндивидуальныеГрафики.НормаДнейПоГрафику
	|			ИНАЧЕ  ДанныеКалендаря.НормаДнейЗаМесяц
	|	КОНЕЦ
	|	";
	ОсновнойТекстЗапроса =  ОсновнойТекстЗапроса + "
	|	ВЫБОР	КОГДА ЕСТЬNULL(ДанныеИндивидуальногоКалендаря.НормаДнейЗаМесяц, 0)<> 0 
	|				ТОГДА ДанныеИндивидуальногоКалендаря.НормаДнейЗаМесяц 
	|			КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаДнейПоГрафику, 0)<> 0 
	|				ТОГДА  СводныеИндивидуальныеГрафики.НормаДнейПоГрафику
	|			ИНАЧЕ  ДанныеКалендаря.НормаДнейЗаМесяц
	|	КОНЕЦ	КАК НормаДнейЗаМесяц,
	|	" + НормаЧасовЗаМесяц + "	КАК НормаЧасовЗаМесяц,
	|	";
	
	
	ТекстПоказатель1 = "
	|			ВЫБОР
	|				КОГДА ПоказателиСхемМотивацийПоСотруднику.Показатель1 ЕСТЬ НЕ NULL 
	|					ТОГДА ПоказателиСхемМотивацийПоСотруднику.Показатель1
	|				КОГДА ПоказателиСхемМотивацийПоПодразделению.Показатель1 ЕСТЬ НЕ NULL 
	|					ТОГДА ПоказателиСхемМотивацийПоПодразделению.Показатель1
	|				КОГДА ПоказателиСхемМотивацийПоОрганизации.Показатель1 ЕСТЬ НЕ NULL 
	|					ТОГДА ПоказателиСхемМотивацийПоОрганизации.Показатель1
	|				КОГДА СписокНачислений.Показатель1 ЕСТЬ NULL 
	|					И СписокНачислений.ВидРасчета.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы)
	|					И СписокНачислений.ВидРасчета.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы)
	|					ТОГДА 0
	|				КОГДА СписокНачислений.ВидРасчета.СпособРасчета В (&парамМассивСпособовРасчетовБезВалюты)
	|						ИЛИ СписокНачислений.Валюта1 = &парамВалютаРегламентУчета
	|						ИЛИ СписокНачислений.Валюта1 = &парамПустаяВалюта
	|					ТОГДА 
	|					ВЫБОР КОГДА ТипПоказатель1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|                       //СПЕЦИАЛЬНЫЕ
	|						ТОГДА	ВЫБОР	КОГДА Оклады.СпособУчетаВремени = ""ЗА МЕСЯЦ"" И (" + НормаЧасовЗаМесяц + ") > 0
	|											ТОГДА Оклады.ОкладТариф/(" + НормаЧасовЗаМесяц + ")
	|									КОГДА Оклады.СпособУчетаВремени = ""ЗА ДЕНЬ""
	|											ТОГДА Оклады.ОкладТариф/8
	|									ИНАЧЕ Оклады.ОкладТариф
	|							КОНЕЦ
	|				КОГДА ТипПоказатель1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|					ТОГДА 
	|						ВЫБОР	КОГДА Оклады.СпособУчетаВремени = ""ЗА МЕСЯЦ"" И (" + НормаДнейЗаМесяц + ") > 0
	|										ТОГДА Оклады.ОкладТариф/(" + НормаДнейЗаМесяц + ")
	|								КОГДА Оклады.СпособУчетаВремени = ""ЗА ДЕНЬ""
	|										ТОГДА Оклады.ОкладТариф
	|								ИНАЧЕ Оклады.ОкладТариф*8
	|						КОНЕЦ
	|				КОГДА ТипПоказатель1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|					ТОГДА 
	|						ВЫБОР	КОГДА Оклады.СпособУчетаВремени = ""ЗА МЕСЯЦ""
	|										ТОГДА Оклады.ОкладТариф
	|								КОГДА Оклады.СпособУчетаВремени = ""ЗА ДЕНЬ""  И (" + НормаДнейЗаМесяц + ") > 0
	|										ТОГДА Оклады.ОкладТариф*(" + НормаДнейЗаМесяц + ")
	|								ИНАЧЕ Оклады.ОкладТариф*(" + НормаЧасовЗаМесяц + ")
	|						КОНЕЦ
	|						ИНАЧЕ СписокНачислений.Показатель1
	|					КОНЕЦ
	|				КОГДА ТипПоказатель1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|					ТОГДА ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0) * 
	|						ВЫБОР	КОГДА Оклады.СпособУчетаВремени = ""ЗА МЕСЯЦ"" И (" + НормаЧасовЗаМесяц + ") > 0
	|										ТОГДА Оклады.ОкладТариф/(" + НормаЧасовЗаМесяц + ")
	|								КОГДА Оклады.СпособУчетаВремени = ""ЗА ДЕНЬ""
	|										ТОГДА Оклады.ОкладТариф/8
	|								ИНАЧЕ Оклады.ОкладТариф
	|						КОНЕЦ
	|				КОГДА ТипПоказатель1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|					ТОГДА ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0) * 
	|						ВЫБОР	КОГДА Оклады.СпособУчетаВремени = ""ЗА МЕСЯЦ"" И (" + НормаДнейЗаМесяц + ") > 0
	|										ТОГДА Оклады.ОкладТариф/(" + НормаДнейЗаМесяц + ")
	|								КОГДА Оклады.СпособУчетаВремени = ""ЗА ДЕНЬ""
	|										ТОГДА Оклады.ОкладТариф
	|								ИНАЧЕ Оклады.ОкладТариф*8
	|						КОНЕЦ
	|				КОГДА ТипПоказатель1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|					ТОГДА ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0) * 
	|						ВЫБОР	КОГДА Оклады.СпособУчетаВремени = ""ЗА МЕСЯЦ""
	|										ТОГДА Оклады.ОкладТариф
	|								КОГДА Оклады.СпособУчетаВремени = ""ЗА ДЕНЬ""  И (" + НормаДнейЗаМесяц + ") > 0
	|										ТОГДА Оклады.ОкладТариф*(" + НормаДнейЗаМесяц + ")
	|								ИНАЧЕ Оклады.ОкладТариф*(" + НормаЧасовЗаМесяц + ")
	|						КОНЕЦ
	|				ИНАЧЕ СписокНачислений.Показатель1 * ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0)
	|			КОНЕЦ
	|	";

	
	
	ТекстПоказатель2 = СтрЗаменить(ТекстПоказатель1, "1", "2");
	ТекстПоказатель3 = СтрЗаменить(ТекстПоказатель1, "1", "3");
	ТекстПоказатель4 = СтрЗаменить(ТекстПоказатель1, "1", "4");
	ТекстПоказатель5 = СтрЗаменить(ТекстПоказатель1, "1", "5");
	ТекстПоказатель6 = СтрЗаменить(ТекстПоказатель1, "1", "6");
	
	//Некоторые способы расчета имеют "виртуальный" показатель 1 "часовой тариф"
	ТекстПоказатель1 = СтрЗаменить(ТекстПоказатель1, "//СПЕЦИАЛЬНЫЕ", 
	"ИЛИ СписокНачислений.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы) 
	|ИЛИ СписокНачислений.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы)
	|ИЛИ СписокНачислений.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавкеУмножитьНаПроцент)");
	
	ОсновнойТекстЗапроса =  ОсновнойТекстЗапроса + "
	|	Оклады.ОкладТариф КАК ОкладТариф,
	|	" + ТекстПоказатель1 + " КАК Показатель1,
	|	" + ТекстПоказатель2 + " КАК Показатель2,
	|	" + ТекстПоказатель3 + " КАК Показатель3,
	|	" + ТекстПоказатель4 + " КАК Показатель4,
	|	" + ТекстПоказатель5 + " КАК Показатель5,
	|	" + ТекстПоказатель6 + " КАК Показатель6,
	|	СписокНачислений.ДокументОснование,
	|	СписокНачислений.ВидУчетаВремениДляСредней,
	|	ВЫБОР	КОГДА ГрафикРаботыПоСотруднику.Назначение ЕСТЬ NULL
	|				ТОГДА СписокНачислений.ГрафикРаботы 
	|				ИНАЧЕ СписокНачислений.Назначение
	|	КОНЕЦ								КАК ГрафикРаботы,
	|
	|	ЕСТЬNULL(СписокНачислений.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
	|	СписокНачислений.ПодразделениеОрганизации,
	|	СписокНачислений.Должность,
	|	ЛОЖЬ Как УжеПроведен,
	|	СписокНачислений.Сотрудник.Наименование КАК СотрудникНаименование,
	|	ПараметрыНалоговЕСВ.Ставка КАК СтавкаЕСВ,
	|	ПараметрыНалоговЕСВ.Предел КАК ПределЕСВ,
	|	СтавкиНДФЛ1.Ставка КАК СтавкаНДФЛ1,
	|	СтавкиНДФЛ2.Ставка КАК СтавкаНДФЛ2,
	|	СтавкиНДФЛ2.Порог  КАК ПределНДФЛ,
	|	СтавкиВС.Ставка КАК СтавкаВС
	|ИЗ " + ТекстЗапросаВТВсеНачисления + " КАК СписокНачислений
	|
	|//-----------------------
	|// курсы валюты 
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&парамДатаВалютногоУчета) Как Валюты1
	|ПО Валюты1.Валюта = СписокНачислений.Валюта1 
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&парамДатаВалютногоУчета) Как Валюты2
	|ПО Валюты2.Валюта = СписокНачислений.Валюта2 
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&парамДатаВалютногоУчета) Как Валюты3
	|ПО Валюты3.Валюта = СписокНачислений.Валюта3 
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&парамДатаВалютногоУчета) Как Валюты4
	|ПО Валюты4.Валюта = СписокНачислений.Валюта4 
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&парамДатаВалютногоУчета) Как Валюты5
	|ПО Валюты5.Валюта = СписокНачислений.Валюта5 
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&парамДатаВалютногоУчета) Как Валюты6
	|ПО Валюты6.Валюта = СписокНачислений.Валюта6 
	|
	|//-----------------------
	|// данные о видах показателей
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ТипПоказатель1
	|ПО		ТипПоказатель1.Ссылка = СписокНачислений.ВидРасчета И ТипПоказатель1.НомерСтроки = 1
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ТипПоказатель2
	|ПО		ТипПоказатель2.Ссылка = СписокНачислений.ВидРасчета И ТипПоказатель2.НомерСтроки = 2
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ТипПоказатель3
	|ПО		ТипПоказатель3.Ссылка = СписокНачислений.ВидРасчета И ТипПоказатель3.НомерСтроки = 3
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ТипПоказатель4
	|ПО		ТипПоказатель4.Ссылка = СписокНачислений.ВидРасчета И ТипПоказатель4.НомерСтроки = 4
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ТипПоказатель5
	|ПО		ТипПоказатель5.Ссылка = СписокНачислений.ВидРасчета И ТипПоказатель5.НомерСтроки = 5
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ТипПоказатель6
	|ПО		ТипПоказатель6.Ссылка = СписокНачислений.ВидРасчета И ТипПоказатель6.НомерСтроки = 6
	|
	|//-----------------------
	|// если есть индивидуальный график и он зарегистрирвоан в регистре сведений ГрафикиРаботыПоВидамВремени
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СтрокиНачисления.Сотрудник		КАК Сотрудник,
	|		СтрокиНачисления.Назначение		КАК Назначение
	|	ИЗ " + ТекстЗапросаВТВсеНачисления + " Как СтрокиНачисления
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|   ПО		ГрафикиРаботыПоВидамВремени.ГрафикРаботы = СтрокиНачисления.Сотрудник
	|   	И	ГрафикиРаботыПоВидамВремени.Сотрудник = СтрокиНачисления.Назначение
	|		И	ГрафикиРаботыПоВидамВремени.Месяц = НАЧАЛОПЕРИОДА(СтрокиНачисления.ДатаНачала, МЕСЯЦ)
	|) КАК ГрафикРаботыПоСотруднику       
	|ПО		СписокНачислений.Сотрудник = ГрафикРаботыПоСотруднику.Сотрудник
	|	И	СписокНачислений.Назначение = ГрафикРаботыПоСотруднику.Назначение
	|       
	|
	|//-----------------------
	|// данные нормы календаря по индивидуальным графикам
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		ГрафикиРаботы.ГрафикРаботы	КАК ГрафикРаботы,
	|		ГрафикиРаботы.Сотрудник		КАК Сотрудник,
	|		ГрафикиРаботы.Документ		КАК Документ,
	|		СУММА( ГрафикиРаботы.ОсновноеЗначение  )		КАК НормаДнейЗаМесяц,
	|		СУММА( ГрафикиРаботы.ДополнительноеЗначение )	КАК НормаЧасовЗаМесяц
	|	ИЗ	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботы
	|	ГДЕ		НАЧАЛОПЕРИОДА( ГрафикиРаботы.Дата, МЕСЯЦ ) = &парамНачало 
	|		И	ГрафикиРаботы.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням) 
	|		И	ГрафикиРаботы.Документ ССЫЛКА Документ.ВводИндивидуальныхГрафиковРаботыОрганизации 
	|	СГРУППИРОВАТЬ ПО
	|		ГрафикиРаботы.ГрафикРаботы,
	|		ГрафикиРаботы.Сотрудник,
	|		ГрафикиРаботы.Документ
	|) КАК ДанныеИндивидуальногоКалендаря
	|ПО		ВЫБОР	КОГДА ГрафикРаботыПоСотруднику.Сотрудник = СписокНачислений.Сотрудник	// это индивидуальный график и не сокращенное время работы
	|				ТОГДА ДанныеИндивидуальногоКалендаря.ГрафикРаботы = СписокНачислений.Сотрудник 
	|		     		И ДанныеИндивидуальногоКалендаря.Сотрудник = СписокНачислений.Назначение
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ 
	|
	|//-----------------------
	|// данные нормы календаря
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		ГрафикиРаботы.ГрафикРаботы	КАК ГрафикРаботы,
	|		ГрафикиРаботы.Сотрудник		КАК Сотрудник,
	|		ГрафикиРаботы.Документ		КАК Документ,
	|		СУММА( ГрафикиРаботы.ОсновноеЗначение  )		КАК НормаДнейЗаМесяц,
	|		СУММА( ГрафикиРаботы.ДополнительноеЗначение )	КАК НормаЧасовЗаМесяц
	|	ИЗ	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботы
	|	ГДЕ		НАЧАЛОПЕРИОДА( ГрафикиРаботы.Дата, МЕСЯЦ ) = &парамНачало 
	|		И	ГрафикиРаботы.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням) 
	|		И НЕ ГрафикиРаботы.Документ ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации 
	|		И НЕ ГрафикиРаботы.Документ ССЫЛКА Документ.ВводИндивидуальныхГрафиковРаботыОрганизации 
	|	СГРУППИРОВАТЬ ПО
	|		ГрафикиРаботы.ГрафикРаботы,
	|		ГрафикиРаботы.Сотрудник,
	|		ГрафикиРаботы.Документ
	|) КАК ДанныеКалендаря
	|ПО		ВЫБОР	КОГДА СписокНачислений.ГрафикРаботы.СокращенноеРабочееВремя	
	|		     		ТОГДА ДанныеКалендаря.ГрафикРаботы = СписокНачислений.ГрафикРаботы.ГрафикПолногоРабочегоВремени
	|				ИНАЧЕ ДанныеКалендаря.ГрафикРаботы = СписокНачислений.ГрафикРаботы
	|		КОНЕЦ 
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТСводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
	|ПО		СписокНачислений.Сотрудник = СводныеИндивидуальныеГрафики.Сотрудник
	|	И	СписокНачислений.Назначение = СводныеИндивидуальныеГрафики.Назначение
	|	И	НАЧАЛОПЕРИОДА(СписокНачислений.ДатаНачала, МЕСЯЦ) = СводныеИндивидуальныеГрафики.Месяц
	|
	|//-----------------------
	|// данные показателей Схем Мотиваций
	|// по конкретным сотрудникам
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК ПоказателиСхемМотивацийПоСотруднику
	|ПО		СписокНачислений.ВидРасчета = ПоказателиСхемМотивацийПоСотруднику.ВидРасчета
	|	И	СписокНачислений.Назначение = ПоказателиСхемМотивацийПоСотруднику.Сотрудник
	|
	|// по подразделению
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК ПоказателиСхемМотивацийПоПодразделению
	|ПО		СписокНачислений.ВидРасчета = ПоказателиСхемМотивацийПоПодразделению.ВидРасчета
	|	И	СписокНачислений.ПодразделениеОрганизации = ПоказателиСхемМотивацийПоПодразделению.Подразделение
	|
	|// организации
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК ПоказателиСхемМотивацийПоОрганизации
	|ПО		СписокНачислений.ВидРасчета = ПоказателиСхемМотивацийПоОрганизации.ВидРасчета
	|	И	ПоказателиСхемМотивацийПоОрганизации.Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|	И	ПоказателиСхемМотивацийПоОрганизации.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) 
	|
	|
	|// данные об окладах
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТОкладТариф КАК Оклады
	|ПО		СписокНачислений.Назначение = Оклады.Назначение
	| 	И  (СписокНачислений.ДатаНачала <= Оклады.ДатаОкончания ИЛИ Оклады.ДатаОкончания ЕСТЬ NULL)
	| 	И  Оклады.ДатаНачала <= СписокНачислений.ДатаОкончания
	|	И СписокНачислений.ВидРасчета В (&парамТребуетОклад)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыНалоговЕСВ КАК ПараметрыНалоговЕСВ
	|ПО СписокНачислений.Сотрудник = ПараметрыНалоговЕСВ.Сотрудник
	| И СписокНачислений.ВидРасчета.ТарифнаяСтавкаОтОбратного
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДФЛ.СрезПоследних(&парамПериодРегистрации,ВидСтавки = &парамНДФЛ1) КАК СтавкиНДФЛ1
	|ПО СписокНачислений.ВидРасчета.ТарифнаяСтавкаОтОбратного
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДФЛ.СрезПоследних(&парамПериодРегистрации,ВидСтавки = &парамНДФЛ2) КАК СтавкиНДФЛ2
	|ПО СписокНачислений.ВидРасчета.ТарифнаяСтавкаОтОбратного
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДФЛ.СрезПоследних(&парамПериодРегистрации,ВидСтавки = &парамВС) КАК СтавкиВС
	|ПО СписокНачислений.ВидРасчета.ТарифнаяСтавкаОтОбратного
	|
	|
	|ГДЕ
	|   СписокНачислений.ВидРасчета В (&парамБазаИндексации)
	|   ИЛИ СписокНачислений.ВидРасчета.СпособРасчета = &парамСРИндексация
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование,
	|	СписокНачислений.Сотрудник,
	|	// основные начисления должны быть ввержу, а внутренее совместительство и замены внизу
	|	ВЫБОР КОГДА СписокНачислений.Сотрудник = СписокНачислений.Назначение ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ, 
	|	СписокНачислений.Назначение,
	|	СписокНачислений.ОсновноеНачисление Убыв, // основное начисление должно встретиться в выборке первым
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.ВидРасчета
	|";
	
	Запрос.Текст = ОсновнойТекстЗапроса;
	
	ВыборкаНачисления = Запрос.Выполнить().Выбрать();
	Пока ВыборкаНачисления.Следующий() Цикл
		

		НоваяСтрока	= Начисления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНачисления);
		НоваяСтрока.Авторасчет					= Истина;
		
		Если ВыборкаНачисления.ВидРасчета.ТарифнаяСтавкаОтОбратного Тогда
			НоваяСтрока.Показатель1 = ПроведениеРасчетов.РасчетОтОбратного(ВыборкаНачисления.Показатель1,ВыборкаНачисления);
		КонецЕсли;	
			
	КонецЦикла;
	
КонецПроцедуры

Процедура АвтозаполнениеПоДаннымИзмененияНачислений() Экспорт
	
	//Получим список видов расчета, входящих в базу индексации
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		| ОсновныеНачисленияОрганизаций.Ссылка.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ИндексацияЗарплаты) 
		|";
	МассивБазаИндексации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета");
	
	Запрос.УстановитьПараметр("ПериодРегистрации" , ПериодРегистрации);
	Запрос.УстановитьПараметр("МассивБазаИндексации" , МассивБазаИндексации);
	Запрос.УстановитьПараметр("Организация" , Организация);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ПараметрыРасчетаИндексации.Период КАК Период,
	               |	ПараметрыРасчетаИндексации.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТПараметрыРасчетаИндексации
	               |ИЗ
	               |	РегистрСведений.ПараметрыРасчетаИндексации КАК ПараметрыРасчетаИндексации
	               |ГДЕ
	               |	ПараметрыРасчетаИндексации.Организация = &Организация
	               |	И НАЧАЛОПЕРИОДА(ПараметрыРасчетаИндексации.Период, МЕСЯЦ) = &ПериодРегистрации
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Период,
	               |	Сотрудник";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
   	               |	РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
   	               |	РаботникиОрганизаций.Должность КАК Должность
	               |ПОМЕСТИТЬ ВТРаботникиОрганизаций
	               |ИЗ
	               |	РегистрСведений.РаботникиОрганизаций.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), Организация = &Организация) КАК РаботникиОрганизаций
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	               |	РазмерТарифныхСтавок.Период КАК Период
	               |ПОМЕСТИТЬ ВТТарифныеСтавки
	               |ИЗ
	               |	РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(РазмерТарифныхСтавок.Период, МЕСЯЦ) = &ПериодРегистрации
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ТарифныйРазряд";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	               |	МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК ДатаИзменения
	               |ПОМЕСТИТЬ ВТИзмененияНачислений
	               |ИЗ
	               |	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	               |ГДЕ
	               |	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета В(&МассивБазаИндексации)
	               |	И НАЧАЛОПЕРИОДА(ПлановыеНачисленияРаботниковОрганизаций.Период, МЕСЯЦ) = &ПериодРегистрации
	               |	И ПлановыеНачисленияРаботниковОрганизаций.Актуальность
	               |	И ПлановыеНачисленияРаботниковОрганизаций.Организация = &Организация
	               |	И ПлановыеНачисленияРаботниковОрганизаций.Период <> ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.ДатаПриемаНаРаботу
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
	               |	МАКСИМУМ(ТарифныеСтавки.Период)
	               |ИЗ
	               |	ВТТарифныеСтавки КАК ТарифныеСтавки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПериодРегистрации, ) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
	               |		ПО (ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ТарифныйРазряд1 = ТарифныеСтавки.ТарифныйРазряд
	               |				ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ТарифныйРазряд2 = ТарифныеСтавки.ТарифныйРазряд
	               |				ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ТарифныйРазряд4 = ТарифныеСтавки.ТарифныйРазряд
	               |				ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ТарифныйРазряд5 = ТарифныеСтавки.ТарифныйРазряд
	               |				ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ТарифныйРазряд6 = ТарифныеСтавки.ТарифныйРазряд
	               |				ИЛИ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ТарифныйРазряд3 = ТарифныеСтавки.ТарифныйРазряд)
	               |ГДЕ
	               |	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета В(&МассивБазаИндексации)
	               |СГРУППИРОВАТЬ ПО
	               |	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник,
	               |	ДатаИзменения";
    Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИзмененияНачислений.Сотрудник КАК Сотрудник,
	               |	ИзмененияНачислений.ДатаИзменения КАК ДатаИзменения,
				   |	РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
				   |	РаботникиОрганизаций.Должность КАК Должность
	               |ИЗ
	               |	ВТИзмененияНачислений КАК ИзмененияНачислений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыРасчетаИндексации КАК ПараметрыРасчетаИндексации
	               |		ПО (ПараметрыРасчетаИндексации.Сотрудник = ИзмененияНачислений.Сотрудник)
	               |			И (ПараметрыРасчетаИндексации.Период = ИзмененияНачислений.ДатаИзменения)
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаботникиОрганизаций КАК РаботникиОрганизаций
	               |		ПО ИзмененияНачислений.Сотрудник = РаботникиОрганизаций.Сотрудник
				   |ГДЕ
	               |	ПараметрыРасчетаИндексации.Период ЕСТЬ NULL";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		НоваяСтрока	= РаботникиОрганизации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);

	
	КонецЦикла;

	
КонецПроцедуры	

Функция Рассчитать(ТЧ, ИмяТЧ) Экспорт
	
	//массивы для хранения индексов строк табличных частей,
	//используются для расчета по одному сотруднику
	МассивИндексыСтрокНачисления = Новый Массив();
	
	Отказ = Ложь;
	// Перечитаем объект и соберем данные для заполнения наборов записей регистров
	НачатьТранзакцию();
	Прочитать();
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	ВыборкаПоНачислениям = СформироватьЗапросПоНачисления(ИмяТЧ).Выбрать();
	ЗафиксироватьТранзакцию();
	
	// Создадим рабочие наборы записей
	НаборОсновныеНачисления = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();
	НаборОсновныеНачисления.Отбор.Регистратор.Значение = Ссылка;
	
	Пока ВыборкаПоНачислениям.Следующий() Цикл
		
		ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоНачислениям, ИмяТЧ, Отказ);
		Если НЕ Отказ Тогда
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуОсновныхНачислений(ВыборкаПоНачислениям, НаборОсновныеНачисления, Истина);
			МассивИндексыСтрокНачисления.Добавить(ВыборкаПоНачислениям.НомерСтроки-1);
			
		КонецЕсли;
		
	КонецЦикла;
	НаборОсновныеНачисления.Записать();
	
	Если Отказ Тогда
		
		// Если есть какие-то проблемы - удаляем движения (тут нет транзакции) 
		// Удаляем движения
		НаборОсновныеНачисления.Очистить();
		НаборОсновныеНачисления.Записать();
		
		Возврат Не Отказ;
		
	КонецЕсли;
	
	
	Сотрудники = РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник");
	
	// рассчитываем записи
	// при этом передаем не только набор записей регистра расчета, но и набор записей регисра 
	// накопления со сведениями об отработанном времени
	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("ОсновныеНачисленияРаботниковОрганизаций", 
														НаборОсновныеНачисления, 
														ТЧ, 
														МассивИндексыСтрокНачисления, 
														Сотрудники, 
														Ложь);
	
	// Удаляем движения
	НаборОсновныеНачисления.Очистить();
	НаборОсновныеНачисления.Записать();
	
	Записать();
	
	Возврат Не Отказ;
	
КонецФункции // РассчитатьНачисления()

Функция РассчитатьИндексацию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("СРИндексация" , Перечисления.СпособыРасчетаОплатыТруда.ИндексацияЗарплаты);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияДо.Сотрудник КАК Сотрудник,
	|	СУММА(ИзменениеПараметровРасчетаИндексацииНачисленияДо.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТДоходыДо
	|ИЗ
	|	Документ.ИзменениеПараметровРасчетаИндексации.НачисленияДо КАК ИзменениеПараметровРасчетаИндексацииНачисленияДо
	|
	|ГДЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияДо.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|    ИзменениеПараметровРасчетаИндексацииНачисленияДо.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияДо.Сотрудник КАК Сотрудник,
	|	СУММА(ИзменениеПараметровРасчетаИндексацииНачисленияДо.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТДоходыДоБезИндексации
	|ИЗ
	|	Документ.ИзменениеПараметровРасчетаИндексации.НачисленияДо КАК ИзменениеПараметровРасчетаИндексацииНачисленияДо
	|
	|ГДЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияДо.Ссылка = &ДокументСсылка
	|	И ИзменениеПараметровРасчетаИндексацииНачисленияДо.ВидРасчета.СпособРасчета <> &СРИндексация
	|
	|СГРУППИРОВАТЬ ПО
	|    ИзменениеПараметровРасчетаИндексацииНачисленияДо.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияДо.Сотрудник КАК Сотрудник,
	|	СУММА(ИзменениеПараметровРасчетаИндексацииНачисленияДо.ОплаченоДнейЧасов) КАК Результат
	|ПОМЕСТИТЬ ВТФиксированнаяИндексация
	|ИЗ
	|	Документ.ИзменениеПараметровРасчетаИндексации.НачисленияДо КАК ИзменениеПараметровРасчетаИндексацииНачисленияДо
	|
	|ГДЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияДо.Ссылка = &ДокументСсылка
	|	И ИзменениеПараметровРасчетаИндексацииНачисленияДо.ВидРасчета.СпособРасчета = &СРИндексация
	|
	|СГРУППИРОВАТЬ ПО
	|    ИзменениеПараметровРасчетаИндексацииНачисленияДо.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияПосле.Сотрудник КАК Сотрудник,
	|	СУММА(ИзменениеПараметровРасчетаИндексацииНачисленияПосле.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТДоходыПосле
	|ИЗ
	|	Документ.ИзменениеПараметровРасчетаИндексации.НачисленияПосле КАК ИзменениеПараметровРасчетаИндексацииНачисленияПосле
	|
	|ГДЕ
	|	ИзменениеПараметровРасчетаИндексацииНачисленияПосле.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|    ИзменениеПараметровРасчетаИндексацииНачисленияПосле.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИзменениеПараметровРасчетаИндексации.Сотрудник КАК Сотрудник,
	|	ИзменениеПараметровРасчетаИндексации.ДатаИзменения КАК ДатаИзменения,
	|	ИзменениеПараметровРасчетаИндексации.ПодразделениеОрганизации,
	|	ИзменениеПараметровРасчетаИндексации.Должность,
	|	ЕСТЬNULL(ТаблицаФиксированнаяИндексация.Результат,0) КАК ФиксированнаяИндексацияДо,
	|	ЕСТЬNULL(ДоходыДо.Результат,0) КАК ДоходДо,
	|	ЕСТЬNULL(ДоходыПосле.Результат,0) КАК ДоходПосле,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДоходыПосле.Результат,0) = 0 ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДоходыПосле.Результат,0) <= ЕСТЬNULL(ДоходыДоБезИндексации.Результат,0) ТОГДА 0
	|       ИНАЧЕ ЕСТЬNULL(ДоходыПосле.Результат,0) -  ЕСТЬNULL(ДоходыДоБезИндексации.Результат,0)
	|   КОНЕЦ КАК Повышение,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДоходыПосле.Результат,0) = 0 ТОГДА 0
	|		КОГДА ЕСТЬNULL(ДоходыПосле.Результат,0) > ЕСТЬNULL(ДоходыДо.Результат,0) ТОГДА 0
	|       КОГДА ЕСТЬNULL(ДоходыДо.Результат,0) -  ЕСТЬNULL(ДоходыПосле.Результат,0) > ЕСТЬNULL(ТаблицаФиксированнаяИндексация.Результат,0) ТОГДА ЕСТЬNULL(ДоходыДо.Результат,0) -  ЕСТЬNULL(ДоходыПосле.Результат,0)
	|       ИНАЧЕ ЕСТЬNULL(ТаблицаФиксированнаяИндексация.Результат,0)
	|   КОНЕЦ КАК ФиксированнаяИндексация
	|ИЗ
	|	Документ.ИзменениеПараметровРасчетаИндексации.РаботникиОрганизации КАК ИзменениеПараметровРасчетаИндексации
	|   ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыДо КАК ДоходыДо
	|   ПО ИзменениеПараметровРасчетаИндексации.Сотрудник = ДоходыДо.Сотрудник
	|   ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыДоБезИндексации КАК ДоходыДоБезИндексации
	|   ПО ИзменениеПараметровРасчетаИндексации.Сотрудник = ДоходыДоБезИндексации.Сотрудник
	|   ЛЕВОЕ СОЕДИНЕНИЕ ВТФиксированнаяИндексация КАК ТаблицаФиксированнаяИндексация
	|   ПО ИзменениеПараметровРасчетаИндексации.Сотрудник = ТаблицаФиксированнаяИндексация.Сотрудник
	|   ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПосле КАК ДоходыПосле
	|   ПО ИзменениеПараметровРасчетаИндексации.Сотрудник = ДоходыПосле.Сотрудник
	|
	|ГДЕ
	|	ИзменениеПараметровРасчетаИндексации.Ссылка = &ДокументСсылка
    |";
	
	ТЗРаботникиОрганизации = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Работник из ТЗРаботникиОрганизации Цикл
		Если Работник.Повышение <=0 И
			Работник.ФиксированнаяИндексация > 0 Тогда
			//Что делать с фиксированной индексацией в этом случае - не известно
			//Будем считать, что она остается прежней (не увеличивается, не закрывается)
			Работник.ФиксированнаяИндексация = Работник.ФиксированнаяИндексацияДо;
		КонецЕсли;
	КонецЦикла;
	
	РаботникиОрганизации.Загрузить(ТЗРаботникиОрганизации);
		
	Записать();
	
КонецФункции

Функция СформироватьЗапросПоНачисления(ТЧ)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	// Свойства
	|	СтрокиНачисления.Ссылка.ПериодРегистрации	КАК ПериодРегистрации,
	|	СтрокиНачисления.ДатаНачала					КАК ПериодДействияНачало,
	|	СтрокиНачисления.ДатаОкончания				КАК ПериодДействияКонец,
	|	СтрокиНачисления.БазовыйПериодНачало,
	|	СтрокиНачисления.БазовыйПериодКонец,
	|	СтрокиНачисления.ВидРасчета,
	|	СтрокиНачисления.Сторно,
	|
	// Измерения
	|	СтрокиНачисления.Ссылка.Организация КАК организация,
	|	СтрокиНачисления.Сотрудник,
	|	СтрокиНачисления.Назначение,
	|
	// Ресурсы
	|	СтрокиНачисления.Результат,
	|	СтрокиНачисления.ОплаченоДнейЧасов,
	|	СтрокиНачисления.ОтработаноДней,
	|	СтрокиНачисления.ОтработаноЧасов,
	|	СтрокиНачисления.НормаДней,
	|	СтрокиНачисления.НормаЧасов,
	|	СтрокиНачисления.КалендарныеДни,
	|
	// Реквизиты 
	|	СтрокиНачисления.Авторасчет,
	|	СтрокиНачисления.СторнируемыйДокумент,
	|	СтрокиНачисления.НомерСтроки,
	|	СтрокиНачисления.ПодразделениеОрганизации,
	|	СтрокиНачисления.Должность,
	|	СтрокиНачисления.Показатель1,
	|	СтрокиНачисления.Показатель2,
	|	СтрокиНачисления.Показатель3,
	|	СтрокиНачисления.Показатель4,
	|	СтрокиНачисления.Показатель5,
	|	СтрокиНачисления.Показатель6,
	|	СтрокиНачисления.НормаДнейЗаМесяц,
	|	СтрокиНачисления.НормаЧасовЗаМесяц,
	|   ВЫБОР	КОГДА СтрокиНачисления.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы
	|				ТОГДА СтрокиНачисления.ГрафикРаботы
	|			ИНАЧЕ СтрокиНачисления.Сотрудник
	|	КОНЕЦ КАК ГрафикРаботы,
	|   ВЫБОР	КОГДА СтрокиНачисления.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы
	|   			ТОГДА NULL
	|			ИНАЧЕ СтрокиНачисления.Назначение
	|	КОНЕЦ КАК ГрафикРаботыСотрудник,
	|	СтрокиНачисления.ДокументОснование,
	|	СтрокиНачисления.ВидУчетаВремениДляСредней,
	|
	// Специализированные параметры для регистра Взаиморасчеты с работников организации и др.
	|	СтрокиНачисления.ВидРасчета.СпособРасчета	КАК СпособРасчета,
	|	СтрокиНачисления.ВидРасчета.СчетУчета		КАК СчетУчета,
	|	СтрокиНачисления.ВидРасчета.ВидВремени		КАК ВидВремени,
	|	ЕСТЬNULL(СтрокиНачисления.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
	|	СтрокиНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	КАК ВидИспользованияРабочегоВремени,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ВидРасчета.ВидВремени В(ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ										КАК ЯвляетсяПочасовымОтклонением,
	|
	// Проверки
	|	СтрокиНачисления.ДатаНачала,
	|	СтрокиНачисления.ДатаОкончания,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Организация = СтрокиНачисления.Ссылка.Организация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации
	|ИЗ Документ.ИзменениеПараметровРасчетаИндексации."+ТЧ+" КАК СтрокиНачисления
	|
	|ГДЕ	СтрокиНачисления.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНачисления()

Процедура ДобавитьСтрокуОсновныхНачислений(ВыборкаПоСтрокамДокумента, НаборЗаписей, ОбнулитьРезультат = Ложь)
	
	Движение = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоСтрокамДокумента);
	
 	Движение.ВидУчетаВремени = ПроведениеРасчетов.ПолучитьВидУчетаВремени(ВыборкаПоСтрокамДокумента.СпособРасчета, ВыборкаПоСтрокамДокумента.ВидВремени, ВыборкаПоСтрокамДокумента.СуммированныйУчетРабочегоВремени);
	Если ОбнулитьРезультат И ВыборкаПоСтрокамДокумента.Авторасчет Тогда
		Движение.Результат = 0;
		Движение.ОплаченоДнейЧасов = 0;
	КонецЕсли;

КонецПроцедуры // ДобавитьСтрокуОсновныхНачислений()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	Дата, 
	|	Организация,
	|	ПериодРегистрации,
	|	БезРасчетаНачислений,
	| 	Ссылка 
	|Из 
	|	Документ.ИзменениеПараметровРасчетаИндексации
	|Где 
	|	Ссылка = &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Сотрудник,
	|	Док.ДатаИзменения,
	|	Док.ДоходДо,
	|	Док.ДоходПосле,
	|	Док.ФиксированнаяИндексация,
	|	Док.Повышение,
	|	ВЫБОР
	|	 КОГДА ПараметрыРасчетаИндексации.Период Есть NULL ТОГДА ЛОЖЬ
	|	 ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаДублирование,
	|	Док.ПодразделениеОрганизации,
	|	Док.Должность,
	|	Док.НомерСтроки		КАК НомерСтроки
	|ИЗ
	|   Документ.ИзменениеПараметровРасчетаИндексации.РаботникиОрганизации КАК Док
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|   РегистрСведений.ПараметрыРасчетаИндексации КАК ПараметрыРасчетаИндексации
	|   ПО Док.Сотрудник = ПараметрыРасчетаИндексации.Сотрудник
	|    И Док.ПодразделениеОрганизации = ПараметрыРасчетаИндексации.ПодразделениеОрганизации
	|    И Док.Должность = ПараметрыРасчетаИндексации.Должность
	|    И Док.ДатаИзменения = ПараметрыРасчетаИндексации.Период
	|    И ПараметрыРасчетаИндексации.Регистратор <> &ДокументСсылка
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|";


	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ)

	// Организация
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по работникам, 
//  Отказ 						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Работники организации"": ";

	// Сотрудник
	ЕстьФизЛицо = ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
	Если Не ЕстьФизЛицо Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран работник!", Отказ);
	КонецЕсли;
	
	//Дата изменения
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаИзменения) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата изменения!", Отказ);
	КонецЕсли;
	
	//Ошибка дублирования
	Если ВыборкаПоСтрокамДокумента.ОшибкаДублирование Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "по сотруднику уже зарегистрировано изменение параметров индексации другим документом!", Отказ);
	КонецЕсли;

	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоСтрокамДокумента, ТЧ, Отказ, Заголовок = "")

	Если ТЧ = "НачисленияДо" Тогда
		ИмяТЧ = "Начисления ""до""";
	Иначе	
	    ИмяТЧ = "Начисления ""после""";
	КонецЕсли;
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части "+ИмяТЧ+": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// ВидРасчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;

	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаНачала) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала начисления!", Отказ, Заголовок);
	КонецЕсли;

	// Дата окончания
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания начисления!", Отказ, Заголовок);
	КонецЕсли;
	
	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Базовыйпериодначало) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала базового периода начисления!", Отказ, Заголовок);
	КонецЕсли;

	// Дата окончания
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодКонец) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания базового периода начисления!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()

Процедура ДобавитьСтрокуВДвиженияПоРегистрам(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, ПрименяетсяФиксированнаяИндексация)
	
	Если ВыборкаПоШапкеДокумента.БезРасчетаНачислений ИЛИ НЕ ПрименяетсяФиксированнаяИндексация Тогда
		
		Движение = Движения.ПараметрыРасчетаИндексации.Добавить();
			
		Движение.Организация  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.Сотрудник    	= ВыборкаПоРаботникиОрганизации.Сотрудник;
		Движение.Период       	= ВыборкаПоРаботникиОрганизации.ДатаИзменения;
		Движение.ДоходПосле		= ВыборкаПоРаботникиОрганизации.ДоходПосле;
		Движение.ПодразделениеОрганизации		= ВыборкаПоРаботникиОрганизации.ПодразделениеОрганизации;
		Движение.Должность		= ВыборкаПоРаботникиОрганизации.Должность;
		
	ИначеЕсли ВыборкаПоРаботникиОрганизации.Повышение > 0 Тогда 
		Движение = Движения.ПараметрыРасчетаИндексации.Добавить();
			
		Движение.Организация  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.Сотрудник    	= ВыборкаПоРаботникиОрганизации.Сотрудник;
		Движение.Период       	= ВыборкаПоРаботникиОрганизации.ДатаИзменения;
		Движение.ДоходПосле		= ВыборкаПоРаботникиОрганизации.ДоходПосле;
		Движение.ДоходДо		= ВыборкаПоРаботникиОрганизации.ДоходДо;
		Движение.Повышение 		= ВыборкаПоРаботникиОрганизации.Повышение;
		Движение.ПодразделениеОрганизации		= ВыборкаПоРаботникиОрганизации.ПодразделениеОрганизации;
		Движение.Должность		= ВыборкаПоРаботникиОрганизации.Должность;
	КонецЕсли;	
	
	Если ПрименяетсяФиксированнаяИндексация Тогда
		Движение = Движения.ПараметрыФиксированнойИндексации.Добавить();
				
		Движение.Организация  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.Сотрудник    	= ВыборкаПоРаботникиОрганизации.Сотрудник;
		Движение.Период       	= ВыборкаПоРаботникиОрганизации.ДатаИзменения;
		Движение.Размер			= ВыборкаПоРаботникиОрганизации.ФиксированнаяИндексация;
		Движение.ПодразделениеОрганизации		= ВыборкаПоРаботникиОрганизации.ПодразделениеОрганизации;
		Движение.Должность		= ВыборкаПоРаботникиОрганизации.Должность;
	КонецЕсли;	
	
КонецПроцедуры	



Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПриемНаРаботуВОрганизацию")
		или ТипЗнч(Основание) = Тип("ДокументСсылка.КадровоеПеремещениеОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|  РаботникиОрганизаций.Период		КАК ДатаИзменения,
		|  РаботникиОрганизаций.Организация	КАК Организация,
		|  РаботникиОрганизаций.Сотрудник	КАК Сотрудник,
		|  РаботникиОрганизаций.ПодразделениеОрганизации		КАК ПодразделениеОрганизации,
		|  РаботникиОрганизаций.Должность	КАК Должность
		|ИЗ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ	РаботникиОрганизаций.Регистратор = &парамРегистратор
		|	И	РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
		|";
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;
		Организация = Основание.Организация;
		ПериодРегистрации = НачалоМесяца(Основание.Дата);
		БезРасчетаНачислений = НЕ (ПроведениеРасчетов.ДатаВвводаФиксированнойИндексации() <= ПериодРегистрации);
		
		Пока Выборка.Следующий() Цикл
			СтрокаРаботники = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботники, Выборка);
			Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПриемНаРаботуВОрганизацию") Тогда
				Если Выборка.ДатаИзменения >= ПроведениеРасчетов.ДатаВвводаФиксированнойИндексации() Тогда
			    	СтрокаРаботники.ДатаИзменения	= ДобавитьМесяц(НачалоМесяца(Выборка.ДатаИзменения),-1);
				Иначе
					СтрокаРаботники.ДатаИзменения	= Выборка.ДатаИзменения;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		
		Если НЕ БезРасчетаНачислений Тогда
			мСотрудники = РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник");
			АвтозаполнениеНачисления( Ссылка, НачисленияДо, мСотрудники );
			АвтозаполнениеНачисления( Ссылка, НачисленияПосле, мСотрудники );
		КонецЕсли;	
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|  Начисления.Период		КАК ДатаИзменения,
		|  Начисления.Сотрудник		КАК Сотрудник
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
		|ГДЕ Начисления.Регистратор = &парамРегистратор
		|  И Начисления.ВидРасчета <> Начисления.ВидРасчетаИзмерение
		|  И Начисления.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|   Начисления.Сотрудник,
		|   Начисления.ДатаИзменения,
		|   МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ ВТПериодыРаботникиОрганизаций	
		|ИЗ ВТНачисления Как Начисления
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций Как РаботникиОрганизаций
		|	ПО Начисления.Сотрудник = РаботникиОрганизаций.Сотрудник
		|    И Начисления.ДатаИзменения >= РаботникиОрганизаций.Период
		|
		|СГРУППИРОВАТЬ ПО 
		|	Начисления.Сотрудник,
		|	Начисления.ДатаИзменения
		|;
		|
		|ВЫБРАТЬ
		|   Начисления.Сотрудник,
		|   Начисления.ДатаИзменения,
		|   РаботникиОрганизаций.ПодразделениеОрганизации,
		|   РаботникиОрганизаций.Должность
		|ИЗ ВТНачисления Как Начисления
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыРаботникиОрганизаций Как ПериодыРаботникиОрганизаций
		|	ПО Начисления.Сотрудник = ПериодыРаботникиОрганизаций.Сотрудник 
		|    И Начисления.ДатаИзменения = ПериодыРаботникиОрганизаций.ДатаИзменения
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций Как РаботникиОрганизаций
		|	ПО Начисления.Сотрудник = РаботникиОрганизаций.Сотрудник
		|    И ПериодыРаботникиОрганизаций.Период = РаботникиОрганизаций.Период
		|";
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;
		Организация = Основание.Организация;
		ПериодРегистрации = НачалоМесяца(Основание.Дата);
		БезРасчетаНачислений = НЕ (ПроведениеРасчетов.ДатаВвводаФиксированнойИндексации() <= ПериодРегистрации);
		
		Пока Выборка.Следующий() Цикл
			СтрокаРаботники = РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаботники, Выборка);
		КонецЦикла;	
		
		Если НЕ БезРасчетаНачислений Тогда
			мСотрудники = РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник");
			АвтозаполнениеНачисления( Ссылка, НачисленияДо, мСотрудники );
			АвтозаполнениеНачисления( Ссылка, НачисленияПосле, мСотрудники );
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	
	ПрименяетсяФиксированнаяИндексация = (ПроведениеРасчетов.ДатаВвводаФиксированнойИндексации() <= ПериодРегистрации);
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента);
			ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоРаботники.Выбрать();

			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ);
                ДобавитьСтрокуВДвиженияПоРегистрам(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, ПрименяетсяФиксированнаяИндексация);

			КонецЦикла;
			
		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации,,"Сотрудник");
	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицоПоТЧ(РаботникиОрганизации);
	
КонецПроцедуры
Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование = Неопределено;
	
КонецПроцедуры



