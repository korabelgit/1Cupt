
Процедура АвтозаполнениеПоШтатномуРасписанию(Организация, ДатаАктуальности) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ШтатноеРасписаниеОрганизаций.Должность КАК Должность
		|ИЗ
		|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&ДатаАктуальности, ПодразделениеОрганизации.Владелец = &Организация ) КАК ШтатноеРасписаниеОрганизаций
		|ГДЕ
		|	ШтатноеРасписаниеОрганизаций.КоличествоСтавок > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодразделениеОрганизации.Наименование,
		|	Должность.Наименование";
		
	ШтатныеЕдиницы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура АвтозаполнениеПоШтатнойРасстановке(Организация, ДатаАктуальности) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	РаботникиОрганизаций.Должность КАК Должность
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &Организация ) КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.ЗанимаемыхСтавок > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодразделениеОрганизации.Наименование,
		|	Должность.Наименование";
		
	ШтатныеЕдиницы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	Дата, 
	|	Организация,
	| 	Ссылка 
	|Из 
	|	Документ.ИзменениеПараметровРасчетаИндексацииПоДолжностям
	|Где 
	|	Ссылка = &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "ШтатныеЕдиницы" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоШтатныеЕдиницы(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.ДатаИзменения,
	|	Док.ПодразделениеОрганизации,
	|	Док.Должность,
	|	ВЫБОР
	|	 КОГДА ПараметрыРасчетаИндексации.Период Есть NULL ТОГДА ЛОЖЬ
	|	 ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаДублирование,
	|	Док.НомерСтроки		КАК НомерСтроки
	|ИЗ
	|   Документ.ИзменениеПараметровРасчетаИндексацииПоДолжностям.ШтатныеЕдиницы КАК Док
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|   РегистрСведений.ПараметрыРасчетаИндексации КАК ПараметрыРасчетаИндексации
	|   ПО Док.ПодразделениеОрганизации = ПараметрыРасчетаИндексации.ПодразделениеОрганизации
	|    И Док.Должность = ПараметрыРасчетаИндексации.Должность
	|    И ПараметрыРасчетаИндексации.Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|    И Док.ДатаИзменения = ПараметрыРасчетаИндексации.Период
	|    И ПараметрыРасчетаИндексации.Регистратор <> &ДокументСсылка
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШтатныеЕдиницы()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ)

	// Организация
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ШтатныеЕдиницы" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по работникам, 
//  Отказ 						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиШтатныеЕдиницы(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Штатные единицы"": ";

	// Подразделение
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано подразделение!", Отказ);
	КонецЕсли;
	
	// Должность
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Должность) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана должность!", Отказ);
	КонецЕсли;
	
	//Дата изменения
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаИзменения) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата изменения!", Отказ);
	КонецЕсли;
	
	//Ошибка дублирования
	Если ВыборкаПоСтрокамДокумента.ОшибкаДублирование Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "по штатной единице уже зарегистрировано изменение параметров индексации другим документом!", Отказ);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

Процедура ДобавитьСтрокуВДвиженияПоРегистрам(ВыборкаПоШапкеДокумента, ВыборкаСтрокамДокументам)
	
	Движение = Движения.ПараметрыРасчетаИндексации.Добавить();
			
	Движение.Организация  	= ВыборкаПоШапкеДокумента.Организация;
	Движение.Период       	= ВыборкаСтрокамДокументам.ДатаИзменения;
	Движение.ПодразделениеОрганизации		= ВыборкаСтрокамДокументам.ПодразделениеОрганизации;
	Движение.Должность		= ВыборкаСтрокамДокументам.Должность;
	
КонецПроцедуры	


Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.КадровоеПеремещениеОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|  РаботникиОрганизаций.Период		КАК ДатаИзменения,
		|  РаботникиОрганизаций.ПодразделениеОрганизации		КАК ПодразделениеОрганизации,
		|  РаботникиОрганизаций.Должность	КАК Должность
		|ИЗ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ	РаботникиОрганизаций.Регистратор = &парамРегистратор
		|	И	РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
		|";
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;
		
		Пока Выборка.Следующий() Цикл
			СтрокаШтатныеЕдиницы = ШтатныеЕдиницы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаШтатныеЕдиницы, Выборка);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИзменениеШтатногоРасписанияОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|  ШтатноеРасписаниеОрганизаций.Период		КАК ДатаИзменения,
		|  ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации		КАК ПодразделениеОрганизации,
		|  ШтатноеРасписаниеОрганизаций.Должность	КАК Должность
		|ИЗ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
		|ГДЕ	ШтатноеРасписаниеОрганизаций.Регистратор = &парамРегистратор
		|	И	ШтатноеРасписаниеОрганизаций.КоличествоСтавок > 0
		|";
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;
		
		Пока Выборка.Следующий() Цикл
			СтрокаШтатныеЕдиницы = ШтатныеЕдиницы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаШтатныеЕдиницы, Выборка);
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|  Начисления.Период		КАК ДатаИзменения,
		|  Начисления.Сотрудник		КАК Сотрудник
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
		|ГДЕ Начисления.Регистратор = &парамРегистратор
		|  И Начисления.ВидРасчета <> Начисления.ВидРасчетаИзмерение
		|  И Начисления.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|   Начисления.Сотрудник,
		|   Начисления.ДатаИзменения,
		|   МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ ВТПериодыРаботникиОрганизаций	
		|ИЗ ВТНачисления Как Начисления
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций Как РаботникиОрганизаций
		|	ПО Начисления.Сотрудник = РаботникиОрганизаций.Сотрудник
		|    И Начисления.ДатаИзменения >= РаботникиОрганизаций.Период
		|
		|СГРУППИРОВАТЬ ПО 
		|	Начисления.Сотрудник,
		|	Начисления.ДатаИзменения
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|   Начисления.ДатаИзменения,
		|   РаботникиОрганизаций.Должность,
		|   РаботникиОрганизаций.ПодразделениеОрганизации
		|ИЗ ВТНачисления Как Начисления
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыРаботникиОрганизаций Как ПериодыРаботникиОрганизаций
		|	ПО Начисления.Сотрудник = ПериодыРаботникиОрганизаций.Сотрудник 
		|    И Начисления.ДатаИзменения = ПериодыРаботникиОрганизаций.ДатаИзменения
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций Как РаботникиОрганизаций
		|	ПО Начисления.Сотрудник = РаботникиОрганизаций.Сотрудник
		|    И ПериодыРаботникиОрганизаций.Период = РаботникиОрганизаций.Период
		|";
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;
		
		Пока Выборка.Следующий() Цикл
			СтрокаШтатныеЕдиницы = ШтатныеЕдиницы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаШтатныеЕдиницы, Выборка);
		КонецЦикла;		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			РезультатЗапросаПоШтатныеЕдиницы = СформироватьЗапросПоШтатныеЕдиницы(ВыборкаПоШапкеДокумента);
			ВыборкаПоШтатныеЕдиницы = РезультатЗапросаПоШтатныеЕдиницы.Выбрать();

			Пока ВыборкаПоШтатныеЕдиницы.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиШтатныеЕдиницы(ВыборкаПоШапкеДокумента, ВыборкаПоШтатныеЕдиницы, Отказ);
				ДобавитьСтрокуВДвиженияПоРегистрам(ВыборкаПоШапкеДокумента, ВыборкаПоШтатныеЕдиницы);

			КонецЦикла;
			
		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование = Неопределено;
	
КонецПроцедуры



