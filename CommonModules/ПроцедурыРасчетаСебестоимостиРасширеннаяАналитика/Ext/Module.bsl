///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ВЫПОЛНЕНИЯ ЗАДАННЫХ В ДОКУМЕНТЕ ДЕЙСТВИЙ

// Процедура осуществляет выполнение заданных в документе действий.
//
// Параметры:
//  СтруктураШапкиДокумента - Структура - Реквизиты документа
//  ТаблицаОшибок - таблица, подготовленная УправлениеЗатратами.СформироватьТаблицуОшибок()
Процедура ВыполнитьДействияДокумента(СтруктураШапкиДокумента, ТаблицаОшибок) Экспорт
	
	
	ЕстьРасчетФактическойСебестоимости = Ложь;
	ЕстьРаспределениеРасходов = Ложь;
	ЕстьРасчетБазыРаспределения = Ложь;
	ФормированиеДвиженийПоРегистрам = Ложь;
	РассчитыватьСебестоимостьПроизводственныхУслуг = Ложь;
	ЕстьРаспределениеТЗР = Ложь;
	
	// Получим список действий документа
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РасчетСебестоимостиВыпускаВыполняемыеДействия.ВыполняемоеДействие
	|ИЗ
	|	Документ.РасчетСебестоимостиВыпуска.ВыполняемыеДействия КАК РасчетСебестоимостиВыпускаВыполняемыеДействия
	|ГДЕ
	|	РасчетСебестоимостиВыпускаВыполняемыеДействия.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);
	ВыборкаДействий = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДействий.Следующий() Цикл
		
		Если ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетФактическойСебестоимости Тогда
		
			ЕстьРасчетФактическойСебестоимости = Истина;
			
		ИначеЕсли ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПодразделениям
		      ИЛИ ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПеределам Тогда
		
			ЕстьРасчетФактическойСебестоимости = Истина;
			ФормированиеДвиженийПоРегистрам = Истина;
			
		ИначеЕсли ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеРасходовПоБазе Тогда
		
			ЕстьРаспределениеРасходов = Истина;
			
		ИначеЕсли ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПеределам
		 	  ИЛИ ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПодразделениям Тогда
		
			ЕстьРаспределениеРасходов = Истина;
			ФормированиеДвиженийПоРегистрам = Истина;
								
		ИначеЕсли ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияРасходов
			  ИЛИ ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияКосвенныхРасходов Тогда
		
			ЕстьРасчетБазыРаспределения = Истина;
			
		ИначеЕсли ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ФормированиеДвиженийПоРегистрам Тогда
		
			ФормированиеДвиженийПоРегистрам = Истина;
			
		
		ИначеЕсли ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетСебестоимостиПроизводственныхУслуг Тогда
			
			РассчитыватьСебестоимостьПроизводственныхУслуг = Истина;
			
		
		ИначеЕсли ВыборкаДействий.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеТЗР Тогда
			ЕстьРасчетФактическойСебестоимости = Истина;
		  	ЕстьРаспределениеТЗР = Истина;
		
		КонецЕсли;
		
	КонецЦикла;
	
	
	Если РассчитыватьСебестоимостьПроизводственныхУслуг Тогда
		СформироватьДвиженияПоВыпускуУслуг(СтруктураШапкиДокумента);
		ДобавитьЗаписьВПротоколРасчета("Определен список реализованных услуг", ТаблицаОшибок, СтруктураШапкиДокумента);
	КонецЕсли;	
	
	Если ЕстьРасчетФактическойСебестоимости ИЛИ ЕстьРаспределениеРасходов Тогда
		// Для этих действий важно, чтобы в учете затрат не было ошибок,
		// о которых свидетельствуют отрицательные остатки
		ПроверитьОстаткиРегистровУчетаЗатрат(СтруктураШапкиДокумента, ТаблицаОшибок);
	КонецЕсли;
	
	Если ЕстьРасчетФактическойСебестоимости Тогда
			
		БылиКорректировкиНУ = РасчетФактическойСебестоимостиВыпуска(
			СтруктураШапкиДокумента,
			ТаблицаОшибок,
			Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетФактическойСебестоимости
		);
		
		Если БылиКорректировкиНУ Тогда
			БылиКорректировкиНУ = РасчетФактическойСебестоимостиВыпуска(
				СтруктураШапкиДокумента,
				ТаблицаОшибок,
				Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетФактическойСебестоимости
			);
		КонецЕсли;
			
		ДобавитьЗаписьВПротоколРасчета("Выполнен предварительный расчет фактической себестоимости", ТаблицаОшибок, СтруктураШапкиДокумента);
	КонецЕсли;
	
	БылоРаспределениеТЗР = Ложь;
	Если ЕстьРаспределениеТЗР Тогда
		БылоРаспределениеТЗР = РаспределениеТЗРРасширеннаяАналитика.РаспределитьТЗР(СтруктураШапкиДокумента);
	КонецЕсли; 
	
	Если ЕстьРасчетБазыРаспределения Тогда
		ПроцедурыРасчетаБазыРаспределенияЗатрат.РасчетБазыРаспределенияЗатрат(
			СтруктураШапкиДокумента,
			Истина // КосвенныеЗатраты
		);
		ДобавитьЗаписьВПротоколРасчета("Рассчитаны базы распределения", ТаблицаОшибок, СтруктураШапкиДокумента);
	КонецЕсли;
	
	Если ЕстьРаспределениеРасходов Тогда
		РаспределениеРасходов(СтруктураШапкиДокумента, ТаблицаОшибок);
	КонецЕсли;
	
	Если ФормированиеДвиженийПоРегистрам Тогда
		СверткаДвиженийПоРегиструУчетЗатрат(СтруктураШапкиДокумента);
		ФормированиеДвиженийПоАналитическимРегистрам(СтруктураШапкиДокумента);
		ДобавитьЗаписьВПротоколРасчета("Сформированы движения по регистрам", ТаблицаОшибок, СтруктураШапкиДокумента);
	КонецЕсли;
	
	// Содержит менеджер временных таблиц, 
	// эти таблицы больше не нужны
	Если СтруктураШапкиДокумента.Свойство("МенеджерВременнойТаблицыПредварительнаяОценкаЗатрат") Тогда
		СтруктураШапкиДокумента.Удалить("МенеджерВременнойТаблицыПредварительнаяОценкаЗатрат");
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьДействияДокумента()

// Используется для отладки расчета себестоимости.
// Протоколирует ход расчета
//
// Параметры:
//	Текст - текст сообщения
//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
//	СтруктураШапкиДокумента
Процедура ДобавитьЗаписьВПротоколРасчета(Текст, ТаблицаОшибок, СтруктураШапкиДокумента)
	
	Если Не СтруктураШапкиДокумента.Свойство("ОтладочныйРежим")
	 ИЛИ Не СтруктураШапкиДокумента.ОтладочныйРежим
	Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.Сообщение("" + ТекущаяДата() + " " + Текст, Перечисления.ВидыСообщений.Информация);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ КОНТРОЛЯ КОРРЕКТНОСТИ ДАННЫХ

// Функция формирует запрос по отрицательным остаткам затрат.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//
Функция СформироватьЗапросПоОтрицательнымОстаткам(
	СтруктураШапкиДокумента
	)
	
	ТекстЗапросаСКомментариями = 
	"ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка,
	|	АналитикаВидаУчета.РазделУчета
	|ПОМЕСТИТЬ ОтборАналитикаВидаУчета
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ПогашеннаяСтоимость)
	|	И АналитикаВидаУчета.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск)
	|	//ДляУпрУчета И АналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляРеглУчета И АналитикаВидаУчета.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборАналитикаВидаУчета.Ссылка
	|ПОМЕСТИТЬ ОтборРазделУчетаЗатраты
	|ИЗ
	|	ОтборАналитикаВидаУчета КАК ОтборАналитикаВидаУчета
	|ГДЕ
	|	ОтборАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|	ИЛИ ОтборАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	СУММА(УчетЗатрат.Количество) КАК Количество
	|ПОМЕСТИТЬ ВозвратныеОтходы
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК УчетЗатрат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборРазделУчетаЗатраты КАК ОтборРазделУчетаЗатраты
	|		ПО УчетЗатрат.АналитикаВидаУчета = ОтборРазделУчетаЗатраты.Ссылка
	|ГДЕ
	|	УчетЗатрат.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатратыНаВыпускПродукции.ОтрицательныеЗатраты)
	|	И УчетЗатрат.Активность
	|	И УчетЗатрат.Период МЕЖДУ &ДатаНачалаПериода И &ДатаКонцаПериода
	|	И УчетЗатрат.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетЗатратОстатки.АналитикаВидаУчета,
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаУчетаПартий,
	|	УчетЗатратОстатки.АналитикаРаспределенияЗатрат,
	|	УчетЗатратОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ОтрицательныеОстатки
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(
	|			&КонГраница,
	|			АналитикаВидаУчета В
	|				(ВЫБРАТЬ
	|					ОтборАналитикаВидаУчета.Ссылка
	|				ИЗ
	|					ОтборАналитикаВидаУчета КАК ОтборАналитикаВидаУчета)) КАК УчетЗатратОстатки
	|ГДЕ
	|	УчетЗатратОстатки.КоличествоОстаток < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтборАналитикаВидаУчета.РазделУчета КАК РазделУчета
	|	//ОтладочныйРежим , 
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаВидаУчета,
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаУчетаЗатрат,
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаУчетаПартий,
	|	//ОтладочныйРежим ОтрицательныеОстатки.АналитикаРаспределенияЗатрат
	|ИЗ
	|	ОтрицательныеОстатки КАК ОтрицательныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВозвратныеОтходы КАК ВозвратныеОтходы
	|		ПО ОтрицательныеОстатки.АналитикаВидаУчета = ВозвратныеОтходы.АналитикаВидаУчета
	|			И ОтрицательныеОстатки.АналитикаУчетаЗатрат = ВозвратныеОтходы.АналитикаУчетаЗатрат
	|			И ОтрицательныеОстатки.АналитикаУчетаПартий = ВозвратныеОтходы.АналитикаУчетаПартий
	|			И ОтрицательныеОстатки.АналитикаРаспределенияЗатрат = ВозвратныеОтходы.АналитикаРаспределенияЗатрат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборАналитикаВидаУчета КАК ОтборАналитикаВидаУчета
	|		ПО ОтрицательныеОстатки.АналитикаВидаУчета = ОтборАналитикаВидаУчета.Ссылка
	|ГДЕ
	|	ОтрицательныеОстатки.Количество < ЕСТЬNULL(ВозвратныеОтходы.Количество, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазделУчета";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Если СтруктураШапкиДокумента.Свойство("ОтладочныйРежим") 
	   И СтруктураШапкиДокумента.ОтладочныйРежим Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ОтладочныйРежим", "");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаНачалаПериода", 	СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("ДатаКонцаПериода", 	СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("КонГраница", 		СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("Организация", 		СтруктураШапкиДокумента.Организация);
	
	Возврат Запрос;
	
КонецФункции // СформироватьЗапросПоОтрицательнымОстаткам()

// Процедура выводит сообщение об отрицательном остатке затрат.
//
// Параметры:
//	Выборка - ВыборкаИзРезультатаЗапроса
//	СтрокаГруппы - СтрокаДереваЗначений - Текущая строка комментария
//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
//
Процедура ВывестиСообщениеОбОтрицательномОстатке(
	Выборка,
	СтрокаГруппы,
	ТаблицаОшибок,
	ОтладочныйРежим = Ложь
	)
	
	ТекстСообщения = "Раздел учета: " + Выборка.РазделУчета;
	
	Если ОтладочныйРежим Тогда
		ТекстСообщения = "" + Выборка.АналитикаВидаУчета + "; " + Выборка.АналитикаУчетаЗатрат + "; "  + Выборка.АналитикаРаспределенияЗатрат + "; " + Выборка.АналитикаУчетаПартий;
	КонецЕсли;
		
	Если Выборка.РазделУчета = Перечисления.РазделыУчета.МПЗ
	 ИЛИ Выборка.РазделУчета = Перечисления.РазделыУчета.ТоварыОтгруженные
	 ИЛИ Выборка.РазделУчета = Перечисления.РазделыУчета.МатериалыВЭксплуатации
	Тогда
		Расшифровка = УправлениеЗатратами.СформироватьРасшифровкуОткрытияОтчета("ВедомостьПоУчетуМПЗ");
		
	ИначеЕсли Выборка.РазделУчета = Перечисления.РазделыУчета.Выпуск
		ИЛИ Выборка.РазделУчета = Перечисления.РазделыУчета.Наработка
	Тогда
		Расшифровка = УправлениеЗатратами.СформироватьРасшифровкуОткрытияОтчета("ВыпускПродукцииИУслуг");
	Иначе
		Расшифровка = УправлениеЗатратами.СформироватьРасшифровкуОткрытияОтчета("ВедомостьПоУчетуЗатрат");
	КонецЕсли;
	
	НоваяСтрока = ТаблицаОшибок.Добавить();
	НоваяСтрока.Группа = СтрокаГруппы;
	НоваяСтрока.Сообщение = ТекстСообщения;
	НоваяСтрока.Объект = Расшифровка;
		
КонецПроцедуры // ВывестиСообщениеОбОтрицательномОстатке()

// Процедура проверяет наличие отрицательных остатков по регистрам учета затрат.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
//
Процедура ПроверитьОстаткиРегистровУчетаЗатрат(
	СтруктураШапкиДокумента,
	ТаблицаОшибок
	)
	
	Запрос = СформироватьЗапросПоОтрицательнымОстаткам(СтруктураШапкиДокумента);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		СтрокаГруппы = "Обнаружены отрицательные остатки по регистрам учета затрат!
		|Расчет себестоимости может быть выполнен некорректно и может выполняться длительное время.";
		
		ОтладочныйРежим = 
			СтруктураШапкиДокумента.Свойство("ОтладочныйРежим") 
	   		И СтруктураШапкиДокумента.ОтладочныйРежим;
			
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВывестиСообщениеОбОтрицательномОстатке(
				Выборка,
				СтрокаГруппы,
				ТаблицаОшибок,
				ОтладочныйРежим
			);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьОстаткиРегистровУчетаЗатрат()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАСЧЕТА СЕБЕСТОИМОСТИ ПО ПРЯМЫМ ЗАТРАТАМ

// Процедура формирования временной таблицы "АналитикаВидаУчетаВыпуск".
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)

	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение, 
	|	РегистрАналитикаВидаУчета.Ссылка
	|
	|ПОМЕСТИТЬ АналитикаВидаУчетаВыпуск
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|ГДЕ
	|	(РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск)
	|	ИЛИ РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Наработка))
	|	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляУпрУчета И РегистрАналитикаВидаУчета.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
	|	//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = &Организация
	|";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаВидаУчетаВыпуск"
	);

КонецПроцедуры // СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ЗАПРОСА ПО РЕГИСТРУ "ВЫПУСК ПРОДУКЦИИ"

// Процедура формирования временной таблицы "ВыпускПродукции".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СформироватьВременнуюТаблицуВыпускПродукцииИУслуг(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)

	ТекстЗапросаСКомментариями = 
	"ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	
	|	//ДляРеглУчета ВыпускПродукции.СтоимостьНУПриход,
	|	//ДляРеглУчета ВыпускПродукции.НДСВходящийПриход,
	|	//ДляРеглУчета ВыпускПродукции.НДСКредитПриход,
	|	ВыпускПродукции.СтоимостьПриход,
	|	ВыпускПродукции.КоличествоНачальныйОстаток,
	|	ВыпускПродукции.КоличествоПриход
	|	
	|ПОМЕСТИТЬ ДанныеПоВыпуску
	|ИЗ 
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.ОстаткиИОбороты(&НачГраница, &КонГраница, , , 
	|		АналитикаВидаУчета В (
	| 			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	) КАК ВыпускПродукции
	|;
	|
	|ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	
	|	// Аналитика вида учета.
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.Организация,
	|
	|	ВЫБОР КОГДА РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке)
	|	КОНЕЦ КАК РазделУчетаЗатрат,
	|
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляРеглУчета ВыпускПродукции.СтоимостьНУПриход КАК СтоимостьНУ,
	|	//ДляУпрУчета 0 КАК НДСВходящий,
	|	//ДляУпрУчета 0 КАК НДСКредит,
	|	//ДляРеглУчета ВыпускПродукции.НДСВходящийПриход КАК НДСВходящий,
	|	//ДляРеглУчета ВыпускПродукции.НДСКредитПриход   КАК НДСКредит,
	|	ВыпускПродукции.СтоимостьПриход КАК Стоимость,
	|
	|	ВЫБОР КОГДА РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Наработка) ТОГДА
	|		ВыпускПродукции.КоличествоНачальныйОстаток
	|		+ ВыпускПродукции.КоличествоПриход
	|	ИНАЧЕ
	|		ВыпускПродукции.КоличествоПриход
	|	КОНЕЦ КАК Количество
	|		
	|ПОМЕСТИТЬ ВыпускПродукции
	|
	|ИЗ 
	|	ДанныеПоВыпуску КАК ВыпускПродукции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|	ПО 
	|		ВыпускПродукции.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеПоВыпуску";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачГраница", СтруктураШапкиДокумента.мНачГраница);
	Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ВыпускПродукции"
	);

КонецПроцедуры // СформироватьВременнуюТаблицуВыпускПродукцииИУслуг()

// Процедура формирования временной таблицы "РаспределениеПродукцииПоПеределам" для текущего передела.
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "НаправленияВыпускаПродукции"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СформироватьВременнуюТаблицуАналитикаВыпускаПродукции(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)

	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаВидаУчета,
	|	ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|	ВыпускПродукции.КорАналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаРаспределенияЗатрат,
	|
	|	// Аналитика учета выпуска.
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.Организация,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.Спецификация,
	|	РегистрАналитикаРаспределенияЗатрат.ВариантВыпускаПродукции,
	|
	|	// Аналитика направления выпуска.
	|	РегистрКорАналитикаВидаУчета.Склад КАК СкладПолучатель,
	|	//ДляУпрУчета РегистрКорАналитикаВидаУчета.Подразделение КАК ПодразделениеПолучатель,
	|	//ДляРеглУчета РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации КАК ПодразделениеПолучатель,
	|	
	|	//ДляРеглУчета ВЫБОР КОГДА Не РегистрКорАналитикаВидаУчета.СчетУчета ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрКорАналитикаВидаУчета.СчетУчета
	|	//ДляРеглУчета КОГДА Не РегистрАналитикаУчетаПрочихЗатрат.СчетУчета ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрАналитикаУчетаПрочихЗатрат.СчетУчета
	|	//ДляРеглУчета КОНЕЦ КАК СчетДт,
	|
	|	//ДляРеглУчета ВЫБОР КОГДА Не РегистрКорАналитикаВидаУчета.НалоговоеНазначение ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрКорАналитикаВидаУчета.НалоговоеНазначение 
	|	//ДляРеглУчета КОГДА Не РегистрАналитикаУчетаПрочихЗатрат.НалоговоеНазначение ЕСТЬ NULL ТОГДА
	|	//ДляРеглУчета 	РегистрАналитикаУчетаПрочихЗатрат.НалоговоеНазначение 
	|	//ДляРеглУчета КОНЕЦ КАК НалоговоеНазначениеПолучатель,
	|	
	|	РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	
	|	// Аналитика учета прочих затрат
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.Субконто1 КАК СубконтоДт1,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.Субконто2 КАК СубконтоДт2,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.Субконто3 КАК СубконтоДт3,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ1 КАК СубконтоДтНУ1,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ2 КАК СубконтоДтНУ2,
	|	//ДляРеглУчета РегистрАналитикаУчетаПрочихЗатрат.СубконтоНУ3 КАК СубконтоДтНУ3,
	|
	|	//ДляУпрУчета ЕСТЬNULL(ПроектыНоменклатуры.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) КАК Проект,
	|	
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	РегистрАналитикаУчетаПартий.Заказ КАК ЗаказПолучатель
	|			
	|ПОМЕСТИТЬ АналитикаВыпускаПродукции
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВыпускПродукции.АналитикаВидаУчета,
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.АналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаВидаУчета,
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|		ВыпускПродукции.КорАналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат
	|	ИЗ
	|		РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК ВыпускПродукции
	|	ГДЕ
	|		ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|		И ВыпускПродукции.Активность
	|		И ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ВыпускПродукции.АналитикаВидаУчета В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Ссылка
	|			ИЗ			
	|				АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	) КАК ВыпускПродукции
	|
	|	// Аналитика вида учета.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО 
	|		ВыпускПродукции.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|
	|	// Аналитика учета продукции.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО 
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|
	|	// Аналитика учета партий.
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО 
	|		ВыпускПродукции.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|		
	|	// Аналитика вида учета (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО 
	|		ВыпускПродукции.КорАналитикаВидаУчета = РегистрКорАналитикаВидаУчета.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрАналитикаУчетаПрочихЗатрат
	|	ПО 
	|		ВыпускПродукции.КорАналитикаВидаУчета = РегистрАналитикаУчетаПрочихЗатрат.Ссылка
	|	
	|	// Аналитика учета затрат (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО 
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат = РегистрКорАналитикаУчетаЗатрат.Ссылка
	|		
	|	// Аналитика учета партий (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрКорАналитикаУчетаПартий
	|	ПО 
	|		ВыпускПродукции.КорАналитикаУчетаПартий = РегистрКорАналитикаУчетаПартий.Ссылка
	|			
	|	// Аналитика распределения затрат (направление выпуска).
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрКорАналитикаРаспределенияЗатрат
	|	ПО 
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат = РегистрКорАналитикаРаспределенияЗатрат.Ссылка
	|
	|	//ДляУпрУчета ЛЕВОЕ СОЕДИНЕНИЕ 
	|	//ДляУпрУчета 	РегистрСведений.УстановкаПроектовДляНоменклатуры.СрезПоследних(&КонДата, 
	|	//ДляУпрУчета		) КАК ПроектыНоменклатуры
	|	//ДляУпрУчета	ПО 
	|	//ДляУпрУчета		РегистрАналитикаРаспределенияЗатрат.Продукция = ПроектыНоменклатуры.НоменклатураПроекта
	|";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаВыпускаПродукции"
	);

КонецПроцедуры // СформироватьВременнуюТаблицуАналитикаВыпускаПродукции()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ КОРРЕКТИРОВКИ УЧЕТНОЙ СТОИМОСТИ ВЫПУСКА ПРОДУКЦИИ

// Функция формирует запрос по регистру "Учет затрат" по разделу учета "Выпуск продукции".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//   Запрос – Запрос по регистру.
//
Функция СформироватьЗапросПриходВыпускПродукции(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляРеглУчета СУММА(
	|	//ДляРеглУчета 	ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Тогда
	|	//ДляРеглУчета 		ВыпускПродукции.СтоимостьНУ
	|	//ДляРеглУчета 	ИНАЧЕ
	|	//ДляРеглУчета 		0
	|	//ДляРеглУчета 	КОНЕЦ
	|	//ДляРеглУчета 	) КАК СтоимостьНУ,
	|	
	|	//ДляУпрУчета 0 КАК НДСВходящий,
	|	//ДляРеглУчета СУММА(
	|	//ДляРеглУчета 	ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Тогда
	|	//ДляРеглУчета 		ВыпускПродукции.НДСВходящий
	|	//ДляРеглУчета 	ИНАЧЕ
	|	//ДляРеглУчета 		0
	|	//ДляРеглУчета 	КОНЕЦ
	|	//ДляРеглУчета 	) КАК НДСВходящий,
	|	
	|	//ДляУпрУчета 0 КАК НДСКредит,
	|	//ДляРеглУчета СУММА(
	|	//ДляРеглУчета 	ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Тогда
	|	//ДляРеглУчета 		ВыпускПродукции.НДСКредит
	|	//ДляРеглУчета 	ИНАЧЕ
	|	//ДляРеглУчета 		0
	|	//ДляРеглУчета 	КОНЕЦ
	|	//ДляРеглУчета 	) КАК НДСКредит,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) Тогда
	|			ВыпускПродукции.Стоимость
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ
	|	) КАК Стоимость
	|ИЗ 
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК ВыпускПродукции
	|
	|ГДЕ
	|	ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|	И ВыпускПродукции.Активность
	|	И ВыпускПродукции.АналитикаВидаУчета В (
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Ссылка
	|		ИЗ
	|			АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	И ВыпускПродукции.КорАналитикаВидаУчета = Неопределено
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий
	|";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);
	
	Возврат Запрос;

КонецФункции // СформироватьЗапросПриходВыпускПродукции()

// Процедура корректировки учетной стоимости выпуска продукции.
//
// Параметры
//  СтруктураШапкиДокумента – Структура – Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
//
Процедура КорректировкаУчетнойСтоимостиВыпускаПродукции(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	)
	
	ЗапросПриходВыпускПродукции = СформироватьЗапросПриходВыпускПродукции(
		СтруктураШапкиДокумента, 
		МенеджерВременныхТаблиц
	);
	РезультатЗапроса = ЗапросПриходВыпускПродукции.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Движения "Приход" по аналитике выпуска.
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчета,
			Неопределено, // АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Неопределено, // Выборка.АналитикаВидаУчета,
			Неопределено, // Выборка.АналитикаУчетаЗатрат,
			Неопределено, // Выборка.АналитикаУчетаПартий,
			Неопределено, // Выборка.АналитикаРаспределенияЗатрат,
			
			ВидДвиженияНакопления.Приход,
			Неопределено, // КодОперации
			0, // Количество
			- Выборка.Стоимость,
			0, // КоличествоНУ
			- Выборка.СтоимостьНУ,
			- Выборка.НДСВходящий,
			- Выборка.НДСКредит,
			СтруктураНаборыЗаписей.УчетЗатрат
		);
		
	КонецЦикла;
	
КонецПроцедуры // КорректировкаУчетнойСтоимостиВыпускаПродукции()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО ВЫПУСКУ УСЛУГ

// Функция возвращает запрос по оказанным услугам в регл. учете
//
// Параметры:
//  Запрос - запрос содержащий менеджер временных таблиц
//  ДатаДокумента - дата, на которую получаются настройки параметров учета
//  Организация - организация по которой рассчитывается себестоимость
//
// Возвращаемое значение:
//   Результат запроса с данными об услугах и параметрах их учета.
//
Функция ПолучитьДанныеПоВыпускУслугРеглУчет(СтруктураШапкиДокумента, Запрос, ДатаДокумента, Организация)	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка
	|
	|ПОМЕСТИТЬ ОтборПоАналитикеВидаУчета
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПрочихЗатрат КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.Организация = &Организация
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка
	|
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаНоменклатуры,
	|	УчетПродажИСебестоимостиОбороты.АналитикаУчетаПартий,
	|	УчетПродажИСебестоимостиОбороты.СхемаРеализации,
	|	УчетПродажИСебестоимостиОбороты.СтавкаНДС,
	|	УчетПродажИСебестоимостиОбороты.НалоговоеНазначение,
	|	УчетПродажИСебестоимостиОбороты.КоличествоОборот
	|
	|ПОМЕСТИТЬ УчетПродажИСебестоимостиОбороты
	|ИЗ
	|	РегистрНакопления.УчетПродажИСебестоимости.Обороты(
	|		&ДатаНачала,
	|		&ДатаОкончания,
	|		,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				ОтборПоАналитикеВидаУчета.Ссылка
	|			ИЗ
	|				ОтборПоАналитикеВидаУчета КАК ОтборПоАналитикеВидаУчета
	|			)
	|		) КАК УчетПродажИСебестоимостиОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(УчетПродажИСебестоимостиОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(УчетПродажИСебестоимостиОбороты.КоличествоОборот) КАК КоличествоНУ,
	|
	|	РегистрАналитикаРаспределенияЗатрат.Продукция КАК Номенклатура,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции КАК ХарактеристикаНоменклатуры,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции КАК СерияНоменклатуры,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция.ВидНоменклатуры КАК ВидНоменклатуры,
	|	РегистрАналитикаУчетаПартий.Заказ КАК Заказ,
	|
	|	УчетПродажИСебестоимостиОбороты.СхемаРеализации КАК СхемаРеализации,
	|	УчетПродажИСебестоимостиОбороты.СхемаРеализации.СчетСебестоимости КАК СчетСебестоимости,
	|	УчетПродажИСебестоимостиОбороты.СхемаРеализации.СубконтоСебестоимости2 КАК Субконто2,
	|	УчетПродажИСебестоимостиОбороты.СхемаРеализации.СубконтоСебестоимости3 КАК Субконто3,
	|
	|	УчетПродажИСебестоимостиОбороты.СтавкаНДС КАК СтавкаНДС,
	|	УчетПродажИСебестоимостиОбороты.НалоговоеНазначение КАК НалоговоеНазначение,
    |
	|	ЕСТЬNULL(РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, Неопределено) КАК Субконто1,
	|	ЕСТЬNULL(РегистрАналитикаВидаУчета.НалоговоеНазначение, Неопределено) КАК НалоговоеНазначениеРеализации
	|
	|ПОМЕСТИТЬ ДанныеНоменклатурыПолная
	|ИЗ
	|	УчетПродажИСебестоимостиОбороты КАК УчетПродажИСебестоимостиОбороты
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|		ПО 
	|			УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|		ПО 
	|			УчетПродажИСебестоимостиОбороты.АналитикаУчетаНоменклатуры = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|			И (РегистрАналитикаРаспределенияЗатрат.Продукция.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрАналитикаУчетаПрочихЗатрат
	|		ПО 
	|			УчетПродажИСебестоимостиОбороты.АналитикаВидаУчета = РегистрАналитикаУчетаПрочихЗатрат.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|		ПО 
	|			УчетПродажИСебестоимостиОбороты.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	УчетПродажИСебестоимостиОбороты.СхемаРеализации,
	|	УчетПродажИСебестоимостиОбороты.СтавкаНДС,
	|	УчетПродажИСебестоимостиОбороты.НалоговоеНазначение,
	|	ЕСТЬNULL(РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, Неопределено),
	|	ЕСТЬNULL(РегистрАналитикаВидаУчета.НалоговоеНазначение, Неопределено)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|УНИЧТОЖИТЬ УчетПродажИСебестоимостиОбороты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеНоменклатурыПолная.Номенклатура КАК Номенклатура,
	|	ДанныеНоменклатурыПолная.ВидНоменклатуры КАК ВидНоменклатуры
	|	
	|ПОМЕСТИТЬ ДанныеНоменклатуры
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатурыПолная";
	
	Запрос.Выполнить();
	
	
	СчетаУчетаВДокументах.СформироватьТаблицуПараметровУчетаУслуг(Запрос.МенеджерВременныхТаблиц, Организация, ДатаДокумента);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеНоменклатуры.Номенклатура КАК Продукция,
	|	ДанныеНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ДанныеНоменклатуры.СерияНоменклатуры КАК СерияПродукции,
	|	ВЫБОР
	|		КОГДА ДанныеНастроекПараметровУчета.ВестиУчетЗатратПоЗаказам
	|			ТОГДА ДанныеНоменклатуры.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ДанныеНоменклатуры.Субконто1 КАК Субконто1,
	|	ДанныеНоменклатуры.НалоговоеНазначениеРеализации КАК НалоговоеНазначениеРеализации,
	|	ДанныеНастроекПараметровУчета.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДанныеНастроекПараметровУчета.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ДанныеНастроекПараметровУчета.СчетЗатрат КАК СчетУчетаЗатрат,
	|	ДанныеНоменклатуры.СчетСебестоимости КАК СчетСебестоимости,
	|	ДанныеНоменклатуры.Субконто2 КАК Субконто2,
	|	ДанныеНоменклатуры.Субконто3 КАК Субконто3,
	|	ДанныеНоменклатуры.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск) КАК РазделУчета,
	|	ДанныеНоменклатуры.Количество КАК Количество,
	|	ДанныеНоменклатуры.КоличествоНУ КАК КоличествоНУ,
	|	ДанныеНастроекПараметровУчета.НоменклатураНастройки,
	|	ДанныеНастроекПараметровУчета.НомерСтроки,
	|	ДанныеНастроекПараметровУчета.Организация,
	|	ДанныеНастроекПараметровУчета.Приоритет
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеНастроекПараметровУчета КАК ДанныеНастроекПараметровУчета
	|		ПО (ДанныеНастроекПараметровУчета.Номенклатура = ДанныеНоменклатуры.Номенклатура)
	|ГДЕ
	|	ДанныеНастроекПараметровУчета.СчетЗатрат В ИЕРАРХИИ(&КалькуляционныеСчета)";
	
	КалькуляционныеСчета = Новый Массив(); // Счета, на которых рассчитывается себестоимость
	КалькуляционныеСчета.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	КалькуляционныеСчета.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	КалькуляционныеСчета.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);
	Запрос.УстановитьПараметр("КалькуляционныеСчета", КалькуляционныеСчета);
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеПоВыпускУслугРеглУчет

// Функция возвращает запрос по оказанным услугам в упр. учете
//
// Параметры:
//  Запрос - запрос содержащий менеджер временных таблиц
//  ДатаДокумента - дата, на которую получаются настройки параметров учета
//
// Возвращаемое значение:
//   Результат запроса с данными об услугах и параметрах их учета.
//
Функция ПолучитьДанныеПоВыпускУслугУпрУчет(СтруктураШапкиДокумента, Запрос, ДатаДокумента)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажиОбороты.Номенклатура КАК Номенклатура,
	|	ПродажиОбороты.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ПродажиОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПродажиОбороты.ЗаказПокупателя КАК Заказ,
	|	ПродажиОбороты.КоличествоОборот КАК Количество,
	|	0 КАК КоличествоНУ
	|ПОМЕСТИТЬ ДанныеНоменклатурыПолная
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, , Номенклатура.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК ПродажиОбороты
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеНоменклатурыПолная.Номенклатура КАК Номенклатура,
	|	ДанныеНоменклатурыПолная.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ДанныеНоменклатуры
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатурыПолная";
	
	Запрос.Выполнить();
	
	
	СчетаУчетаВДокументах.СформироватьТаблицуПараметровУчетаУслуг(Запрос.МенеджерВременныхТаблиц, Справочники.Организации.ПустаяСсылка(), ДатаДокумента);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеНоменклатуры.Номенклатура КАК Продукция,
	|	ДанныеНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК СерияПродукции,
	|	ДанныеНастроекПараметровУчета.Подразделение КАК Подразделение,
	|	ДанныеНастроекПараметровУчета.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА ДанныеНастроекПараметровУчета.ВестиУчетЗатратПоЗаказам
	|			ТОГДА ДанныеНоменклатуры.Заказ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ КАК Заказ,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск) КАК РазделУчета,
	|	ДанныеНоменклатуры.Количество КАК Количество,
	|	ДанныеНоменклатуры.КоличествоНУ КАК КоличествоНУ,
	|	ДанныеНастроекПараметровУчета.НоменклатураНастройки,
	|	ДанныеНастроекПараметровУчета.НомерСтроки,
	|	ДанныеНастроекПараметровУчета.Организация,
	|	ДанныеНастроекПараметровУчета.Приоритет
	|ИЗ
	|	ДанныеНоменклатурыПолная КАК ДанныеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеНастроекПараметровУчета КАК ДанныеНастроекПараметровУчета
	|		ПО (ДанныеНастроекПараметровУчета.Номенклатура = ДанныеНоменклатуры.Номенклатура)
	|ГДЕ
	|	ДанныеНастроекПараметровУчета.Подразделение.ВидПодразделения В(&ПроизводственныеПодразделения)";
	
	ПроизводственныеПодразделения = Новый Массив; // Виды подразделений, в которых рассчитываем себестоимость
	ПроизводственныеПодразделения.Добавить(Перечисления.ВидыПодразделений.ОсновноеПроизводство);
	ПроизводственныеПодразделения.Добавить(Перечисления.ВидыПодразделений.ВспомогательноеПроизводство);
	
	Запрос.УстановитьПараметр("ПроизводственныеПодразделения", ПроизводственныеПодразделения);
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеПоВыпускУслугУпрУчет

// Формирует движения по выпуску производственных услуг
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура СформироватьДвиженияПоВыпускуУслуг(СтруктураШапкиДокумента)
	
	СтруктураНаборыЗаписей  = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);
	СтруктураКлючиАналитики = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",	СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаНачала",		СтруктураШапкиДокумента.мНачГраница);
	Запрос.УстановитьПараметр("ДатаОкончания",	СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("Дата",			СтруктураШапкиДокумента.Период);
	
	Если СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
		Результат = ПолучитьДанныеПоВыпускУслугУпрУчет(СтруктураШапкиДокумента, Запрос, СтруктураШапкиДокумента.Период);
	Иначе
		Результат = ПолучитьДанныеПоВыпускУслугРеглУчет(СтруктураШапкиДокумента, Запрос, СтруктураШапкиДокумента.Период, СтруктураШапкиДокумента.Организация);
	КонецЕсли;	
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтруктраАналитикиВидаУчета = Новый Структура;
			СтруктраАналитикиВидаУчета.Вставить("РазделУчета", Перечисления.РазделыУчета.Выпуск);
						
			Если СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
				СтруктраАналитикиВидаУчета.Вставить("Подразделение",			Выборка.Подразделение);
			Иначе
				СтруктраАналитикиВидаУчета.Вставить("Организация",				СтруктураШапкиДокумента.Организация); 
				СтруктраАналитикиВидаУчета.Вставить("СчетУчета",				Выборка.СчетУчетаЗатрат);
				СтруктраАналитикиВидаУчета.Вставить("НалоговоеНазначение",		Выборка.НалоговоеНазначение);
				СтруктраАналитикиВидаУчета.Вставить("ПодразделениеОрганизации",	Выборка.ПодразделениеОрганизации);
			КонецЕсли;	
			
			АналитикаВидаУчетаИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				СтруктраАналитикиВидаУчета,
				Перечисления.КлючиАналитики.АналитикаВидаУчета,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);
			АналитикаУчетаЗатратИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);
			АналитикаУчетаПартийИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаУчетаПартий,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);
			АналитикаРаспределенияЗатратИсточник = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаРаспределенияЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);
			
			СтруктраАналитикиПрочихЗатратПолучатель = Новый Структура;
			
			Если СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
				
			Иначе	
				СтруктраАналитикиПрочихЗатратПолучатель.Вставить("Организация", 		СтруктураШапкиДокумента.Организация); 
				СтруктраАналитикиПрочихЗатратПолучатель.Вставить("СчетУчета",			Выборка.СчетСебестоимости);
				СтруктраАналитикиПрочихЗатратПолучатель.Вставить("НалоговоеНазначение",	Выборка.НалоговоеНазначениеРеализации); 
				СтруктраАналитикиПрочихЗатратПолучатель.Вставить("Субконто1",			Выборка.Субконто1); 
				СтруктраАналитикиПрочихЗатратПолучатель.Вставить("Субконто2",			Выборка.Субконто2); 
				СтруктраАналитикиПрочихЗатратПолучатель.Вставить("Субконто3",			Выборка.Субконто3); 
				
			КонецЕсли;	
			
			АналитикаУчетаПрочихЗатратПолучатель = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			  	СтруктураШапкиДокумента,
				СтруктраАналитикиПрочихЗатратПолучатель,
			  	Перечисления.КлючиАналитики.АналитикаУчетаПрочихЗатрат,
			  	СтруктураШапкиДокумента.ВидОтраженияВУчете,
			 	СтруктураКлючиАналитики
			);
			
			  РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
				СтруктураШапкиДокумента,
				АналитикаВидаУчетаИсточник, // АналитикаВидаУчета
				АналитикаУчетаЗатратИсточник, // АналитикаУчетаЗатрат
				АналитикаУчетаПартийИсточник, // АналитикаУчетаПартий
				АналитикаРаспределенияЗатратИсточник, // АналитикаУчетаВыпуска
				АналитикаУчетаПрочихЗатратПолучатель, // КорАналитикаВидаУчета
				Неопределено, // КорАналитикаУчетаЗатрат
				Неопределено, // КорАналитикаУчетаПартий
				Неопределено, // КорАналитикаУчетаВыпуска
				ВидДвиженияНакопления.Расход,
				Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнешниеУслуги,
				Выборка.Количество,
				0, // Стоимость
				Выборка.КоличествоНУ,
				0, // СтоимостьНУ
				0, // НДСВходящий
				0, // НДСКредит
				СтруктураНаборыЗаписей.УчетЗатрат
			);
			
			  РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
				СтруктураШапкиДокумента,
				АналитикаВидаУчетаИсточник, // АналитикаВидаУчета
				АналитикаУчетаЗатратИсточник, // АналитикаУчетаЗатрат
				АналитикаУчетаПартийИсточник, // АналитикаУчетаПартий
				АналитикаРаспределенияЗатратИсточник, // АналитикаУчетаВыпуска
				Неопределено, // КорАналитикаВидаУчета
				Неопределено, // КорАналитикаУчетаЗатрат
				Неопределено, // КорАналитикаУчетаПартий
				Неопределено, // КорАналитикаУчетаВыпуска
				ВидДвиженияНакопления.Приход,
				Неопределено,
				Выборка.Количество,
				0, // Стоимость
				Выборка.КоличествоНУ,
				0, // СтоимостьНУ
				0, // НДСВходящий
				0, // НДСКредит
				СтруктураНаборыЗаписей.УчетЗатрат			
			 );
		
		КонецЦикла;
		
	КонецЕсли;	
	
	Если СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность() Тогда
		СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры // СформироватьДвиженияПоВыпускуУслуг

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПЕРЕНОСА ЗАТРАТ НА ВЫПУСК ПРОДУКЦИИ

// Функция формирует запрос по регистру "Учет затрат" по разделу учета "Затраты на выпуск.
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//   Запрос – Запрос по регистрам "Выпуск продукции" и "Затраты на выпуск продукции".
//
Функция СформироватьЗапросОстаткиЗатратНаВыпуск(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапросаСКомментариями =
	"ВЫБРАТЬ
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|	РегистрАналитикаВидаУчета.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Ссылка
	|	
	|ПОМЕСТИТЬ АналитикаВидаУчетаЗатратыПоВыпускуНаработке
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|ГДЕ
	|	(РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|		ИЛИ РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке))
	|	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = &Организация
	|;
	|
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|
	|	//ДляРеглУчета УчетЗатрат.КоличествоНУОстаток КАК КоличествоНУ,
	|	//ДляРеглУчета УчетЗатрат.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	//ДляРеглУчета УчетЗатрат.НДСВходящийОстаток КАК НДСВходящий,
	|	//ДляРеглУчета УчетЗатрат.НДСКредитОстаток КАК НДСКредит,
	|	
	|	УчетЗатрат.КоличествоОстаток КАК Количество,
	|	УчетЗатрат.СтоимостьОстаток КАК Стоимость
	|
	|ПОМЕСТИТЬ УчетЗатратОстатки
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(&КонГраница,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				Ссылка
	|			ИЗ  
	|				АналитикаВидаУчетаЗатратыПоВыпускуНаработке
	|			)
	|	) КАК УчетЗатрат
	|;
	|
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|
	|	ВыпускПродукции.АналитикаВидаУчета КАК АналитикаВидаУчетаВыпуск,
	|	ВыпускПродукции.АналитикаУчетаПартий КАК АналитикаУчетаПартийВыпуск,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат КАК АналитикаРаспределенияЗатратВыпуск,
	|	
	|	// Аналитика вида учета.
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|	
	|	//ДляУпрУчета 0 КАК КоличествоНУ,
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляУпрУчета 0 КАК НДСВходящий,
	|	//ДляУпрУчета 0 КАК НДСКредит,
	|
	|	//ДляРеглУчета УчетЗатрат.КоличествоНУ,
	|	//ДляРеглУчета УчетЗатрат.СтоимостьНУ,
	|	//ДляРеглУчета УчетЗатрат.НДСВходящий,
	|	//ДляРеглУчета УчетЗатрат.НДСКредит,
	|
	|	ВыпускПродукции.Количество КАК КоличествоВыпуск,
	|
	|	УчетЗатрат.Количество,
	|	УчетЗатрат.Стоимость
	|ИЗ
	|	УчетЗатратОстатки КАК УчетЗатрат
	|		 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		АналитикаВидаУчетаЗатратыПоВыпускуНаработке КАК РегистрАналитикаВидаУчета 
	|	ПО 
	|		УчетЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО 
	|		УчетЗатрат.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВыпускПродукции КАК ВыпускПродукции
	|	ПО
	|		УчетЗатрат.АналитикаУчетаПартий = ВыпускПродукции.АналитикаУчетаПартий
	|		И УчетЗатрат.АналитикаРаспределенияЗатрат = ВыпускПродукции.АналитикаРаспределенияЗатрат
	|		И РегистрАналитикаВидаУчета.РазделУчета = ВыпускПродукции.РазделУчетаЗатрат
	|		И РегистрАналитикаВидаУчета.Организация = ВыпускПродукции.Организация
	|		И РегистрАналитикаВидаУчета.Подразделение = ВыпускПродукции.Подразделение
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчета = ВыпускПродукции.СчетУчета
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.НалоговоеНазначение = ВыпускПродукции.НалоговоеНазначение
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АналитикаВидаУчетаЗатратыПоВыпускуНаработке
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетЗатратОстатки";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачГраница", СтруктураШапкиДокумента.мНачГраница);
	Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	
	Возврат Запрос;

КонецФункции // СформироватьЗапросОстаткиЗатратНаВыпуск()

// Процедура переноса затрат на себестоимость выпуска продукции.
//
// Параметры
//  СтруктураШапкиДокумента – Структура – Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
//
Процедура ПереносЗатратНаВыпускПродукции(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	)
	
	ЗапросОстаткиЗатратНаВыпуск = СформироватьЗапросОстаткиЗатратНаВыпуск(
		СтруктураШапкиДокумента, 
		МенеджерВременныхТаблиц
	);
	РезультатЗапросаОстаткиЗатрат = ЗапросОстаткиЗатратНаВыпуск.Выполнить();
	Если РезультатЗапросаОстаткиЗатрат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапросаОстаткиЗатрат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Движения "Расход" по исходной аналитике.
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Выборка.АналитикаВидаУчетаВыпуск,
			Неопределено, // КорАналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартийВыпуск,
			Выборка.АналитикаРаспределенияЗатратВыпуск,
			
			ВидДвиженияНакопления.Расход,
			Неопределено, // КодОперации
			Выборка.Количество,
			Выборка.Стоимость,
			Выборка.КоличествоНУ,
			Выборка.СтоимостьНУ,
			Выборка.НДСВходящий,
			Выборка.НДСКредит,
			СтруктураНаборыЗаписей.УчетЗатрат
		);
		
		// Движения "Приход" по аналитике выпуска.
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчетаВыпуск,
			Неопределено, // АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартийВыпуск,
			Выборка.АналитикаРаспределенияЗатратВыпуск,
			
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			ВидДвиженияНакопления.Приход,
			Неопределено, // КодОперации
			0, // Количество
			Выборка.Стоимость,
			0, // КоличествоНУ
			Выборка.СтоимостьНУ,
			Выборка.НДСВходящий,
			Выборка.НДСКредит,
			СтруктураНаборыЗаписей.УчетЗатрат
		);
		
	КонецЦикла;
	
	Если СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность() Тогда
		СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры // ПереносЗатратНаВыпускПродукции()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАСЧЕТА СЕБЕСТОИМОСТИ ПО ПРЯМЫМ ЗАТРАТАМ

// Процедура производит расчет фактической себестоимости выпуска.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	ТаблицаОшибок - ТаблицаЗначений - Таблица ошибок
//
Функция РасчетФактическойСебестоимостиВыпуска(	
	СтруктураШапкиДокумента,
	ТаблицаОшибок,
	ОперацияРасчетаСебестоимостиВыпуска = Неопределено
	)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
	СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);
	
	Если СтруктураНаборыЗаписей.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	СформироватьВременнуюТаблицуВыпускПродукцииИУслуг(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	КорректировкаУчетнойСтоимостиВыпускаПродукции(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		СтруктураНаборыЗаписей
	);
	
	ПереносЗатратНаВыпускПродукции(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		СтруктураНаборыЗаписей
	);
	
	БылиКорректировкиНУ = КорректировкаСтоимостиУчетЗатрат.КорректировкаСписанияУчетЗатрат(
		СтруктураШапкиДокумента.мНачДата, 
		СтруктураШапкиДокумента.мКонДата, 
		СтруктураШапкиДокумента.Ссылка,
		Неопределено, // ОтборПоАналитикеВидовУчета
		ОперацияРасчетаСебестоимостиВыпуска
	);
	
	Возврат БылиКорректировкиНУ;
	
КонецФункции // РасчетФактическойСебестоимостиВыпуска()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАСПРЕДЕЛЕНИЯ РАСХОДОВ ПО БАЗЕ РАСПРЕДЕЛЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ФОРМИРОВАНИЯ ЗАПРОСА ПО РЕГИСТРУ "ЗАТРАТЫ"

// Процедура формирования временной таблицы "АналитикаВидаУчетаЗатраты".
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СформироватьВременнуюТаблицуАналитикаВидаУчетаЗатраты(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)

	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	РегистрАналитикаВидаУчета.Ссылка
	|
	|ПОМЕСТИТЬ АналитикаВидаУчетаЗатраты
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|ГДЕ
	|	РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = &Организация
	|";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"АналитикаВидаУчетаЗатраты"
	);

КонецПроцедуры // СформироватьВременнуюТаблицуАналитикаВидаУчетаЗатраты()

// Подготавливает временную таблицу "Инвентаризация", которая содержит данные документов
// "ИнвентаризацияНЗП", "ИнвентаризацияБракаВПроизводстве" о затратах, которые следует оставить
// на конец месяца (не распределять на выпуск).
Процедура СформироватьВременнуюТаблицуИнвентаризация(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц	
	)
	
	// Поместим данные документов инвентаризации во временную таблицу
	// Кроме того, получим сводные таблицы подразделений организации и счетов затрат
	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ 
	|		Ссылка,
	|		ХарактерЗатрат,
	|		Организация,
	|		Подразделение,
	|		ПодразделениеОрганизации,
	|
	|		СчетЗатрат,
	|		НалоговоеНазначение,
	|
	|		Затрата,
	|		ХарактеристикаЗатраты,
	|		СерияЗатраты,
	|		
	|		СпособРаспределенияЗатрат,
	|		
	|		НоменклатурнаяГруппаНоменклатуры,
	|		СтатьяЗатратНоменклатуры,
	|		
	|		НоменклатурнаяГруппа,
	|		СтатьяЗатрат,
	|		Заказ,
	|		
	|		Продукция,
	|		ХарактеристикаПродукции,
	|		СерияПродукции,
	|		СУММА(Количество) КАК Количество,
	|		СУММА(Сумма)      КАК Сумма,
	|		СУММА(НДСВходящий)  КАК НДСВходящий,	
	|		СУММА(НДСКредит)    КАК НДСКредит,	
	|		СУММА(СуммаНал)   КАК СуммаНал
	|ПОМЕСТИТЬ ДокументыИнвентаризации
	|ИЗ (
	|ВЫБРАТЬ
	|		ИнвентаризацияМатериалы.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ПроизводственныеРасходы) КАК ХарактерЗатрат,
	|		ИнвентаризацияМатериалы.Ссылка.Организация КАК Организация,
	|		ИнвентаризацияМатериалы.Ссылка.Подразделение КАК Подразделение,
	|		ИнвентаризацияМатериалы.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|		ИнвентаризацияМатериалы.СчетЗатрат,
	|		ИнвентаризацияМатериалы.НалоговоеНазначение КАК НалоговоеНазначение,
	|
	|		ИнвентаризацияМатериалы.Номенклатура КАК Затрата,
	|		ВЫБОР КОГДА 
	|			//ДляУпрУчета НастройкиАналитикиУчетаХарактеристика.УправленческийУчет
	|			//ДляРеглУчета НастройкиАналитикиУчетаХарактеристика.РегламентированныйУчет
	|		ТОГДА
	|			ИнвентаризацияМатериалы.ХарактеристикаНоменклатуры
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	
	|		КОНЕЦ КАК ХарактеристикаЗатраты,
	|		ВЫБОР КОГДА 
	|			//ДляУпрУчета НастройкиАналитикиУчетаСерия.УправленческийУчет
	|			//ДляРеглУчета НастройкиАналитикиУчетаСерия.РегламентированныйУчет
	|		ТОГДА
	|			ИнвентаризацияМатериалы.СерияНоменклатуры
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)	
	|		КОНЕЦ КАК СерияЗатраты,
	|		
	|		ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатрат,
	|		
	|		ИнвентаризацияМатериалы.Номенклатура.НоменклатурнаяГруппаЗатрат КАК НоменклатурнаяГруппаНоменклатуры,
	|		ИнвентаризацияМатериалы.Номенклатура.СтатьяЗатрат 				КАК СтатьяЗатратНоменклатуры,
	|		
	|		ИнвентаризацияМатериалы.НоменклатурнаяГруппа,
	|		ИнвентаризацияМатериалы.СтатьяЗатрат,
	|		ВЫБОР КОГДА ИнвентаризацияМатериалы.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ИнвентаризацияМатериалы.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ИнвентаризацияМатериалы.Заказ
	|		КОНЕЦ КАК Заказ,
	|		
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПродукции,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияПродукции,
	|
	|		ИнвентаризацияМатериалы.Количество * 
	|			ИнвентаризацияМатериалы.Коэффициент /
	|			ИнвентаризацияМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|		КАК Количество,
	|		0 КАК Сумма,
	|		0 КАК НДСВходящий,
	|		0 КАК НДСКредит,
	|		0 КАК СуммаНал
	|		
	|	ИЗ
	|		Документ.ИнвентаризацияНЗП.Материалы КАК ИнвентаризацияМатериалы
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиАналитикиУчета КАК НастройкиАналитикиУчетаХарактеристика
	|	ПО
	|		НастройкиАналитикиУчетаХарактеристика.Ссылка = ЗНАЧЕНИЕ(Справочник.НастройкиАналитикиУчета.ХарактеристикаЗатраты)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.НастройкиАналитикиУчета КАК НастройкиАналитикиУчетаСерия
	|	ПО
	|		НастройкиАналитикиУчетаСерия.Ссылка = ЗНАЧЕНИЕ(Справочник.НастройкиАналитикиУчета.СерияЗатраты)
	|	
	|	ГДЕ
	|		ИнвентаризацияМатериалы.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Не ИнвентаризацияМатериалы.Ссылка.ПометкаУдаления
	|		//ДляУпрУчета И ИнвентаризацияМатериалы.Ссылка.ОтражатьВУправленческомУчете
	|		//ДляРеглУчета И ИнвентаризацияМатериалы.Ссылка.ОтражатьВБухгалтерскомУчете
	|		//ДляРеглУчета И ИнвентаризацияМатериалы.Ссылка.Организация = &Организация
	|			
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнвентаризацияПрочие.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ПроизводственныеРасходы) КАК ХарактерЗатрат,
	|		ИнвентаризацияПрочие.Ссылка.Организация,
	|		ИнвентаризацияПрочие.Ссылка.Подразделение,
	|		ИнвентаризацияПрочие.Ссылка.ПодразделениеОрганизации,
	|
	|		ИнвентаризацияПрочие.СчетЗатрат,
	|		ИнвентаризацияПрочие.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначение,
	|
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Затрата,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаЗатраты,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияЗатраты,
	|		ИнвентаризацияПрочие.СпособРаспределенияЗатратНаВыпуск КАК СпособРаспределенияЗатрат,
	
	|		ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
	
	
	|		ИнвентаризацияПрочие.НоменклатурнаяГруппа,
	|		ИнвентаризацияПрочие.СтатьяЗатрат,
	|		ВЫБОР КОГДА ИнвентаризацияПрочие.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ИнвентаризацияПрочие.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ИнвентаризацияПрочие.Заказ
	|		КОНЕЦ КАК Заказ,
	|		
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПродукции,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияПродукции,
	|
	|		0 КАК Количество,
	|		//ДляУпрУчета ИнвентаризацияПрочие.Сумма КАК Сумма,
	|		//ДляУпрУчета 0 КАК НДСВходящий,
	|		//ДляУпрУчета 0 КАК НДСКредит,
	|		//ДляУпрУчета 0 КАК СуммаНал
	|		//ДляРеглУчета ИнвентаризацияПрочие.СуммаРегл КАК Сумма,
	|		//ДляРеглУчета ИнвентаризацияПрочие.СуммаНДС КАК НДСВходящий,
	|		//ДляРеглУчета ИнвентаризацияПрочие.СуммаНДСКредит КАК НДСКредит,
	|		//ДляРеглУчета ИнвентаризацияПрочие.СуммаНал КАК СуммаНал
	|	ИЗ
	|		Документ.ИнвентаризацияНЗП.ПрочиеЗатраты КАК ИнвентаризацияПрочие
	|		
	|	ГДЕ
	|		ИнвентаризацияПрочие.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Не ИнвентаризацияПрочие.Ссылка.ПометкаУдаления
	|		//ДляУпрУчета И ИнвентаризацияПрочие.Ссылка.ОтражатьВУправленческомУчете
	|		//ДляРеглУчета И ИнвентаризацияПрочие.Ссылка.ОтражатьВБухгалтерскомУчете
	|		//ДляРеглУчета И ИнвентаризацияПрочие.Ссылка.Организация = &Организация
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнвентаризацияБрак.Ссылка,
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.БракВПроизводстве) КАК ХарактерЗатрат,
	|		ИнвентаризацияБрак.Ссылка.Организация,
	|		ИнвентаризацияБрак.Ссылка.Подразделение,
	|		ИнвентаризацияБрак.Ссылка.ПодразделениеОрганизации,
	|
	|		ИнвентаризацияБрак.СчетЗатрат,
	|		ИнвентаризацияБрак.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначение,
	|
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Затрата,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаЗатраты,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияЗатраты,
	|		ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатрат,
	
	|		ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
	
	|		ИнвентаризацияБрак.НоменклатурнаяГруппа,
	|		ИнвентаризацияБрак.СтатьяЗатрат,
	|		ВЫБОР КОГДА ИнвентаризацияБрак.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ИЛИ ИнвентаризацияБрак.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|		ТОГДА
	|			Неопределено
	|		ИНАЧЕ
	|			ИнвентаризацияБрак.Заказ
	|		КОНЕЦ КАК Заказ,
	|		
	|		ИнвентаризацияБрак.Продукция,
	|		ИнвентаризацияБрак.ХарактеристикаПродукции,
	|		ИнвентаризацияБрак.СерияПродукции,
	|
	|		0 КАК Количество,
	|		//ДляУпрУчета ИнвентаризацияБрак.Сумма КАК Сумма,
	|		//ДляУпрУчета 0 КАК НДСВходящий,
	|		//ДляУпрУчета 0 КАК НДСКредит,
	|		//ДляУпрУчета 0 КАК СуммаНал
	|		//ДляРеглУчета ИнвентаризацияБрак.СуммаРегл КАК Сумма,
	|		//ДляРеглУчета ИнвентаризацияБрак.СуммаНДС КАК НДСВходящий,
	|		//ДляРеглУчета ИнвентаризацияБрак.СуммаНДСКредит КАК НДСКредит,
	|		//ДляРеглУчета ИнвентаризацияБрак.СуммаНал КАК СуммаНал
	|	ИЗ
	|		Документ.ИнвентаризацияБракаВПроизводстве.ЗатратыПоБракуВПроизводстве КАК ИнвентаризацияБрак
	|		
	|	ГДЕ
	|		ИнвентаризацияБрак.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Не ИнвентаризацияБрак.Ссылка.ПометкаУдаления
	|		//ДляУпрУчета И ИнвентаризацияБрак.Ссылка.ОтражатьВУправленческомУчете
	|		//ДляРеглУчета И ИнвентаризацияБрак.Ссылка.ОтражатьВБухгалтерскомУчете
	|		//ДляРеглУчета И ИнвентаризацияБрак.Ссылка.Организация = &Организация
	|) КАК Инвентаризация
	|СГРУППИРОВАТЬ ПО
	|		Ссылка,
	|		ХарактерЗатрат,
	|		Организация,
	|		Подразделение,
	|		ПодразделениеОрганизации,
	|
	|		СчетЗатрат,
	|		НалоговоеНазначение,
	|
	|		Затрата,
	|		ХарактеристикаЗатраты,
	|		СерияЗатраты,
	|		
	|		СпособРаспределенияЗатрат,
	|		
	|		НоменклатурнаяГруппаНоменклатуры,
	|		СтатьяЗатратНоменклатуры,
	|		
	|		НоменклатурнаяГруппа,
	|		СтатьяЗатрат,
	|		Заказ,
	|		
	|		Продукция,
	|		ХарактеристикаПродукции,
	|		СерияПродукции;
	|//////////////////////////////////////////////////////////////////////////////////
	|// В таблице не должно быть записей с повторяющимися значениями поля Ссылка
	|//ДляРеглУчета ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|//ДляРеглУчета		Ссылка,
	|//ДляРеглУчета		Организация,
	|//ДляРеглУчета		Подразделение,
	|//ДляРеглУчета		ХарактерЗатрат // Характер затрат определяется по виду документа, может принимать значения ПроизводственныеРасходы или БракВПроизводстве
	|//ДляРеглУчета ИЗ ДокументыИнвентаризации КАК ДокументыИнвентаризации
	|//ДляРеглУчета ГДЕ ПодразделениеОрганизации = Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) 
	|//ДляРеглУчета 	ИЛИ СчетЗатрат   = Значение(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|//ДляРеглУчета 	ИЛИ НалоговоеНазначение = Значение(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачДата",                 СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата",                 СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("Организация",             СтруктураШапкиДокумента.Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ДокументыИнвентаризации"
	);
	
	СведенияОтражениеВРеглУчете = Новый ТаблицаЗначений();
	СведенияОтражениеВРеглУчете.Колонки.Добавить("Ссылка",                   Новый ОписаниеТипов("ДокументСсылка.ИнвентаризацияНЗП, ДокументСсылка.ИнвентаризацияБракаВПроизводстве"));
	СведенияОтражениеВРеглУчете.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	СведенияОтражениеВРеглУчете.Колонки.Добавить("СчетЗатрат",               Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	СведенияОтражениеВРеглУчете.Колонки.Добавить("НалоговоеНазначение",      Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат"));
	ПустаяСтатьяЗатрат = Справочники.СтатьиЗатрат.ПустаяСсылка(); 
	
	Если СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете Тогда
		
		// Для регламентированного учета получим данные о подразделении организации и счетах учета
		ВыборкаНеЗаполненыДанныеРеглУчета = РезультатЗапроса.Выбрать(); // Второй запрос в пакете содержит таблицу не заполненных данных регл. учета
		Пока ВыборкаНеЗаполненыДанныеРеглУчета.Следующий() Цикл
			
			НоваяСтрока = СведенияОтражениеВРеглУчете.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНеЗаполненыДанныеРеглУчета);
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.ПодразделениеОрганизации) Тогда
				// Определим подразделение организации
				НоваяСтрока.ПодразделениеОрганизации = УправлениеЗатратами.ПолучитьПодразделениеОрганизации(ВыборкаНеЗаполненыДанныеРеглУчета.Организация, ВыборкаНеЗаполненыДанныеРеглУчета.Подразделение, Истина);
			КонецЕсли;	
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.ПодразделениеОрганизации) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СчетЗатрат) Тогда
				// Определим счета учета
				Если ВыборкаНеЗаполненыДанныеРеглУчета.ХарактерЗатрат = Перечисления.ХарактерЗатрат.БракВПроизводстве Тогда
					НоваяСтрока.СчетЗатрат = ПланыСчетов.Хозрасчетный.БракВПроизводстве;
				Иначе
					СчетаУчета = УправлениеЗатратами.ПолучитьСчетаУчетаСтатьиЗатрат(НоваяСтрока.ПодразделениеОрганизации, Неопределено);
					НоваяСтрока.СчетЗатрат = СчетаУчета.СчетУчетаБУ;
				КонецЕсли;
			КонецЕсли;	
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СчетЗатрат) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.НалоговоеНазначение) Тогда
				НоваяСтрока.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая; 
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Дополним таблицу инвентаризации
	ТекстЗапросаСКомментариями = "
	|// Помещаем данные таблицы значений во временную таблицу
	|ВЫБРАТЬ 
	|	Ссылка,
	|	ПодразделениеОрганизации,
	|	СчетЗатрат,
	|	НалоговоеНазначение 
	|ПОМЕСТИТЬ СведенияОтражениеВРеглУчете
	|ИЗ &СведенияОтражениеВРеглУчете КАК СведенияОтражениеВРеглУчете;
	|////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|		ДокументыИнвентаризации.ХарактерЗатрат,
	|		ДокументыИнвентаризации.Организация,
	|		ДокументыИнвентаризации.Подразделение,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.ПодразделениеОрганизации = Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		И НЕ СведенияОтражениеВРеглУчете.ПодразделениеОрганизации ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.ПодразделениеОрганизации
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.ПодразделениеОрганизации
	|		КОНЕЦ КАК ПодразделениеОрганизации,
	|
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СчетЗатрат = Значение(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.СчетЗатрат ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.СчетЗатрат
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СчетЗатрат
	|		КОНЕЦ КАК СчетЗатрат,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.НалоговоеНазначение = Значение(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.НалоговоеНазначение IS NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.НалоговоеНазначение
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.НалоговоеНазначение
	|		КОНЕЦ КАК НалоговоеНазначение,
	|
	|		ДокументыИнвентаризации.Затрата,
	|		ДокументыИнвентаризации.ХарактеристикаЗатраты,
	|		ДокументыИнвентаризации.СерияЗатраты,
	|		
	|		ДокументыИнвентаризации.СпособРаспределенияЗатрат,
	|		
	|		ВЫБОР КОГДА ДокументыИнвентаризации.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.НоменклатурнаяГруппа
	|		КОНЕЦ КАК НоменклатурнаяГруппа,
	
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.СтатьяЗатратНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.СтатьяЗатратНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СтатьяЗатрат
	|		КОНЕЦ КАК СтатьяЗатрат,
	
	|		ДокументыИнвентаризации.Заказ,
	|		
	|		ДокументыИнвентаризации.Продукция,
	|		ДокументыИнвентаризации.ХарактеристикаПродукции,
	|		ДокументыИнвентаризации.СерияПродукции,
	|		СУММА(ДокументыИнвентаризации.Количество) КАК Количество,
	|		СУММА(ДокументыИнвентаризации.Сумма)      КАК Сумма,
	|		СУММА(ДокументыИнвентаризации.НДСВходящий) КАК НДСВходящий,
	|		СУММА(ДокументыИнвентаризации.НДСКредит)   КАК НДСКредит,
	|		СУММА(ДокументыИнвентаризации.СуммаНал)   КАК СуммаНал
	|ПОМЕСТИТЬ ДанныеИнвентаризации
	|ИЗ ДокументыИнвентаризации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	СведенияОтражениеВРеглУчете
	|ПО 
	|	ДокументыИнвентаризации.Ссылка = СведенияОтражениеВРеглУчете.Ссылка
	|СГРУППИРОВАТЬ ПО 
	|		ДокументыИнвентаризации.ХарактерЗатрат,
	|		ДокументыИнвентаризации.Организация,
	|		ДокументыИнвентаризации.Подразделение,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.ПодразделениеОрганизации = Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		И НЕ СведенияОтражениеВРеглУчете.ПодразделениеОрганизации ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.ПодразделениеОрганизации
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.ПодразделениеОрганизации
	|		КОНЕЦ,
	|
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СчетЗатрат = Значение(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.СчетЗатрат ЕСТЬ NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.СчетЗатрат
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СчетЗатрат
	|		КОНЕЦ,
	|		ВЫБОР КОГДА ДокументыИнвентаризации.НалоговоеНазначение = Значение(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) 
	|		И НЕ СведенияОтражениеВРеглУчете.НалоговоеНазначение IS NULL ТОГДА
	|			СведенияОтражениеВРеглУчете.НалоговоеНазначение
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.НалоговоеНазначение
	|		КОНЕЦ,
	|
	|		Затрата,
	|		ХарактеристикаЗатраты,
	|		СерияЗатраты,
	|		
	|		СпособРаспределенияЗатрат,
	|		
	|		ВЫБОР КОГДА ДокументыИнвентаризации.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.НоменклатурнаяГруппаНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.НоменклатурнаяГруппа
	|		КОНЕЦ,
	
	|		ВЫБОР КОГДА ДокументыИнвентаризации.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) 
	|		И НЕ ДокументыИнвентаризации.СтатьяЗатратНоменклатуры ЕСТЬ NULL ТОГДА
	|			ДокументыИнвентаризации.СтатьяЗатратНоменклатуры
	|		ИНАЧЕ
	|			ДокументыИнвентаризации.СтатьяЗатрат
	|		КОНЕЦ,
	|		Заказ,
	|		
	|		Продукция,
	|		ХарактеристикаПродукции,
	|		СерияПродукции;
	|//////////////////////////////////////////////////////////////////////////
	|// Получим значения ключей аналитики учета
	|ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.Ссылка КАК АналитикаВидаУчета,
	|	РегистрАналитикаУчетаЗатрат.Ссылка КАК АналитикаУчетаЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.Ссылка КАК АналитикаРаспределенияЗатрат,
	|	РегистрАналитикаУчетаПартий.Ссылка КАК АналитикаУчетаПартий,
	|	Инвентаризация.Количество,
	|	Инвентаризация.Сумма,
	|	Инвентаризация.НДСВходящий,	
	|	Инвентаризация.НДСКредит,	
	|	Инвентаризация.СуммаНал
	|	
	|ПОМЕСТИТЬ Инвентаризация
	|ИЗ ДанныеИнвентаризации КАК Инвентаризация
	|	 
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		РегистрАналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|		И РегистрАналитикаВидаУчета.Проект = Неопределено
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.Подразделение = Инвентаризация.Подразделение
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.пустаяСсылка)
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	 	//ДляУпрУчета И РегистрАналитикаВидаУчета.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		//ДляУпрУчета И РегистрАналитикаВидаУчета.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
	|		
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = Инвентаризация.ПодразделениеОрганизации
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.Организация = Инвентаризация.Организация
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчета = Инвентаризация.СчетЗатрат
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.НалоговоеНазначение = Инвентаризация.НалоговоеНазначение
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		РегистрАналитикаУчетаЗатрат.ХарактерЗатрат = Инвентаризация.ХарактерЗатрат
	|		И РегистрАналитикаУчетаЗатрат.СтатьяЗатрат = Инвентаризация.СтатьяЗатрат
	|		И РегистрАналитикаУчетаЗатрат.Затрата = Инвентаризация.Затрата
	|		И РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты = Инвентаризация.ХарактеристикаЗатраты
	|		И РегистрАналитикаУчетаЗатрат.СерияЗатраты = Инвентаризация.СерияЗатраты
	|		И РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат = Инвентаризация.СпособРаспределенияЗатрат
	|		И РегистрАналитикаУчетаЗатрат.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа = Инвентаризация.НоменклатурнаяГруппа
	|		И РегистрАналитикаРаспределенияЗатрат.Продукция = Инвентаризация.Продукция
	|		И РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции = Инвентаризация.ХарактеристикаПродукции
	|		И РегистрАналитикаРаспределенияЗатрат.СерияПродукции = Инвентаризация.СерияПродукции
	|		И РегистрАналитикаРаспределенияЗатрат.Спецификация = ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
	|		И РегистрАналитикаРаспределенияЗатрат.ВариантВыпускаПродукции = ЗНАЧЕНИЕ(Перечисление.ВариантыВыпускаПродукции.ПустаяСсылка)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО
	|		РегистрАналитикаУчетаПартий.Заказ = Инвентаризация.Заказ
	|		И РегистрАналитикаУчетаПартий.СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартийТоваров.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ДоговорКомитента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.Комиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ДоговорКомиссионера = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.ФизЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.СхемаНазначенияИспользования = ЗНАЧЕНИЕ(Справочник.СхемыНазначенияИспользования.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.СпособОтраженияРасходов = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПартий.СрокПолезногоИспользования = 0
	|		И РегистрАналитикаУчетаПартий.ДокументПередачи = НЕОПРЕДЕЛЕНО 
	|;
	|//////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыИнвентаризации;
	|УНИЧТОЖИТЬ СведенияОтражениеВРеглУчете;
	|УНИЧТОЖИТЬ ДанныеИнвентаризации;
	|";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СведенияОтражениеВРеглУчете", СведенияОтражениеВРеглУчете);
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"Инвентаризация"
	);
	
КонецПроцедуры

// Процедура формирования временной таблицы "УчетЗатрат".
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СформироватьВременнуюТаблицуУчетЗатрат(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	СформироватьВременнуюТаблицуИнвентаризация(СтруктураШапкиДокумента, МенеджерВременныхТаблиц);
	
	// Подготовим таблицу затрат за вычетом инвентаризации
	ТекстЗапросаСКомментариями = 
	"ВЫБРАТЬ
	|	УчетЗатратОстатки.АналитикаВидаУчета,
	|	УчетЗатратОстатки.АналитикаУчетаЗатрат,
	|	УчетЗатратОстатки.АналитикаУчетаПартий,
	|	УчетЗатратОстатки.АналитикаРаспределенияЗатрат,
	|
	|	//ДляРеглУчета УчетЗатратОстатки.КоличествоНУОстаток,
	|	//ДляРеглУчета УчетЗатратОстатки.СтоимостьНУОстаток,
	|	//ДляРеглУчета УчетЗатратОстатки.НДСВходящийОстаток,
	|	//ДляРеглУчета УчетЗатратОстатки.НДСКредитОстаток,
	|	УчетЗатратОстатки.КоличествоОстаток,
	|	УчетЗатратОстатки.СтоимостьОстаток
	|	
	|ПОМЕСТИТЬ УчетЗатратОстатки
	|
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(&КонГраница,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				РегистрАналитикаВидаУчета.Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаЗатраты КАК РегистрАналитикаВидаУчета)) КАК УчетЗатратОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	&ДетализацияПоФиксированнойСтатьеЗатрат КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|	//ДляУпрУчета  ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ОбщепроизводственныеРасходы) КАК ХарактерЗатрат,
	|	//ДляРеглУчета ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбщепроизводственныеРасходы) КАК СчетУчета,
	|	&СтатьяОбщепроизводственныеРасходы КАК СтатьяЗатрат
	|	
	|ПОМЕСТИТЬ ДетализацияЗатрат
	|	
	|//ДетализацияАЗ ОБЪЕДИНИТЬ ВСЕ
	|		
	|//ДетализацияАЗ ВЫБРАТЬ
	|//ДетализацияАЗ 	&ДетализацияПоФиксированнойСтатьеЗатрат КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|//ДетализацияАЗ 	//ДляУпрУчета  ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.АдминистративныеРасходы),
	|//ДетализацияАЗ	//ДляРеглУчета ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АдминистративныеРасходы) КАК СчетУчета,
	|//ДетализацияАЗ 	&СтатьяАдминистративныеРасходы
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	&ДетализацияПоФиксированнойСтатьеЗатрат КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|	//ДляУпрУчета  ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.БракВПроизводстве),
	|	//ДляРеглУчета ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БракВПроизводстве) КАК СчетУчета,
	|	&СтатьяБракВПроизводстве
	|;
	|////////////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат <> ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) ТОГДА
	|		РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|	ИНАЧЕ
	|		ЕСТЬNULL(СпособыРаспределения.СпособРаспределения, ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка))
	|	КОНЕЦ КАК СпособРаспределенияЗатрат,
	|
	|	ВЫБОР КОГДА РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат <> ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХарактерРаспределенияЗатрат.ПроизводственныеРасходы)
	|	ИНАЧЕ
	|		СпособыРаспределения.ХарактерРаспределенияЗатрат
	|	КОНЕЦ КАК ХарактерРаспределенияЗатрат,
	|
	|	ВЫБОР КОГДА РегистрАналитикаУчетаЗатрат.СпособРаспределенияЗатрат <> ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) ТОГДА
	|		Ложь
	|	ИНАЧЕ
	|		СпособыРаспределения.РаспределятьНаПодчиненныеПодразделения
	|	КОНЕЦ КАК РаспределятьНаПодчиненныеПодразделения,
	|	
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	ЕСТЬNULL(Детализация.ДетализацияПоФиксированнойСтатьеЗатрат, Ложь) КАК ДетализацияПоФиксированнойСтатьеЗатрат,
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		Детализация.СтатьяЗатрат
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.СтатьяЗатрат
	|	КОНЕЦ КАК СтатьяЗатрат,
	|		
	|	РегистрАналитикаУчетаЗатрат.ХарактерЗатрат,
	|
	|	ВЫБОР КОГДА Затраты.КоличествоОстаток <> 0 ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РаспределениеПоКоличеству,
	|	
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.Затрата
	|	КОНЕЦ КАК Затрата,
	|	
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|	КОНЕЦ КАК ХарактеристикаЗатраты,
	|	
	|	ВЫБОР КОГДА Детализация.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИНАЧЕ
	|		РегистрАналитикаУчетаЗатрат.СерияЗатраты
	|	КОНЕЦ КАК СерияЗатраты,
	|
	|
	|	//ДляРеглУчета 		Затраты.СтоимостьНУОстаток - ЕСТЬNULL(Инвентаризация.СуммаНал, 0) КАК СтоимостьНУОстаток,
	|   //ДляРеглУчета 		Затраты.КоличествоНУОстаток - ЕСТЬNULL(Инвентаризация.Количество, 0) КАК КоличествоНУОстаток,
	|
	|	//ДляРеглУчета 	Затраты.НДСВходящийОстаток - ЕСТЬNULL(Инвентаризация.НДСВходящий, 0) КАК НДСВходящийОстаток,
	|	//ДляРеглУчета 	Затраты.НДСКредитОстаток - ЕСТЬNULL(Инвентаризация.НДСКредит, 0) КАК НДСКредитОстаток,
	|
	|	Затраты.СтоимостьОстаток - ЕСТЬNULL(Инвентаризация.Сумма, 0) КАК СтоимостьОстаток,
	|	Затраты.КоличествоОстаток - ЕСТЬNULL(Инвентаризация.Количество, 0) КАК КоличествоОстаток
	
	|
	|ПОМЕСТИТЬ УчетЗатрат
	|ИЗ
	|	УчетЗатратОстатки КАК Затраты
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РаспределяемыеСтатьиЗатрат%СуффиксУчета% КАК СпособыРаспределения
	|	ПО
	|		Затраты.АналитикаВидаУчета = СпособыРаспределения.АналитикаВидаУчета
	|		И Затраты.АналитикаУчетаЗатрат = СпособыРаспределения.АналитикаУчетаЗатрат
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Инвентаризация КАК Инвентаризация
	|	ПО
	|		Затраты.АналитикаВидаУчета = Инвентаризация.АналитикаВидаУчета
	|		И Затраты.АналитикаУчетаЗатрат = Инвентаризация.АналитикаУчетаЗатрат
	|		И Затраты.АналитикаРаспределенияЗатрат = Инвентаризация.АналитикаРаспределенияЗатрат
	|		И Затраты.АналитикаУчетаПартий = Инвентаризация.АналитикаУчетаПартий
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		Затраты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДетализацияЗатрат КАК Детализация 
	|	ПО
	|		&ДетализацияПоФиксированнойСтатьеЗатрат
	|		//ДляУпрУчета  И РегистрАналитикаУчетаЗатрат.ХарактерЗатрат = Детализация.ХарактерЗатрат
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчета = Детализация.СчетУчета
	|
	|ГДЕ
	|	Не СпособыРаспределения.НеРаспределять
	|	ИЛИ СпособыРаспределения.НеРаспределять ЕСТЬ NULL
	|	//ДляУпрУчета ИЛИ РегистрАналитикаУчетаЗатрат.ХарактерЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.Прочие)
	|
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетЗатратОстатки
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДетализацияЗатрат
	|;
	|
    |";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Если НЕ СтруктураШапкиДокумента.ДиректКостингАдминистративныеЗатраты Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДетализацияАЗ", "");
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачДата", 		СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", 		СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("КонГраница", 	СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("Организация", 	СтруктураШапкиДокумента.Организация);
	
	Запрос.УстановитьПараметр("ДетализацияПоФиксированнойСтатьеЗатрат", СтруктураШапкиДокумента.ДетализацияПоФиксированнойСтатьеЗатрат);
	Запрос.УстановитьПараметр("СтатьяОбщепроизводственныеРасходы", СтруктураШапкиДокумента.СтатьяОбщепроизводственныеРасходы);
	Запрос.УстановитьПараметр("СтатьяАдминистративныеРасходы", СтруктураШапкиДокумента.СтатьяАдминистративныеРасходы);
	Запрос.УстановитьПараметр("СтатьяБракВПроизводстве", СтруктураШапкиДокумента.СтатьяБракВПроизводстве);
	
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"УчетЗатрат"
	);
	
КонецПроцедуры // СформироватьВременнуюТаблицуУчетЗатрат()

// Функция формирует текст запроса по регистру "Учет затрат".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоРаспределяемымЗатратам()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Затраты.СпособРаспределенияЗатрат, ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка)) КАК СпособРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.ХарактерРаспределенияЗатрат, ЗНАЧЕНИЕ(Перечисление.ХарактерРаспределенияЗатрат.ПустаяСсылка)) КАК ХарактерРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.РаспределятьНаПодчиненныеПодразделения, Ложь) КАК РаспределятьНаПодчиненныеПодразделения,
	|
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка КАК КорАналитикаУчетаЗатрат,
	|
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	РегистрАналитикаВидаУчета.Подразделение,
	|
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат,
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.РаспределениеПоКоличеству,
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|
	|	//ДляРеглУчета Затраты.НДСВходящийОстаток,
	|	//ДляРеглУчета Затраты.НДСКредитОстаток,
	|	//ДляРеглУчета Затраты.СтоимостьНУОстаток КАК СтоимостьОстатокНУ,
	|	//ДляРеглУчета Затраты.КоличествоНУОстаток КАК КоличествоОстатокНУ,
	|	Затраты.СтоимостьОстаток,
	|	Затраты.КоличествоОстаток
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		АналитикаВидаУчетаЗатраты КАК РегистрАналитикаВидаУчета
	|	ПО
	|		Затраты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО
	|		Затраты.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат
    |
	|";
		
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоРаспределяемымЗатратам()

// Функция формирует текст запроса по регистру "Учет затрат".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоРаспределяемымЗатратамСводно()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Затраты.СпособРаспределенияЗатрат, ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка)) КАК СпособРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.ХарактерРаспределенияЗатрат, ЗНАЧЕНИЕ(Перечисление.ХарактерРаспределенияЗатрат.ПустаяСсылка)) КАК ХарактерРаспределенияЗатрат,
	|	ЕСТЬNULL(Затраты.РаспределятьНаПодчиненныеПодразделения, Ложь) КАК РаспределятьНаПодчиненныеПодразделения,
	|
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка КАК КорАналитикаУчетаЗатрат,
	|
	|	Затраты.АналитикаВидаУчета,
	|	ВЫБОР КОГДА Затраты.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		РегистрКорАналитикаУчетаЗатрат.Ссылка
	|	ИНАЧЕ
	|		Затраты.АналитикаУчетаЗатрат
	|	КОНЕЦ КАК АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	РегистрАналитикаВидаУчета.Подразделение,
	|
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат,
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.РаспределениеПоКоличеству,
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|
	|	//ДляРеглУчета СУММА(Затраты.НДСВходящийОстаток) КАК НДСВходящийОстаток,
	|	//ДляРеглУчета СУММА(Затраты.НДСКредитОстаток) КАК НДСКредитОстаток,
	|	//ДляРеглУчета СУММА(Затраты.СтоимостьНУОстаток) КАК СтоимостьОстатокНУ,
	|	//ДляРеглУчета СУММА(Затраты.КоличествоНУОстаток) КАК КоличествоОстатокНУ,
	|	СУММА(Затраты.СтоимостьОстаток) КАК СтоимостьОстаток,
	|	СУММА(Затраты.КоличествоОстаток) КАК КоличествоОстаток
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		АналитикаВидаУчетаЗатраты КАК РегистрАналитикаВидаУчета
	|	ПО
	|		Затраты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|	ПО
	|		Затраты.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|			
	|СГРУППИРОВАТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.ХарактерРаспределенияЗатрат,
	|	Затраты.РаспределятьНаПодчиненныеПодразделения,
	|
	|	Затраты.АналитикаВидаУчета,
	|	ВЫБОР КОГДА Затраты.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		РегистрКорАналитикаУчетаЗатрат.Ссылка
	|	ИНАЧЕ
	|		Затраты.АналитикаУчетаЗатрат
	|	КОНЕЦ,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка,
	|	
	|	РегистрАналитикаВидаУчета.Подразделение,
	|
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат,
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.РаспределениеПоКоличеству,
	|
	|	//ДляУпрУчета РегистрАналитикаВидаУчета.Проект,
	|	
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаУчетаПартий.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.АналитикаВидаУчета,
	|	ВЫБОР КОГДА Затраты.ДетализацияПоФиксированнойСтатьеЗатрат ТОГДА
	|		РегистрКорАналитикаУчетаЗатрат.Ссылка
	|	ИНАЧЕ
	|		Затраты.АналитикаУчетаЗатрат
	|	КОНЕЦ,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат
    |
	|";
		
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоРаспределяемымЗатратамСводно()

// Функция формирует запрос по регистру "Затраты".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//   Запрос – Запрос по регистру "Затраты".
//
Функция СформироватьЗапросПоРаспределяемымЗатратам(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	Если СтруктураШапкиДокумента.ДетализацияПоФиксированнойСтатьеЗатрат Тогда
		ТекстЗапросаСКомментариями = СформироватьТекстЗапросаПоРаспределяемымЗатратамСводно();
	Иначе
		ТекстЗапросаСКомментариями = СформироватьТекстЗапросаПоРаспределяемымЗатратам();
	КонецЕсли;
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
		
	Возврат Запрос;

КонецФункции // СформироватьЗапросПоРаспределяемымЗатратам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ЗАПРОСОВ ПО БАЗЕ РАСПРЕДЕЛЕНИЯ


// Функция формирует текст запроса по регистру сведений "База распределения затрат".
//
// Возвращаемое значение:
//	Строка – Текст запроса
//
Функция СформироватьТекстЗапросаБазаРаспределенияЗатратРасширеннаяАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	
	|	Ложь КАК ДиректКостинг,
	|
	|	//ДляРеглУчета БазаРаспределенияЗатрат.Организация,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения КАК РаспределятьНаПодчиненныеПодразделения,
	|	БазаРаспределенияЗатрат.Подразделение,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	БазаРаспределенияЗатрат.Заказ,
	|	БазаРаспределенияЗатрат.ПодразделениеНЗП,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП,
	|	БазаРаспределенияЗатрат.ЗаказНЗП,
	|	БазаРаспределенияЗатрат.ИндексБазыРаспределения,
	|	БазаРаспределенияЗатрат.ВидВыпуска,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты) КАК РазделУчета,
	|	
	|	Неопределено КАК Продукция,
	|	Неопределено КАК ХарактеристикаПродукции,
	|	Неопределено КАК СерияПродукции,
	|	
	|	БазаРаспределенияЗатрат.АналитикаВидаУчета,
	|	БазаРаспределенияЗатрат.АналитикаРаспределенияЗатрат,
	|	БазаРаспределенияЗатрат.АналитикаУчетаПартий,
	|
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|
	|	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриход = 0 ТОГДА
	|		БазаРаспределенияЗатрат.БазаПриход
	|	ИНАЧЕ
	|		(БазаРаспределенияЗатрат.БазаПриход /
	|		ВЫБОР КОГДА БазаРаспределенияЗатратВсего.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияЗатратВсего.БазаПриход = 0 ТОГДА
	|			1
	|		ИНАЧЕ
	|			БазаРаспределенияЗатратВсего.БазаПриход
	|		КОНЕЦ)
	|	КОНЕЦ КАК БазаПриход,
	|
	|	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриход = 0 ТОГДА
	|		1
	|	ИНАЧЕ
	|		(БазаРаспределенияНаПодчиненные.БазаПриход /
	|		ВЫБОР КОГДА БазаРаспределенияНаПодчиненныеВсего.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненныеВсего.БазаПриход = 0 ТОГДА
	|			1
	|		ИНАЧЕ
	|			БазаРаспределенияНаПодчиненныеВсего.БазаПриход
	|		КОНЕЦ)
	|	КОНЕЦ КАК БазаНаПодчиненные,
	|
	|	0 КАК База,
	|	БазаРаспределенияЗатрат.БазаОстатокНЗП
	|
	|ПОМЕСТИТЬ БазаРаспределенияЗатрат
	|ИЗ
	|	РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|			
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределенияЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		БазаРаспределенияЗатрат.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			БазаРаспределенияЗатрат.Подразделение,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.НалоговоеНазначение,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.НалоговоеНазначение,
	|			БазаРаспределенияЗатрат.Подразделение
	|
	|		) КАК БазаРаспределенияЗатратВсего
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат = БазаРаспределенияЗатратВсего.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.Подразделение = БазаРаспределенияЗатратВсего.Подразделение			
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.СчетУчета = БазаРаспределенияЗатратВсего.СчетУчета
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.НалоговоеНазначение = БазаРаспределенияЗатратВсего.НалоговоеНазначение 
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			БазаРаспределенияЗатрат.Подразделение,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.НалоговоеНазначение,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.НалоговоеНазначение,
	|			БазаРаспределенияЗатрат.Подразделение
	|
	|		) КАК БазаРаспределенияНаПодчиненные
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.СпособРаспределенияЗатратПоПодразделениям 
	|					= БазаРаспределенияНаПодчиненные.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		И БазаРаспределенияЗатрат.Подразделение = БазаРаспределенияНаПодчиненные.Подразделение
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.СчетУчета 	= БазаРаспределенияНаПодчиненные.СчетУчета
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.НалоговоеНазначение= БазаРаспределенияНаПодчиненные.НалоговоеНазначение 
	|				
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат
	|
	|		) КАК БазаРаспределенияНаПодчиненныеВсего
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.СпособРаспределенияЗатратПоПодразделениям 
	|					= БазаРаспределенияНаПодчиненныеВсего.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		
	|ГДЕ
	|	БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|	И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|	И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|	И (БазаРаспределенияЗатрат.БазаПриход <> 0
	|		ИЛИ БазаРаспределенияЗатрат.БазаОстатокНЗП <> 0)
	|	И (БазаРаспределенияЗатрат.Продукция = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения)
	|	
	|	//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|	//ДляБухУчета И Не БазаРаспределенияЗатрат.СчетУчета.Забалансовый
	|				
	|";

 	Возврат ТекстЗапроса;

КонецФункции // СформироватьТекстЗапросаБазаРаспределенияЗатратРасширеннаяАналитика()

// Функция формирует текст запроса по регистру сведений "База распределения затрат".
//
// Возвращаемое значение:
//	Строка – Текст запроса
//
Функция СформироватьТекстЗапросаБазаРаспределенияНаВыпускРасширеннаяАналитика()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	
	|	Ложь КАК ДиректКостинг,
	|
	|	//ДляРеглУчета ЕСТЬNULL(БазаРаспределенияЗатрат.Организация,
	|	//ДляРеглУчета 	БазаРаспределенияНаВыпуск.Организация) КАК Организация,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|		БазаРаспределенияНаВыпуск.СпособРаспределенияЗатрат) КАК СпособРаспределенияЗатрат,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения,
	|		Ложь) КАК РаспределятьНаПодчиненныеПодразделения,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.Подразделение,
	|		БазаРаспределенияНаВыпуск.Подразделение) КАК Подразделение,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|		БазаРаспределенияНаВыпуск.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.Заказ,
	|		БазаРаспределенияНаВыпуск.Заказ) КАК Заказ,
	|
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.ПодразделениеНЗП,
	|		БазаРаспределенияНаВыпуск.ПодразделениеНЗП) КАК ПодразделениеНЗП,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП,
	|		БазаРаспределенияНаВыпуск.НоменклатурнаяГруппаНЗП) КАК НоменклатурнаяГруппаНЗП,
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.ЗаказНЗП,
	|		БазаРаспределенияНаВыпуск.ЗаказНЗП) КАК ЗаказНЗП,
	|	
	|	ЕСТЬNULL(БазаРаспределенияЗатрат.ИндексБазыРаспределения,
	|		-1) КАК ИндексБазыРаспределения,
	|
	|	БазаРаспределенияНаВыпуск.ВидВыпуска,
	|	
	|	ВЫБОР КОГДА БазаРаспределенияНаВыпуск.ВидВыпуска = ЗНАЧЕНИЕ(Перечисление.ВидыВыпуска.Наработка) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыПоНаработке)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ЗатратыНаВыпуск)
	|	КОНЕЦ КАК РазделУчета,
	|	
	|	БазаРаспределенияНаВыпуск.Продукция,
	|	БазаРаспределенияНаВыпуск.ХарактеристикаПродукции,
	|	БазаРаспределенияНаВыпуск.СерияПродукции,
	|	
	|	БазаРаспределенияНаВыпуск.АналитикаВидаУчета,
	|	БазаРаспределенияНаВыпуск.АналитикаРаспределенияЗатрат,
	|	БазаРаспределенияНаВыпуск.АналитикаУчетаПартий,
	|
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.СчетУчета,
	|	//ДляРеглУчета РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|
	|	ВЫБОР КОГДА БазаРаспределенияЗатрат.БазаПриход ЕСТЬ NULL ТОГДА
	|		БазаРаспределенияНаВыпуск.База
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК БазаПриход,
	|	0 КАК БазаНаПодчиненные,
	|	БазаРаспределенияНаВыпуск.База КАК База,
	|	0 КАК БазаОстатокНЗП
	|
	|ПОМЕСТИТЬ БазаРаспределенияНаВыпуск
	|ИЗ
	|	РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияНаВыпуск
	|			
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределенияНаВыпуск.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БазаРаспределенияЗатрат КАК БазаРаспределенияЗатрат
	// Таблицу БазаРаспределенияЗатрат получаем в СформироватьТекстЗапросаБазаРаспределенияЗатратРасширеннаяАналитика()
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат = БазаРаспределенияНаВыпуск.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.ПодразделениеНЗП = БазаРаспределенияНаВыпуск.ПодразделениеНЗП
	|		И (БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП = БазаРаспределенияНаВыпуск.НоменклатурнаяГруппаНЗП
	|			ИЛИ БазаРаспределенияЗатрат.НоменклатурнаяГруппаНЗП = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
	|		И (БазаРаспределенияЗатрат.ЗаказНЗП = БазаРаспределенияНаВыпуск.ЗаказНЗП
	|			ИЛИ БазаРаспределенияЗатрат.ЗаказНЗП = Неопределено)
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.СчетУчета = БазаРаспределенияЗатрат.СчетУчета
	|		//ДляРеглУчета И РегистрАналитикаВидаУчета.НалоговоеНазначение = БазаРаспределенияЗатрат.НалоговоеНазначение
	|
	|	//ДляРеглУчета И БазаРаспределенияНаВыпуск.Организация = &Организация
	|	//ДляБухУчета И Не БазаРаспределенияНаВыпуск.СчетУчета.Забалансовый
	|	
	|ГДЕ
	|	БазаРаспределенияНаВыпуск.Период МЕЖДУ &НачДата И &КонДата
	|	И БазаРаспределенияНаВыпуск.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|	И БазаРаспределенияНаВыпуск.РасчетСебестоимостиВыпуска
	|	И БазаРаспределенияНаВыпуск.База <> 0	
	|	//ДляРеглУчета И БазаРаспределенияНаВыпуск.Организация = &Организация
	|			
	|";

 	Возврат ТекстЗапроса;

КонецФункции // СформироватьТекстЗапросаБазаРаспределенияНаВыпускРасширеннаяАналитика()


// Процедура формирования временной таблицы "БазаРаспределенияЗатрат" и "БазаРаспределенияНаВыпуск".
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура СформироватьВременныеТаблицыПоБазеРаспределенияЗатрат(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапросаСКомментариями = СформироватьТекстЗапросаБазаРаспределенияЗатратРасширеннаяАналитика();
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("РаспределениеКосвенныхЗатрат", Истина);
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"БазаРаспределенияЗатрат"
	);
	
	ТекстЗапросаСКомментариями = СформироватьТекстЗапросаБазаРаспределенияНаВыпускРасширеннаяАналитика();
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"БазаРаспределенияНаВыпуск"
	);
	
	
КонецПроцедуры // СформироватьВременныеТаблицыПоБазеРаспределенияЗатрат()

// Функция формирует запрос по временной таблице "База распределения затрат".
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Запрос - Запрос по временной таблице
//
Функция СформироватьЗапросПоВременнойТаблицеБазаРаспределенияЗатрат(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	Если СтруктураШапкиДокумента.РазрешитьКорректировкиИспользования Тогда
		УсловиеРазрешитьКорректировкиИспользованияНУ = "";
	Иначе	
		УсловиеРазрешитьКорректировкиИспользованияНУ = "
		| //ДляРеглУчета И (Затраты.НалоговоеНазначение = БазаРаспределения.НалоговоеНазначение 
		| //ДляРеглУчета ИЛИ Затраты.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.РаспределяемоеАмортизация)
		// НалоговоеНазначение затрат с группой ДоходовИЗатрат можно распределять всегда - по ним корректировок не бывает
		| //ДляРеглУчета ИЛИ Затраты.НалоговоеНазначение.ГруппаНалоговогоНазначения = ЗНАЧЕНИЕ(Перечисление.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат)) ";
	КонецЕсли;
	
	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	Затраты.ИндексАналитики,
	|	ЕСТЬNULL(БазаРаспределения.ИндексБазыРаспределения, Затраты.ИндексАналитики) КАК ИндексБазыРаспределения,
	|	Затраты.СписаниеЗатрат,
	|	Затраты.СписаниеЗатратНУ,
	|	
	|	РегистрКорАналитикаВидаУчета.Ссылка КАК КорАналитикаВидаУчета,
	|	
	|	ЕСТЬNULL(БазаРаспределения.АналитикаВидаУчета, Неопределено) КАК АналитикаВидаУчета,
	|	ЕСТЬNULL(БазаРаспределения.АналитикаРаспределенияЗатрат, Неопределено) КАК АналитикаРаспределенияЗатрат,
	|	ЕСТЬNULL(БазаРаспределения.АналитикаУчетаПартий, Неопределено) КАК АналитикаУчетаПартий,
	|	
	|	//ДляУпрУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.Подразделение, Неопределено) КАК Подразделение,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.ПодразделениеОрганизации, Неопределено) КАК Подразделение,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.ПодразделениеОрганизации, Неопределено) КАК ПодразделениеОрганизации,
	|
	|	ЕСТЬNULL(БазаРаспределения.ВидВыпуска, Неопределено) КАК ВидВыпуска,
	|	ЕСТЬNULL(БазаРаспределения.РазделУчета, Неопределено) КАК РазделУчета,
	|	ЕСТЬNULL(РегистрАналитикаВидаУчета.Организация, Неопределено) КАК Организация,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.СчетУчета, БазаРаспределения.СчетУчета) КАК СчетУчета,
	|	//ДляРеглУчета ЕСТЬNULL(РегистрАналитикаВидаУчета.НалоговоеНазначение, БазаРаспределения.НалоговоеНазначение) КАК НалоговоеНазначение,
	|
	|	ЕСТЬNULL(РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, БазаРаспределения.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	|	
	|	ВЫБОР КОГДА Затраты.СписаниеЗатрат 
	|	ТОГДА
	|		1
	|	КОГДА Затраты.Продукция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		И Затраты.Продукция <> Неопределено
	|	ТОГДА
	|       ЕСТЬNULL(БазаРаспределения.База, 0)
	|	ИНАЧЕ
	|		ЕСТЬNULL(БазаРаспределения.БазаПриход, 0)
	|	КОНЕЦ КАК БазаПриход,
	|	ЕСТЬNULL(БазаРаспределения.БазаНаПодчиненные, 1) КАК БазаНаПодчиненные,
	|
	|	ВЫБОР КОГДА Затраты.СписаниеЗатрат ТОГДА
	|		1
	|	ИНАЧЕ
	|		ЕСТЬNULL(БазаРаспределения.База, 0)
	|	КОНЕЦ КАК База,
	|	ЕСТЬNULL(БазаРаспределения.БазаОстатокНЗП, 0) КАК БазаОстатокНЗП
	|   
	|ИЗ
	|	ТаблицаАналитикиЗатрат КАК Затраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ 
	|			*
	|	    ИЗ
	|			БазаРаспределенияЗатрат КАК БазаРаспределения
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ 
	|			*
	|	    ИЗ
	|			БазаРаспределенияНаВыпуск КАК БазаРаспределения
	|
	|		) КАК БазаРаспределения
	|			
	|	ПО
	|		(Затраты.СпособРаспределенияЗатрат = БазаРаспределения.СпособРаспределенияЗатрат
	|		)
	|		И Не Затраты.СписаниеЗатрат
	|		И (Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП
	|			ИЛИ Затраты.Подразделение = Неопределено
	|			ИЛИ (Затраты.РаспределятьНаПодчиненныеПодразделения
	|				И (Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП.Родитель
	|					ИЛИ Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП.Родитель.Родитель
	|					ИЛИ Затраты.Подразделение = БазаРаспределения.ПодразделениеНЗП.Родитель.Родитель.Родитель)
	|				)
	|			)
	|		И (Затраты.НоменклатурнаяГруппа = БазаРаспределения.НоменклатурнаяГруппаНЗП
	|			ИЛИ Затраты.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|			)
	|
	|		И (Затраты.Заказ = БазаРаспределения.ЗаказНЗП
	|			ИЛИ Затраты.Заказ = Неопределено
	|			)
	|
	|		И (Затраты.Продукция = БазаРаспределения.Продукция
	|			ИЛИ Затраты.Продукция = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			)
	|
	|		И (Затраты.ХарактеристикаПродукции = БазаРаспределения.ХарактеристикаПродукции
	|			ИЛИ Затраты.ХарактеристикаПродукции = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			)
	|
	|		И (Затраты.СерияПродукции = БазаРаспределения.СерияПродукции
	|			ИЛИ Затраты.СерияПродукции = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			)
	|
	|" + УсловиеРазрешитьКорректировкиИспользованияНУ + " 
	|
	// Затраты не отраженные в НУ (пустое налоговое назначение) могут распределятся только на продукцию, не отраженную в НУ и наоборот
	| 	//ДляРеглУчета И 
	|	//ДляРеглУчета ВЫБОР КОГДА (Затраты.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) ИЛИ БазаРаспределения.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)) ТОГДА
	|	//ДляРеглУчета 		ВЫБОР КОГДА (Затраты.НалоговоеНазначение = БазаРаспределения.НалоговоеНазначение) ТОГДА
	| 	//ДляРеглУчета 			Истина
	|	//ДляРеглУчета 		ИНАЧЕ
	|	//ДляРеглУчета 			Ложь
	|	//ДляРеглУчета 		КОНЕЦ 
	|	//ДляРеглУчета ИНАЧЕ
	|	//ДляРеглУчета 		Истина
	|	//ДляРеглУчета КОНЕЦ 
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		БазаРаспределения.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.РазделУчета = РегистрКорАналитикаВидаУчета.РазделУчета
	|		И РегистрАналитикаВидаУчета.Организация = РегистрКорАналитикаВидаУчета.Организация
	|		И РегистрАналитикаВидаУчета.Подразделение = РегистрКорАналитикаВидаУчета.Подразделение
	|		И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации
	|		И РегистрАналитикаВидаУчета.СчетУчета = РегистрКорАналитикаВидаУчета.СчетУчета
	|		И РегистрАналитикаВидаУчета.НалоговоеНазначение = РегистрКорАналитикаВидаУчета.НалоговоеНазначение
	|		И РегистрАналитикаВидаУчета.Проект = РегистрКорАналитикаВидаУчета.Проект
	|		И РегистрАналитикаВидаУчета.Склад = РегистрКорАналитикаВидаУчета.Склад
	|		
	|ГДЕ
	|	Не БазаРаспределения.ИндексБазыРаспределения ЕСТЬ NULL
	|	ИЛИ Затраты.СписаниеЗатрат
	|			
	|УПОРЯДОЧИТЬ ПО
	|	БазаПриход ВОЗР,
	|	База ВОЗР,
	|	БазаОстатокНЗП ВОЗР,
	|	БазаРаспределения.АналитикаВидаУчета,
	|	БазаРаспределения.АналитикаРаспределенияЗатрат,
	|	БазаРаспределения.АналитикаУчетаПартий
	|			
	|ИТОГИ
	|	СУММА(БазаПриход),
	|	СУММА(База),
	|	МАКСИМУМ(БазаНаПодчиненные),
	|	СУММА(БазаОстатокНЗП)
	|ПО
	|	Затраты.ИндексАналитики,
	|	БазаРаспределения.ИндексБазыРаспределения
	|";	
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ТаблицаАналитикиЗатрат"
	);
	
	
	Возврат Запрос;

КонецФункции // СформироватьЗапросПоВременнойТаблицеБазаРаспределенияЗатрат() 

////////////////////////////////////////////////////////////////////////////////
//	ПРОЦЕДУРЫ ФОРМИРОВАНИЯ НЕДОСТАЮЩИХ КЛЮЧЕЙ АНАЛИТИКИ

// Процедура формирует ключи аналитики вида учета, которых еще нет.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура СформироватьКлючиАналитикиВидаУчетаБазаРаспределения(
	СтруктураШапкиДокумента,
	ВидОтраженияВУчете,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БазаРаспределения.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение
	|	
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РазделУчета,
	|		АналитикаВидаУчета
	|	ИЗ
	|		БазаРаспределенияЗатрат КАК БазаРаспределения
	|		
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РазделУчета,
	|		АналитикаВидаУчета
	|	ИЗ
	|		БазаРаспределенияНаВыпуск КАК БазаРаспределения
	|		
	|	) КАК БазаРаспределения
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО
	|		БазаРаспределения.РазделУчета = РегистрКорАналитикаВидаУчета.РазделУчета
	|		И РегистрАналитикаВидаУчета.Организация = РегистрКорАналитикаВидаУчета.Организация
	|		И РегистрАналитикаВидаУчета.Подразделение = РегистрКорАналитикаВидаУчета.Подразделение
	|		И РегистрАналитикаВидаУчета.ПодразделениеОрганизации = РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации
	|		И РегистрАналитикаВидаУчета.СчетУчета = РегистрКорАналитикаВидаУчета.СчетУчета
	|		И РегистрАналитикаВидаУчета.НалоговоеНазначение = РегистрКорАналитикаВидаУчета.НалоговоеНазначение
	|		
	|ГДЕ
	|	РегистрКорАналитикаВидаУчета.Ссылка ЕСТЬ NULL
	|		
	|УПОРЯДОЧИТЬ ПО
	|	БазаРаспределения.РазделУчета,
	|	РегистрАналитикаВидаУчета.Организация,
	|	РегистрАналитикаВидаУчета.Подразделение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение 
	|
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	СтруктураКлючиАналитики = Новый Структура;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			Выборка,
			Перечисления.КлючиАналитики.АналитикаВидаУчета,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьКлючиАналитикиВидаУчетаБазаРаспределения()

// Процедура формирует ключи аналитики учета затрат, которых еще нет.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура СформироватьКлючиАналитикиУчетаЗатрат(
	СтруктураШапкиДокумента,
	ВидОтраженияВУчете,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Затраты.СтатьяЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка) КАК Качество
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		
	|ГДЕ
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СтатьяЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.ХарактерЗатрат
	|
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	СтруктураКлючиАналитики = Новый Структура;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			Выборка,
			Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьКлючиАналитикиУчетаЗатрат()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПЕРЕНОСА РАСХОДОВ НА ОБОБЩЕННЫЕ СТАТЬИ ЗАТРАТ

// Функция формирует текст запроса по регистру "Учет затрат".
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Запрос - Запрос по распределяемым затратам
//
Функция СформироватьЗапросПереносРаспределяемыхЗатрат(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	Затраты.СпособРаспределенияЗатрат,
	|	РегистрКорАналитикаУчетаЗатрат.Ссылка КАК КорАналитикаУчетаЗатрат,
	|
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	|	Затраты.СтатьяЗатрат,
	|	Затраты.ХарактерЗатрат,
	|	Затраты.Затрата,
	|	Затраты.ХарактеристикаЗатраты,
	|	Затраты.СерияЗатраты,
	|
	|	//ДляРеглУчета Затраты.НДСВходящийОстаток,
	|	//ДляРеглУчета Затраты.НДСКредитОстаток,
	|	//ДляРеглУчета Затраты.СтоимостьНУОстаток КАК СтоимостьОстатокНУ,
	|	//ДляРеглУчета Затраты.КоличествоНУОстаток КАК КоличествоОстатокНУ,
	|	Затраты.СтоимостьОстаток,
	|	Затраты.КоличествоОстаток
	|
	|ИЗ
	|	УчетЗатрат КАК Затраты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.СпособРаспределенияЗатрат = РегистрКорАналитикаУчетаЗатрат.СпособРаспределенияЗатрат
	|		И Затраты.СтатьяЗатрат = РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|		И Затраты.Затрата = РегистрКорАналитикаУчетаЗатрат.Затрата
	|		И Затраты.ХарактеристикаЗатраты = РегистрКорАналитикаУчетаЗатрат.ХарактеристикаЗатраты
	|		И Затраты.СерияЗатраты = РегистрКорАналитикаУчетаЗатрат.СерияЗатраты
	|		И Затраты.ХарактерЗатрат = РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат
	|			
	|ГДЕ
	|	Затраты.ДетализацияПоФиксированнойСтатьеЗатрат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты.СпособРаспределенияЗатрат,
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат
    |
	|";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
	Возврат Запрос;
	
КонецФункции // СформироватьЗапросПереносРаспределяемыхЗатрат()

// Процедура формирует движения по переносу расходов на обобщенные статьи затрат.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
//
Процедура ПеренестиРасходыНаОбобщенныеСтатьиЗатрат(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	)
	
	СтруктураКлючиАналитики = Новый Структура;
	
	Запрос = СформироватьЗапросПереносРаспределяемыхЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	РезультатЗапроса = Запрос.Выполнить();
	
	КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.РаспределениеНЗПРегламент;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		АналитикаУчетаЗатрат = Выборка.КорАналитикаУчетаЗатрат;
		
		Если Не ЗначениеЗаполнено(АналитикаУчетаЗатрат) Тогда
		
			АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
				СтруктураШапкиДокумента,
				Выборка,
				Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				СтруктураКлючиАналитики
			);
		КонецЕсли;
		
		Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
			КоличествоНУ = Выборка.КоличествоОстатокНУ;
			СтоимостьНУ = Выборка.СтоимостьОстатокНУ;
			НДСВходящий  = Выборка.НДСВходящийОстаток;
			НДСКредит = Выборка.НДСКредитОстаток;
		Иначе
			КоличествоНУ = 0;
			СтоимостьНУ = 0;
			НДСВходящий = 0;
			НДСКредит = 0;
		КонецЕсли;
		
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Выборка.АналитикаВидаУчета,
			АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			ВидДвиженияНакопления.Расход,
			КодОперации,
			Выборка.КоличествоОстаток,
			Выборка.СтоимостьОстаток,
			КоличествоНУ,
			СтоимостьНУ,
			НДСВходящий,
			НДСКредит,
			СтруктураНаборыЗаписей.УчетЗатрат
		);
		
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчета,
			АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			ВидДвиженияНакопления.Приход,
			КодОперации,
			0, // Количество,
			Выборка.СтоимостьОстаток,
			0, // КоличествоНУ,
			СтоимостьНУ,
			НДСВходящий,
			НДСКредит,
			СтруктураНаборыЗаписей.УчетЗатрат
		);
		
	КонецЦикла;
	
КонецПроцедуры // ПеренестиРасходыНаОбобщенныеСтатьиЗатрат()

////////////////////////////////////////////////////////////////////////////////

// Функция формирует структуру для получения ключа аналитики способа распределения.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	ПараметрыАналитики - Коллекция - Коллекция параметров для получения ключа
//		(Структура, Выборка из результата запроса, Строка табличной части и т.п.)
//
// Возвращаемое значение:
//	Структура - Структура со значениями параметров для получения ключа
//
Функция СтруктураКлючаАналитикиСпособаРаспределения(
	СтруктураШапкиДокумента,
	ПараметрыАналитики
	)
	
	СтруктураИзмерений = Новый Структура;
	СтруктураИзмерений.Вставить("СпособРаспределенияЗатрат");
	СтруктураИзмерений.Вставить("ХарактерРаспределенияЗатрат");
	СтруктураИзмерений.Вставить("РаспределятьНаПодчиненныеПодразделения");
	СтруктураИзмерений.Вставить("Подразделение");
	СтруктураИзмерений.Вставить("НоменклатурнаяГруппа");
	СтруктураИзмерений.Вставить("Заказ");
	СтруктураИзмерений.Вставить("Продукция");
	СтруктураИзмерений.Вставить("ХарактеристикаПродукции");
	СтруктураИзмерений.Вставить("СерияПродукции");
	СтруктураИзмерений.Вставить("СписаниеЗатрат");
	СтруктураИзмерений.Вставить("СписаниеЗатратНУ");
	СтруктураИзмерений.Вставить("НалоговоеНазначение");
	
	ЗаполнитьЗначенияСвойств(СтруктураИзмерений, ПараметрыАналитики);
	
	СписаниеЗатрат = Ложь;
	СписаниеЗатратНУ = Ложь;
	
	ХарактерЗатрат = ПараметрыАналитики.ХарактерЗатрат;
	Если СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете Тогда
		
		
		Если ХарактерЗатрат = Перечисления.ХарактерЗатрат.РасходыНаСбыт
		 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПрочиеОперационныеРасходы
		 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.Прочие
		 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.АдминистративныеРасходы
		Тогда
		
			СписаниеЗатрат = Истина;
			
		КонецЕсли;
		
		Если ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы Тогда
			СписаниеЗатрат = СтруктураШапкиДокумента.ДиректКостингОбщепроизводственныеЗатраты;
			СписаниеЗатратНУ = СтруктураШапкиДокумента.ДиректКостингОбщепроизводственныеЗатратыНУ;
		КонецЕсли;
		
	ИначеЕсли СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
		
		Если ХарактерЗатрат = Перечисления.ХарактерЗатрат.РасходыНаСбыт
		 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПрочиеОперационныеРасходы
		 ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.Прочие
		Тогда
		
			СписаниеЗатрат = Истина;
			
		ИначеЕсли ХарактерЗатрат = Перечисления.ХарактерЗатрат.АдминистративныеРасходы
			И СтруктураШапкиДокумента.ДиректКостингАдминистративныеЗатраты
		Тогда
			СписаниеЗатрат = Истина;
			
		ИначеЕсли ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы
			И СтруктураШапкиДокумента.ДиректКостингОбщепроизводственныеЗатраты
		Тогда
		
			СписаниеЗатрат = Истина;
			
		КонецЕсли;
			
	КонецЕсли;
	
	СтруктураИзмерений.СписаниеЗатрат = СписаниеЗатрат;
	СтруктураИзмерений.СписаниеЗатратНУ = СписаниеЗатратНУ;
	
	// Поле "Подразделение" составного типа, его пустое значение должно быть Неопределено.
	Если Не ЗначениеЗаполнено(СтруктураИзмерений.Подразделение)
	 ИЛИ СтруктураИзмерений.ХарактерРаспределенияЗатрат = Перечисления.ХарактерРаспределенияЗатрат.НеУчитыватьПодразделение
	Тогда
		СтруктураИзмерений.Подразделение = Неопределено;
	КонецЕсли;
	
	Если СтруктураИзмерений.НоменклатурнаяГруппа = Неопределено Тогда
		СтруктураИзмерений.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	КонецЕсли;
	Если СтруктураИзмерений.Продукция = Неопределено Тогда
		СтруктураИзмерений.Продукция = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
	Если СтруктураИзмерений.ХарактеристикаПродукции = Неопределено Тогда
		СтруктураИзмерений.ХарактеристикаПродукции = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	Если СтруктураИзмерений.СерияПродукции = Неопределено Тогда
		СтруктураИзмерений.СерияПродукции = Справочники.СерииНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	// Поле "Заказ" составного типа, его пустое значение должно быть Неопределено.
	Если Не ЗначениеЗаполнено(СтруктураИзмерений.Заказ) Тогда
		СтруктураИзмерений.Заказ = Неопределено;
	КонецЕсли;
	
	Возврат СтруктураИзмерений;
	
КонецФункции // СтруктураКлючаАналитикиСпособаРаспределения()

// Функция формирует временную таблицу для группировки базы распределения.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	ТаблицаЗатрат - ТаблицаЗначений - Таблица затрат
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица затрат
//
Функция СформироватьВременнуюТаблицуАналитики(
	СтруктураШапкиДокумента,
	ТаблицаЗатрат,
	МенеджерВременныхТаблиц
	)
	
	МассивТиповПодразделение = Новый Массив;
	МассивТиповПодразделение.Добавить(Тип("СправочникСсылка.Подразделения"));
	МассивТиповПодразделение.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	
	МассивТиповЗаказа = Новый Массив;
	МассивТиповЗаказа.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	МассивТиповЗаказа.Добавить(Тип("ДокументСсылка.ЗаказНаПроизводство"));
	
	ТаблицаАналитики = Новый ТаблицаЗначений;
	ТаблицаАналитики.Колонки.Добавить("СпособРаспределенияЗатрат", Новый ОписаниеТипов("СправочникСсылка.СпособыРаспределенияЗатратНаВыпуск"));
	ТаблицаАналитики.Колонки.Добавить("ХарактерРаспределенияЗатрат", Новый ОписаниеТипов("ПеречислениеСсылка.ХарактерРаспределенияЗатрат"));
	ТаблицаАналитики.Колонки.Добавить("РаспределятьНаПодчиненныеПодразделения", Новый ОписаниеТипов("Булево"));
	ТаблицаАналитики.Колонки.Добавить("НоменклатурнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ТаблицаАналитики.Колонки.Добавить("Подразделение", Новый ОписаниеТипов(МассивТиповПодразделение));
	ТаблицаАналитики.Колонки.Добавить("Заказ", Новый ОписаниеТипов(МассивТиповЗаказа));
	ТаблицаАналитики.Колонки.Добавить("Продукция", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаАналитики.Колонки.Добавить("ХарактеристикаПродукции", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаАналитики.Колонки.Добавить("СерияПродукции", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаАналитики.Колонки.Добавить("СписаниеЗатрат", Новый ОписаниеТипов("Булево"));
	ТаблицаАналитики.Колонки.Добавить("СписаниеЗатратНУ", Новый ОписаниеТипов("Булево"));
	ТаблицаАналитики.Колонки.Добавить("НалоговоеНазначение", Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат"));
	
	ТаблицаАналитики.Колонки.Добавить("ИндексАналитики", Новый ОписаниеТипов("Число"));
	
	ТаблицаАналитики.Индексы.Добавить("
	|СпособРаспределенияЗатрат,
	|ХарактерРаспределенияЗатрат,
	|РаспределятьНаПодчиненныеПодразделения,
	|Подразделение,
	|НоменклатурнаяГруппа,
	|Заказ,
	|Продукция,
	|ХарактеристикаПродукции,
	|СерияПродукции,
	|СписаниеЗатрат,
	|СписаниеЗатратНУ,
	|НалоговоеНазначение
	|");
	
	Для Каждого Строка Из ТаблицаЗатрат Цикл
		
		СтруктураИзмерений = СтруктураКлючаАналитикиСпособаРаспределения(
			СтруктураШапкиДокумента,
			Строка
		);
		МассивСтрок = ТаблицаАналитики.НайтиСтроки(СтруктураИзмерений);
		Если МассивСтрок.Количество() > 0 Тогда
			ИндексАналитики = МассивСтрок[0].ИндексАналитики;
		Иначе
			НоваяСтрока = ТаблицаАналитики.Добавить();
			НоваяСтрока.ИндексАналитики = ТаблицаАналитики.Индекс(НоваяСтрока);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураИзмерений);
			
			ИндексАналитики = НоваяСтрока.ИндексАналитики;
		КонецЕсли;
		
		Строка.ИндексАналитики = ИндексАналитики;
			
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ТаблицаАналитикиЗатрат
	|ИЗ
	|	&ТаблицаАналитики КАК ТаблицаАналитики
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаАналитики", ТаблицаАналитики);
	
	Запрос.Выполнить();
	
	РасширеннаяАналитикаУчета.ПоказатьВременнуюТаблицу(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		"ТаблицаАналитикиЗатрат"
	);
	
	
	Возврат ТаблицаАналитики;
	
КонецФункции // СформироватьВременнуюТаблицуРаспределениеЗатрат()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАСПРЕДЕЛЕНИЯ РАСХОДОВ



// Процедура получает ключи аналитики для распределения затрат.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
//	СтрокаВыборкиЗатрат - ВыборкаИзРезультатаЗапроса - Строка выборки из результата запроса
//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете для получения ключа аналитики
//	РаспределениеНаНЗП - Булево - Признак распределения на остаток НЗП
//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
//
// Выходные параметры:
//	АналитикаВидаУчета - СправочникСсылка.КлючиАналитикиВидаУчета - Ключ аналитики
//	АналитикаУчетаЗатрат - СправочникСсылка.КлючиАналитикиУчетаЗатрат - Ключ аналитики
//
Процедура ПолучитьАналитикуРаспределенияЗатратНаВыпуск(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СтрокаВыборкиЗатрат,
	ВидОтраженияВУчете,
	РаспределениеНаНЗП,
	СтруктураКлючиАналитики,
	АналитикаВидаУчета,
	АналитикаУчетаЗатрат
	)
	
	Если Не ЗначениеЗаполнено(АналитикаВидаУчета) Тогда
	
		СтруктураПараметров = Новый Структура;
		Если РаспределениеНаНЗП Тогда
			СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.Затраты);
			
		ИначеЕсли СтрокаВыборки.ВидВыпуска = Перечисления.ВидыВыпуска.Наработка Тогда
			СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.ЗатратыПоНаработке);
			
		Иначе
			СтруктураПараметров.Вставить("РазделУчета", Перечисления.РазделыУчета.ЗатратыНаВыпуск);
			
		КонецЕсли;
		
		Если ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
			СтруктураПараметров.Вставить("Подразделение", СтрокаВыборки.Подразделение);
		
		ИначеЕсли ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете Тогда
			СтруктураПараметров.Вставить("Организация", СтрокаВыборки.Организация);
			СтруктураПараметров.Вставить("ПодразделениеОрганизации", СтрокаВыборки.ПодразделениеОрганизации);
			СтруктураПараметров.Вставить("СчетУчета", СтрокаВыборки.СчетУчета);
			СтруктураПараметров.Вставить("НалоговоеНазначение", СтрокаВыборки.НалоговоеНазначение);
			
		КонецЕсли;

		КлючАналитики = Перечисления.КлючиАналитики.АналитикаВидаУчета;		
			
		АналитикаВидаУчета = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтруктураПараметров,
			КлючАналитики,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(АналитикаУчетаЗатрат)
	Тогда
		АналитикаУчетаЗатрат = РасширеннаяАналитикаУчета.ПолучитьЗначениеКлючаАналитики(
			СтруктураШапкиДокумента,
			СтрокаВыборкиЗатрат,
			Перечисления.КлючиАналитики.АналитикаУчетаЗатрат,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики
		);
	КонецЕсли;
			
КонецПроцедуры // ПолучитьАналитикуРаспределенияЗатратНаВыпуск()

// Функция получает код операции затрат на выпуск по характеру затрат.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	ХарактерЗатрат - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат
//	СтатусМатериальныхЗатрат - ПеречислениеСсылка.СтатусыМатериальныхЗатратНаПроизводство - Статус материальных затрат
//
Функция ПолучитьКодОперацииЗатратыНаВыпускПоХарактеруЗатраты(
	СтруктураШапкиДокумента,
	ХарактерЗатрат,
	СтатусМатериальныхЗатрат
	)
	
	Если ХарактерЗатрат = Перечисления.ХарактерЗатрат.АдминистративныеРасходы Тогда	
		Если СтруктураШапкиДокумента.ДиректКостингАдминистративныеЗатраты Тогда
			КодОперации = Перечисления.КодыОперацийЗатраты.СписаниеЗатрат;
		Иначе
			КодОперации = Перечисления.КодыОперацийЗатраты.СписаниеАдминистративныеРасходы_Регламент;
		КонецЕсли;
		
	ИначеЕсли ХарактерЗатрат = Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы Тогда
		Если СтруктураШапкиДокумента.ДиректКостингОбщепроизводственныеЗатраты Тогда
			КодОперации = Перечисления.КодыОперацийЗатраты.СписаниеЗатрат;
		Иначе
			КодОперации = Перечисления.КодыОперацийЗатраты.СписаниеОбщепроизводственныеРасходы_Регламент;
		КонецЕсли;
		
	ИначеЕсли ХарактерЗатрат = Перечисления.ХарактерЗатрат.БракВПроизводстве Тогда
		КодОперации = Перечисления.КодыОперацийБракВПроизводстве.СписаниеБракВПроизводстве_Регламент;
		
	ИначеЕсли ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы Тогда
		КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеНЗПРегламент;
		
	ИначеЕсли ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПрочиеОперационныеРасходы
		ИЛИ ХарактерЗатрат = Перечисления.ХарактерЗатрат.РасходыНаСбыт
	Тогда
		КодОперации = Перечисления.КодыОперацийЗатраты.СписаниеЗатрат;
		
	КонецЕсли;
	
	Возврат КодОперации;
	
КонецФункции // ПолучитьКодОперацииЗатратыНаВыпускПоХарактеруЗатраты()

// Процедура рассчитает количество и стоимость затрат по коэффициенту.
//
// Параметры:
//	Коэффициент - Число - Коэффициент распределения
//	ВсегоКоэффициент - Число - Сумма коэффициентов распределения
//	СтруктураКоличествоОстатки - Структура - Структура остатков количества
//	СтруктураСтоимостьОстатки - Структура - Структура остатков стоимости
//
// Выходные параметры:
//	СтруктураКоличество - Структура - Структура количества
//	СтруктураСтоимость - Структура - Структура стоимости
//
Процедура РассчитатьКоличествоИСтоимостьПоКоэффициенту(
	Коэффициент,
	ВсегоКоэффициент,
	СтруктураКоличествоОстатки,
	СтруктураСтоимостьОстатки,
	СтруктураКоличество,
	СтруктураСтоимость
	)
	
	СтруктураКоличество = Новый Структура;
	Для Каждого Строка Из СтруктураКоличествоОстатки Цикл
		
		Если Строка.Значение <> 0 Тогда
			Количество = ?(ВсегоКоэффициент <> 0, Окр(Строка.Значение * Коэффициент / ВсегоКоэффициент, 3, 1), 0);
			СтруктураКоличествоОстатки.Вставить(Строка.Ключ, Строка.Значение - Количество);
		Иначе
			Количество = 0;
		КонецЕсли;
		СтруктураКоличество.Вставить(Строка.Ключ, Количество);
		
	КонецЦикла;
	
	СтруктураСтоимость = Новый Структура;
	Для Каждого Строка Из СтруктураСтоимостьОстатки Цикл
		
		Если Строка.Значение <> 0 Тогда
			Стоимость = ?(ВсегоКоэффициент <> 0, Окр(Строка.Значение * Коэффициент / ВсегоКоэффициент, 2, 1), 0);
			СтруктураСтоимостьОстатки.Вставить(Строка.Ключ, Строка.Значение - Стоимость);
		Иначе
			Стоимость = 0;
		КонецЕсли;
		СтруктураСтоимость.Вставить(Строка.Ключ, Стоимость);
		
	КонецЦикла;
	
	ВсегоКоэффициент = ВсегоКоэффициент - Коэффициент;
	
КонецПроцедуры // РассчитатьКоличествоИСтоимостьПоКоэффициенту()

// Процедура выполняет распределение строки расходов на выпуск продукции.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	СтрокаЗатрат - СтрокаТаблицыЗначений - Строка таблицы затрат
//	ВыборкаПоГруппе - ВыборкаИзРезультатаЗапроса - Строка выборки по группировке
//	СтруктураКоличествоВсего - Структура - Структура количества затрат
//	СтруктураСтоимостьВсего - Структура - Структура стоимость затрат
//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
//
Процедура ВыполнитьРаспределениеСтрокиРасходовНаВыпуск(
	СтруктураШапкиДокумента,
	СтрокаЗатрат,
	ВыборкаПоГруппе,
	СтруктураКоличествоВсего,
	СтруктураСтоимостьВсего,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	)
	
	Перем СтруктураКоличествоНаВыпуск;
	Перем СтруктураСтоимостьНаВыпуск;
	Перем СтруктураКоличество;
	Перем СтруктураСтоимость;
	
	ВсегоБаза = ВыборкаПоГруппе.База;
	ВсегоБазаОстатокНЗП = ?(ВыборкаПоГруппе.БазаОстатокНЗП > 0, ВыборкаПоГруппе.БазаОстатокНЗП, 0);
	
	Если (ВсегоБазаОстатокНЗП + ВсегоБаза) <> 0 Тогда
		Коэффициент = ВсегоБаза / (ВсегоБазаОстатокНЗП + ВсегоБаза);
		Коэффициент = ?(Коэффициент < 0, - Коэффициент, Коэффициент);
	Иначе
		Коэффициент = 1;
	КонецЕсли;
	
	// Рассчитывается количество и стоимость затрат, распределяемых на выпуск продукции,
	// за минусов затрат, которые должны остаться в остатках незавершенного производства.
	// В структурах "СтруктураКоличествоВсего" и "СтруктураСтоимостьВсего" остаются остатки затрат,
	// распределяемые на остатки незавершенного производства.
	РассчитатьКоличествоИСтоимостьПоКоэффициенту(
		Коэффициент,
		1, // ВсегоКоэффициент
		СтруктураКоличествоВсего,
		СтруктураСтоимостьВсего,
		СтруктураКоличествоНаВыпуск,
		СтруктураСтоимостьНаВыпуск
	);
	
	// Выборка детальных строк базы распределения.
	Выборка = ВыборкаПоГруппе.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		АналитикаВидаУчета = Выборка.КорАналитикаВидаУчета;
		АналитикаУчетаЗатрат = СтрокаЗатрат.КорАналитикаУчетаЗатрат;
		
		РаспределениеНаНЗП = (Выборка.БазаОстатокНЗП <> 0 И Выборка.База = 0);
		
		// Формируем ключи аналитики, по которым будут отражены распределенные затраты.
		Если Не Выборка.СписаниеЗатрат Тогда
			ПолучитьАналитикуРаспределенияЗатратНаВыпуск(
				СтруктураШапкиДокумента,
				Выборка,
				СтрокаЗатрат,
				СтруктураШапкиДокумента.ВидОтраженияВУчете,
				РаспределениеНаНЗП,
				СтруктураКлючиАналитики,
				АналитикаВидаУчета,
				АналитикаУчетаЗатрат
			);
		КонецЕсли;

		Если РаспределениеНаНЗП Тогда
			РассчитатьКоличествоИСтоимостьПоКоэффициенту(
				1, // Коэффициент
				1, // ВсегоКоэффициент
				СтруктураКоличествоВсего,
				СтруктураСтоимостьВсего,
				СтруктураКоличество,
				СтруктураСтоимость
			);
		Иначе
			РассчитатьКоличествоИСтоимостьПоКоэффициенту(
				Выборка.База,
				ВсегоБаза,
				СтруктураКоличествоНаВыпуск,
				СтруктураСтоимостьНаВыпуск,
				СтруктураКоличество,
				СтруктураСтоимость
			);
		КонецЕсли;
		
		Если СтрокаЗатрат.РаспределениеПоКоличеству Тогда
			Если СтруктураКоличество.Количество = 0 Тогда
				СтруктураСтоимость.Стоимость = 0;
			КонецЕсли;
			Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
			   И СтруктураКоличество.КоличествоНУ = 0
			Тогда
				СтруктураСтоимость.СтоимостьНУ = 0;
				СтруктураСтоимость.НДСВходящий = 0;
				СтруктураСтоимость.НДСКредит   = 0;
			КонецЕсли;
		КонецЕсли;
		
		КодОперации = ПолучитьКодОперацииЗатратыНаВыпускПоХарактеруЗатраты(
			СтруктураШапкиДокумента,
			СтрокаЗатрат.ХарактерЗатрат,
			СтрокаЗатрат.СтатусМатериальныхЗатрат
		);
		
		Если СтрокаЗатрат.ДетализацияПоФиксированнойСтатьеЗатрат Тогда
			АналитикаУчетаЗатратРасход = АналитикаУчетаЗатрат;
		Иначе
			АналитикаУчетаЗатратРасход = СтрокаЗатрат.АналитикаУчетаЗатрат;
		КонецЕсли;
		
		// Если аналитика не меняется, движения не формируем.
		Если СтрокаЗатрат.АналитикаВидаУчета = АналитикаВидаУчета
		   И АналитикаУчетаЗатратРасход = АналитикаУчетаЗатрат
		   И СтрокаЗатрат.АналитикаУчетаПартий = Выборка.АналитикаУчетаПартий
		   И СтрокаЗатрат.АналитикаРаспределенияЗатрат = Выборка.АналитикаРаспределенияЗатрат
		Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не Выборка.СписаниеЗатрат Тогда
			КорАналитикаВидаУчета = АналитикаВидаУчета;
			КорАналитикаУчетаЗатрат = АналитикаУчетаЗатрат;
			КорАналитикаУчетаПартий = Выборка.АналитикаУчетаПартий;
			КорАналитикаРаспределенияЗатрат = Выборка.АналитикаРаспределенияЗатрат;
		Иначе
			КорАналитикаВидаУчета = Неопределено;
			КорАналитикаУчетаЗатрат = Неопределено;
			КорАналитикаУчетаПартий = Неопределено;
			КорАналитикаРаспределенияЗатрат = Неопределено;
		КонецЕсли;
		
		// При учете затрат по сводной статье затрат количество всегда нулевое. 
		Если СтрокаЗатрат.ДетализацияПоФиксированнойСтатьеЗатрат Тогда
			Количество = 0;
			КоличествоНУ = 0;
		Иначе
			Количество = СтруктураКоличество.Количество;
			Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
				КоличествоНУ = СтруктураКоличество.КоличествоНУ;
			КонецЕсли;
		КонецЕсли;
		
		Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
			СтоимостьНУ = СтруктураСтоимость.СтоимостьНУ;
			НДСВходящий = СтруктураСтоимость.НДСВходящий;
			НДСКредит   = СтруктураСтоимость.НДСКредит;
		Иначе
			СтоимостьНУ = 0;
			НДСВходящий = 0;
			НДСКредит   = 0;
		КонецЕсли;
		
		СтоимостьНУСписания  = СтоимостьНУ;
		КоличествоНУСписания = КоличествоНУ;
		НДСВходящийСписания  = НДСВходящий;
		НДСКредитСписания    = НДСКредит;
		
		Если НЕ Выборка.СписаниеЗатрат И Выборка.СписаниеЗатратНУ Тогда
			СтоимостьНУСписания  = 0;	
			КоличествоНУСписания = 0;
			НДСВходящийСписания  = 0;
			НДСКредитСписания    = 0;
		КонецЕсли;	
		
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			СтрокаЗатрат.АналитикаВидаУчета,
			АналитикаУчетаЗатратРасход,
			СтрокаЗатрат.АналитикаУчетаПартий,
			СтрокаЗатрат.АналитикаРаспределенияЗатрат,
			
			КорАналитикаВидаУчета,
			КорАналитикаУчетаЗатрат,
			КорАналитикаУчетаПартий,
			КорАналитикаРаспределенияЗатрат,
			
			ВидДвиженияНакопления.Расход,
			КодОперации,
			Количество,
			СтруктураСтоимость.Стоимость,
			КоличествоНУСписания,
			СтоимостьНУСписания,
			НДСВходящийСписания,
			НДСКредитСписания,
			СтруктураНаборыЗаписей.УчетЗатрат
		);
		
		Если НЕ Выборка.СписаниеЗатрат И Выборка.СписаниеЗатратНУ Тогда
			РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
				СтруктураШапкиДокумента,
				СтрокаЗатрат.АналитикаВидаУчета,
				АналитикаУчетаЗатратРасход,
				СтрокаЗатрат.АналитикаУчетаПартий,
				СтрокаЗатрат.АналитикаРаспределенияЗатрат,
				
				Неопределено,
				Неопределено,
				Неопределено,
				Неопределено,
				
				ВидДвиженияНакопления.Расход,
				Перечисления.КодыОперацийЗатраты.СписаниеЗатрат, // КодОперации
				0, // Количество
				0, // Стоимость
				КоличествоНУ, 
				СтоимостьНУ,
				НДСВходящий,
				НДСКредит, 
				СтруктураНаборыЗаписей.УчетЗатрат
			);
		КонецЕсли;	
		
		Если Не Выборка.СписаниеЗатрат Тогда
			РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
				СтруктураШапкиДокумента,
				КорАналитикаВидаУчета,
				КорАналитикаУчетаЗатрат,
				КорАналитикаУчетаПартий,
				КорАналитикаРаспределенияЗатрат,
				
				СтрокаЗатрат.АналитикаВидаУчета,
				АналитикаУчетаЗатратРасход,
				СтрокаЗатрат.АналитикаУчетаПартий,
				СтрокаЗатрат.АналитикаРаспределенияЗатрат,
				
				ВидДвиженияНакопления.Приход,
				КодОперации,
				Количество,
				СтруктураСтоимость.Стоимость,
				КоличествоНУСписания,
				СтоимостьНУСписания,
				НДСВходящийСписания,
				НДСКредитСписания,
				СтруктураНаборыЗаписей.УчетЗатрат
			);
			
			// Корректировки использования при распределении затрат по базе на затраты на выпуск 
			// с другим налоговым назначением затрат на выпуск
			// Распределение на другие налоговые назначение разрешается или запрещается условием в 
			// СформироватьЗапросПоВременнойТаблицеБазаРаспределенияЗатрат
			Если СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете Тогда
				Если (Выборка.НалоговоеНазначение <> Неопределено И Выборка.НалоговоеНазначение <> СтрокаЗатрат.НалоговоеНазначение) Тогда
					
				БылиКорректировкиНУ = УправлениеЗапасамиРасширеннаяАналитика.СформироватьДвиженияПоКорректировкамИспользованияНУ(
					СтруктураШапкиДокумента,
					СтруктураШапкиДокумента.Дата,
					СтрокаЗатрат.АналитикаВидаУчета,
					СтрокаЗатрат.АналитикаУчетаЗатрат,
					СтрокаЗатрат.АналитикаУчетаПартий,
					СтрокаЗатрат.АналитикаРаспределенияЗатрат,
					КорАналитикаВидаУчета,
					КорАналитикаУчетаЗатрат,
					КорАналитикаУчетаПартий,
					КорАналитикаРаспределенияЗатрат,
					СтруктураНаборыЗаписей.УчетЗатрат,
					СтруктураСтоимость.Стоимость,
					НДСВходящий,
					НДСКредит,
					, // НалоговоеНазначение
					КоличествоНУ
					);
					
				КонецЕсли; 
			КонецЕсли;	
			
		КонецЕсли;
		
				
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьРаспределениеСтрокиРасходовНаВыпуск()	

// Функция проверяет базу распределения на наличие данных для распределения.
// Затраты распределяем по базе, если есть "База приход" и "База" или "База остаток НЗП".
//
// Параметры:
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Строка выборки по группировке
//
// Возвращаемое значение:
//	Булево - Истина - Затраты распределяются по данной базе
//			 Ложь - Затраты не распределяются по данной базе.
//
Функция РаспределятьЗатратыПоСтрокеБазыРаспределения(СтрокаВыборки)
	
	РаспределятьЗатраты = Истина;
	
	Если СтрокаВыборки.База = 0
	   И СтрокаВыборки.БазаОстатокНЗП = 0
	Тогда
		РаспределятьЗатраты = Ложь;
	КонецЕсли;
	
	Возврат РаспределятьЗатраты;
	
КонецФункции // РаспределятьЗатратыПоСтрокеБазыРаспределения()

// Процедура выполняет распределение расходов по заданным способам распределения.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	РезультатЗапросаЗатраты - РезультатЗапроса - Результат запроса по затратам
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
//
Процедура ВыполнитьРаспределениеРасходов(
	СтруктураШапкиДокумента,
	РезультатЗапросаЗатраты,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	)
	
	Перем СтруктураКоличество;
	Перем СтруктураСтоимость;
	
	ТаблицаЗатрат = РезультатЗапросаЗатраты.Выгрузить();
	ТаблицаЗатрат.Колонки.Добавить("ИндексАналитики", Новый ОписаниеТипов("Число"));
	ТаблицаЗатрат.Индексы.Добавить("ИндексАналитики");
	
	ТаблицаАналитики = СформироватьВременнуюТаблицуАналитики(
		СтруктураШапкиДокумента,
		ТаблицаЗатрат,
		МенеджерВременныхТаблиц
	);

	ЗапросПоБазе = СформироватьЗапросПоВременнойТаблицеБазаРаспределенияЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	РезультатЗапросаПоБазе = ЗапросПоБазе.Выполнить();
	
	СтруктураКлючиАналитики = Новый Структура;
	
	// Выборка строк базы распределения по индексу аналитики.
	ВыборкаПоИндексу = РезультатЗапросаПоБазе.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоИндексу.Следующий() Цикл
		
		БазаПриходВсего = 0;
		Выборка = ВыборкаПоИндексу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		// Рассчитывается общая база распределения, равная сумме всех строк базы распределения
		// с учетом коэффициента распределения на подчиненные подразделения.
		Пока Выборка.Следующий() Цикл
			
			// Проверим строку базы распределения затрат.
			Если Не РаспределятьЗатратыПоСтрокеБазыРаспределения(Выборка) Тогда
				Продолжить;
			КонецЕсли;
			
			БазаНаПодчиненные = ?(Выборка.БазаНаПодчиненные <> 0, Выборка.БазаНаПодчиненные, 1);
			БазаПриходВсего = БазаПриходВсего + Выборка.БазаПриход * БазаНаПодчиненные;
		КонецЦикла;
		
		Если БазаПриходВсего = 0 Тогда
			
			Строка = ТаблицаАналитики.Найти(ВыборкаПоИндексу.ИндексАналитики, "ИндексАналитики");
			Если Строка <> Неопределено Тогда
				ОбщегоНазначения.Сообщение("Сумма базы коэф. по " + Строка.СпособРаспределенияЗатрат + " равна 0, для:
					|Характер распределения: " + Строка.ХарактерРаспределенияЗатрат + "
					|Подразделение: " + Строка.Подразделение + "
					|Заказ: " + Строка.Заказ + "
					|Номенклатурная группа: " + Строка.НоменклатурнаяГруппа, СтатусСообщения.Важное
				);
			КонецЕсли;
							
			Продолжить;
			
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ИндексАналитики", ВыборкаПоИндексу.ИндексАналитики);
		
		// Получаем массив затрат, имеющих одинаковый индекс аналитики, соответствующий текущей выборки базы распределения.
		// Данные затраты будут распределены по одинаковой базе распределения.
		МассивЗатрат = ТаблицаЗатрат.НайтиСтроки(СтруктураОтбора);
		Если МассивЗатрат.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаЗатрат Из МассивЗатрат Цикл
			
			СтруктураКоличествоОстатки = Новый Структура;
			СтруктураКоличествоОстатки.Вставить("Количество",  СтрокаЗатрат.КоличествоОстаток);
			
			СтруктураСтоимостьОстатки = Новый Структура;
			СтруктураСтоимостьОстатки.Вставить("Стоимость",  СтрокаЗатрат.СтоимостьОстаток);
			
			// Обнулим остатки в таблице затрат.
			СтрокаЗатрат.КоличествоОстаток = 0;
			СтрокаЗатрат.СтоимостьОстаток = 0;
			
			Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
				
				СтруктураКоличествоОстатки.Вставить("КоличествоНУ",  СтрокаЗатрат.КоличествоОстатокНУ);
				СтруктураСтоимостьОстатки.Вставить("СтоимостьНУ",  СтрокаЗатрат.СтоимостьОстатокНУ);
				СтруктураСтоимостьОстатки.Вставить("НДСВходящий",  СтрокаЗатрат.НДСВходящийОстаток);
				СтруктураСтоимостьОстатки.Вставить("НДСКредит",  СтрокаЗатрат.НДСКредитОстаток);
				
				// Обнулим остатки в таблице затрат.
				СтрокаЗатрат.КоличествоОстатокНУ = 0;
				СтрокаЗатрат.СтоимостьОстатокНУ = 0;
				СтрокаЗатрат.НДСВходящийОстаток = 0;
				СтрокаЗатрат.НДСКредитОстаток = 0;
				
			КонецЕсли;
			
			ТекущаяБаза = БазаПриходВсего;
			
			// Выборка строк базы распределения по индексу базы распределения
			// В данной выборке может быть несколько строк при распределении затрат между подразделениями.
			// Каждая строка выборки соответствует распределению на одно подразделение.
			Выборка.Сбросить();
			Пока Выборка.Следующий() Цикл
				
				// Проверим строку базы распределения затрат.
				Если Не РаспределятьЗатратыПоСтрокеБазыРаспределения(Выборка) Тогда
					Продолжить;
				КонецЕсли;
				
				БазаНаПодчиненные = ?(Выборка.БазаНаПодчиненные <> 0, Выборка.БазаНаПодчиненные, 1);
				
				РассчитатьКоличествоИСтоимостьПоКоэффициенту(
					Выборка.БазаПриход * БазаНаПодчиненные,
					ТекущаяБаза,
					СтруктураКоличествоОстатки,
					СтруктураСтоимостьОстатки,
					СтруктураКоличество,
					СтруктураСтоимость
				);
				
				Если СтрокаЗатрат.РаспределениеПоКоличеству Тогда
					Если СтруктураКоличество.Количество = 0 Тогда
						СтруктураСтоимость.Стоимость = 0;
					КонецЕсли;
					Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
					   И СтруктураКоличество.КоличествоНУ = 0
					Тогда
						СтруктураСтоимость.СтоимостьНУ = 0;
						СтруктураСтоимость.НДСВходящий = 0;
						СтруктураСтоимость.НДСКредит = 0;
					КонецЕсли;
				КонецЕсли;
								
				ВыполнитьРаспределениеСтрокиРасходовНаВыпуск(
					СтруктураШапкиДокумента,
					СтрокаЗатрат,
					Выборка,
					СтруктураКоличество,
					СтруктураСтоимость,
					СтруктураКлючиАналитики,
					СтруктураНаборыЗаписей
				);
								
			КонецЦикла;
			
		КонецЦикла;
				
	КонецЦикла;
	
	
КонецПроцедуры // ВыполнитьРаспределениеРасходов()

// Процедура производит распределение расходов по заданному способу распределения.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//
Процедура РаспределениеРасходовПоСпособуРаспределения(
	СтруктураШапкиДокумента
	)
	
	СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);
	
	Если СтруктураНаборыЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	МассивХарактеровРаспределения = Новый Массив;
	МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.НеУчитыватьПодразделение);
	МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.УчитыватьПодразделение);
	МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.ПроизводственныеРасходы);
	МассивХарактеровРаспределения.Добавить(Перечисления.ХарактерРаспределенияЗатрат.ПустаяСсылка());
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Формируется запрос по данным регистров сведений "Способы распределения статей затрат"
	// и "Способы распределения статей затрат организаций".
	Запрос = ПроцедурыРасчетаСебестоимостиВыпуска.СформироватьЗапросПоСпособамРаспределенияЗатрат(
		СтруктураШапкиДокумента,
		МассивХарактеровРаспределения,
		Истина, // ФормироватьВременнуюТаблицу
		СтруктураШапкиДокумента.ВидОтраженияВУчете,
		МенеджерВременныхТаблиц
	);
	Запрос.Выполнить();
	
	// Формируется временная таблица "АналитикаВидаУчетаЗатраты"
	// с ключами аналитики вида учета по разделу учета "Затраты".
	СформироватьВременнуюТаблицуАналитикаВидаУчетаЗатраты(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	// Формируются временные таблицы базы распределения затрат по данным
	// регистра "База распределения затрат" по соответствующему виду учета.
	СформироватьВременныеТаблицыПоБазеРаспределенияЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	// Формируется временная таблица "УчетЗатрат" по остаткам затрат, подлежащим распределению.
	СформироватьВременнуюТаблицуУчетЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	// Формируются ключи аналитики, по которым будут отражены распределенные затраты.
	СформироватьКлючиАналитикиВидаУчетаБазаРаспределения(
		СтруктураШапкиДокумента,
		СтруктураШапкиДокумента.ВидОтраженияВУчете,
		МенеджерВременныхТаблиц
	);
	СформироватьКлючиАналитикиУчетаЗатрат(
		СтруктураШапкиДокумента,
		СтруктураШапкиДокумента.ВидОтраженияВУчете,
		МенеджерВременныхТаблиц
	);

	// Формируется запрос по остаткам затрат, подлежащим распределению, по данным временной таблицы "УчетЗатрат".
	// Запрос формируется по-разному в зависимости от настройки детализации затрат, указанной в учетной политике.
	Запрос = СформироватьЗапросПоРаспределяемымЗатратам(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	РезультатЗапросаЗатраты = Запрос.Выполнить();
	Если Не РезультатЗапросаЗатраты.Пустой() Тогда
		
		Если СтруктураШапкиДокумента.ДетализацияПоФиксированнойСтатьеЗатрат Тогда
				
			// Перенос статей затрат на обобщенные ("сводные") статьи затрат.
			ПеренестиРасходыНаОбобщенныеСтатьиЗатрат(
				СтруктураШапкиДокумента,
				МенеджерВременныхТаблиц,
				СтруктураНаборыЗаписей
			);
		КонецЕсли;
	
		// Распределение остатков распределяемых расходов по подготовленной базе распределения.
		ВыполнитьРаспределениеРасходов(
			СтруктураШапкиДокумента,
			РезультатЗапросаЗатраты,
			МенеджерВременныхТаблиц,
			СтруктураНаборыЗаписей
		);
		
	КонецЕсли;
	
	Если СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность() Тогда
		СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры // РаспределениеРасходовПоСпособуРаспределения()

// Выполняет действие "Распределение расходов по базе" документа "Расчет себестоимости"
//
Процедура РаспределениеРасходов(СтруктураШапкиДокумента, ТаблицаОшибок)
	

	// Распределим расходы
	РаспределениеРасходовПоСпособуРаспределения(СтруктураШапкиДокумента);
	
	ДобавитьЗаписьВПротоколРасчета("Расходы распределены", ТаблицаОшибок, СтруктураШапкиДокумента);
	
	// Рассчитаем себестоимость
	БылиКорректировкиНУ = РасчетФактическойСебестоимостиВыпуска(
		СтруктураШапкиДокумента,
		ТаблицаОшибок,
		Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеРасходовПоБазе
	);
	Если БылиКорректировкиНУ Тогда
		БылиКорректировкиНУ = РасчетФактическойСебестоимостиВыпуска(
			СтруктураШапкиДокумента,
			ТаблицаОшибок,
			Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеРасходовПоБазе
		);
	КонецЕсли; 
	
	ДобавитьЗаписьВПротоколРасчета("Рассчитана фактическая себестоимость", ТаблицаОшибок, СтруктураШапкиДокумента);
	
	// после распределения затрат и расчета фактической себестоимости на 92-94 счетах могут "зависнуть" копейки, спишем их
	СписаниеЗатрат(СтруктураШапкиДокумента);
	
КонецПроцедуры // РаспределениеРасходов

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СВЕРТКИ ДВИЖЕНИЙ ПО РЕГИСТРУ "УЧЕТ ЗАТРАТ"

// Функция формирует запрос по движениям регистра "Учет затрат".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//
// Возвращаемое значение:
//   Запрос – Запрос по регистру "Учет затрат".
//
Функция СформироватьЗапросПоДвижениямРегистраУчетЗатрат(
	СтруктураШапкиДокумента
	)
	
	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|		
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаУчетаПартий,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.ВидДвижения,
	|	УчетЗатрат.КодОперации,
	|	УчетЗатрат.Период,
	|		
	|	//ДляУпрУчета 0 КАК НДСВходящий,
	|	//ДляУпрУчета 0 КАК НДСКредит,
	|	//ДляУпрУчета 0 КАК СтоимостьНУ,
	|	//ДляУпрУчета 0 КАК КоличествоНУ,
	|
	|	//ДляРеглУчета СУММА(УчетЗатрат.НДСВходящий) КАК НДСВходящий,
	|	//ДляРеглУчета СУММА(УчетЗатрат.НДСКредит) КАК НДСКредит,
	|	//ДляРеглУчета СУММА(УчетЗатрат.СтоимостьНУ) КАК СтоимостьНУ,
	|	//ДляРеглУчета СУММА(УчетЗатрат.КоличествоНУ) КАК КоличествоНУ,
	|
	|	СУММА(УчетЗатрат.Стоимость) КАК Стоимость,
	|	СУММА(УчетЗатрат.Количество) КАК Количество
	|
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК УчетЗатрат
	|ГДЕ
	|	УчетЗатрат.Регистратор = &Регистратор
	|		
	|СГРУППИРОВАТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаУчетаПартий,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.ВидДвижения,
	|	УчетЗатрат.КодОперации,
	|	УчетЗатрат.Период
	|		
	|УПОРЯДОЧИТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаУчетаПартий,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаУчетаПартий,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.ВидДвижения,
	|	УчетЗатрат.КодОперации
	|";
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями,
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Регистратор", СтруктураШапкиДокумента.Ссылка);
	
	Возврат Запрос;

КонецФункции // СформироватьЗапросПоДвижениямРегистраУчетЗатрат()

// Процедура производит свертку движений по регистру "Учет затрат".
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//
Процедура СверткаДвиженийПоРегиструУчетЗатрат(СтруктураШапкиДокумента)
	
	СтруктураИменРегистров = Новый Структура;
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		СтруктураИменРегистров.Вставить("УчетЗатрат", "УчетЗатрат");
	Иначе
		СтруктураИменРегистров.Вставить("УчетЗатрат", "УчетЗатратРегл");
	КонецЕсли;
	
	СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(
		СтруктураШапкиДокумента,
		СтруктураИменРегистров
	);
	
	Запрос = СформироватьЗапросПоДвижениямРегистраУчетЗатрат(СтруктураШапкиДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;     	
	КонецЕсли;
	
	// Очистка движений по регистру.
	СтруктураНаборыЗаписей.УчетЗатрат.Записать();
		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Выборка.КорАналитикаВидаУчета,
			Выборка.КорАналитикаУчетаЗатрат,
			Выборка.КорАналитикаУчетаПартий,
			Выборка.КорАналитикаРаспределенияЗатрат,
			
			Выборка.ВидДвижения,
			Выборка.КодОперации,
			Выборка.Количество,
			Выборка.Стоимость,
			Выборка.КоличествоНУ,
			Выборка.СтоимостьНУ,
			Выборка.НДСВходящий,
			Выборка.НДСКредит,
			СтруктураНаборыЗаписей.УчетЗатрат,
			Выборка.Период
		);
		
	КонецЦикла;
	
	Если СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность() Тогда
		СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры // СверткаДвиженийПоРегиструУчетЗатрат()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПРОВОДОК ПО ВЫПУСКУ ПРОДУКЦИИ

// Функция формирует текст запроса по регистрам "Учет затрат" и "Выпуск продукции и услуг".
//
// Возвращаемое значение:
//   Текст – текст запроса
//
Функция СформироватьТекстЗапросаПоРегиструВыпускПродукцииИУслуг()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|   ВыпускПродукции.КодОперации,
	|    
	|	// Аналитика учета выпуска
	|	АналитикаВыпускаПродукции.Организация,
	|	АналитикаВыпускаПродукции.Подразделение,
	|	АналитикаВыпускаПродукции.НоменклатурнаяГруппа,
	|
	|	АналитикаВыпускаПродукции.Продукция,
	|	ПРЕДСТАВЛЕНИЕ(АналитикаВыпускаПродукции.Продукция),
	|	АналитикаВыпускаПродукции.ХарактеристикаПродукции,
	|	АналитикаВыпускаПродукции.СерияПродукции,
	|	АналитикаВыпускаПродукции.Спецификация,
	|
	|	АналитикаВыпускаПродукции.СчетУчета КАК СчетЗатрат,
	|	АналитикаВыпускаПродукции.НалоговоеНазначение КАК НалоговоеНазначение,
	|
	|	// Аналитика партионного учета
	|	АналитикаВыпускаПродукции.Заказ,
	|	АналитикаВыпускаПродукции.ЗаказПолучатель,
	|	АналитикаВыпускаПродукции.СкладПолучатель,
	|	
	|	// Аналитика учета затрат.
	|	АналитикаВыпускаПродукции.ПодразделениеПолучатель,
	|	АналитикаВыпускаПродукции.СчетДт,
	|	АналитикаВыпускаПродукции.НалоговоеНазначениеПолучатель КАК НалоговоеНазначениеПолучатель,
	|	АналитикаВыпускаПродукции.НоменклатурнаяГруппаПолучатель,
	|	АналитикаВыпускаПродукции.СтатьяЗатратПолучатель,
	|	АналитикаВыпускаПродукции.СтатьяЗатратПолучатель.ХарактерЗатрат КАК ХарактерЗатрат,
	|
	|	// Аналитика учета прочих затрат
	|	АналитикаВыпускаПродукции.СубконтоДт1,
	|	АналитикаВыпускаПродукции.СубконтоДт2,
	|	АналитикаВыпускаПродукции.СубконтоДт3,
	|	АналитикаВыпускаПродукции.СубконтоДтНУ1,
	|	АналитикаВыпускаПродукции.СубконтоДтНУ2,
	|	АналитикаВыпускаПродукции.СубконтоДтНУ3,
	|
	|	ВыпускПродукции.ФактическаяСтоимость,
	|	ВыпускПродукции.ФактическаяСтоимостьНУ,
	|	ВыпускПродукции.ПлановаяСтоимость,
	|	ВыпускПродукции.ПлановаяСтоимостьНУ
	|	
	|ИЗ (
	|	ВЫБРАТЬ
	|		ВыпускПродукции.АналитикаВидаУчета,
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.АналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаВидаУчета,
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|		ВыпускПродукции.КорАналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.КодОперации,
	|		
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|				ВыпускПродукции.Стоимость
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ФактическаяСтоимость,
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|				ВыпускПродукции.СтоимостьНУ
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ФактическаяСтоимостьНУ,
	|		
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Не Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|			ТОГДА
	|				ВыпускПродукции.Стоимость
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ПлановаяСтоимость,
	|		СУММА(
	|			ВЫБОР КОГДА ВыпускПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Не Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|			ТОГДА
	|				ВыпускПродукции.СтоимостьНУ
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|			) КАК ПлановаяСтоимостьНУ
	|	ИЗ
	|		РегистрНакопления.УчетЗатратРегл КАК ВыпускПродукции
	|	ГДЕ
	|		ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|		И ВыпускПродукции.Активность
	|		И ВыпускПродукции.АналитикаВидаУчета В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаВыпуск КАК РегистрАналитикаВидаУчета
	|		)
	|	СГРУППИРОВАТЬ ПО
	|		ВыпускПродукции.АналитикаВидаУчета,
	|		ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.АналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаВидаУчета,
	|		ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|		ВыпускПродукции.КорАналитикаУчетаПартий,
	|		ВыпускПродукции.КорАналитикаРаспределенияЗатрат,
	|		ВыпускПродукции.КодОперации
	|		
	|	) КАК ВыпускПродукции
	|	
	|	// Аналитика учета выпуска
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		АналитикаВыпускаПродукции КАК АналитикаВыпускаПродукции
	|	ПО 
	|		ВыпускПродукции.АналитикаВидаУчета = АналитикаВыпускаПродукции.АналитикаВидаУчета
	|		И ВыпускПродукции.АналитикаРаспределенияЗатрат = АналитикаВыпускаПродукции.АналитикаРаспределенияЗатрат
	|		И ВыпускПродукции.АналитикаУчетаПартий = АналитикаВыпускаПродукции.АналитикаУчетаПартий
	|		И ВыпускПродукции.КорАналитикаВидаУчета 
	|			= АналитикаВыпускаПродукции.КорАналитикаВидаУчета
	|		И ВыпускПродукции.КорАналитикаУчетаЗатрат 
	|			= АналитикаВыпускаПродукции.КорАналитикаУчетаЗатрат
	|		И ВыпускПродукции.КорАналитикаУчетаПартий 
	|			= АналитикаВыпускаПродукции.КорАналитикаУчетаПартий
	|		И ВыпускПродукции.КорАналитикаРаспределенияЗатрат 
	|			= АналитикаВыпускаПродукции.КорАналитикаРаспределенияЗатрат
	|
	|ГДЕ
	|	ВыпускПродукции.ФактическаяСтоимость <> 0
	|	ИЛИ ВыпускПродукции.ФактическаяСтоимостьНУ <> 0
	|	ИЛИ ВыпускПродукции.ПлановаяСтоимость <> 0
	|	ИЛИ ВыпускПродукции.ПлановаяСтоимостьНУ <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукции.АналитикаВидаУчета,
	|	ВыпускПродукции.АналитикаРаспределенияЗатрат,
	|	ВыпускПродукции.АналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаВидаУчета,
	|	ВыпускПродукции.КорАналитикаУчетаЗатрат,
	|	ВыпускПродукции.КорАналитикаУчетаПартий,
	|	ВыпускПродукции.КорАналитикаРаспределенияЗатрат
	|
	|";	

	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоРегиструВыпускПродукцииИУслуг()

// Функция формирует запрос по регистрам "Учет затрат" и "Выпуск продукции и услуг".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//   Запрос – Запрос по регистрам
//
Функция СформироватьЗапросПоРегиструВыпускПродукцииИУслуг(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	СформироватьВременнуюТаблицуАналитикаВыпускаПродукции(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	ТекстЗапроса = СформироватьТекстЗапросаПоРегиструВыпускПродукцииИУслуг();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
	
	Возврат Запрос;

КонецФункции // СформироватьЗапросПоРегиструВыпускПродукцииИУслуг()

// Процедура формирует проводки по выпуску продукции и услуг.
//
// Параметры
//  СтруктураШапкиДокумента – Структура – Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
//
Процедура ФормированиеПроводокПоВыпускуПродукции(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	СтруктураНаборыЗаписей
	)
	
	Перем СоответствиеКодОперацииСодержание;
	
	ЗапросПоВыпуску = СформироватьЗапросПоРегиструВыпускПродукцииИУслуг(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	РезультатЗапроса = ЗапросПоВыпуску.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.КодОперации = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад Тогда
			ХарактерЗатрат = Неопределено;
			
		ИначеЕсли СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
			ХарактерЗатрат = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(
				Выборка.СчетДт, 
				Выборка.СтатьяЗатратПолучатель
			);
			
		ИначеЕсли СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
			ХарактерЗатрат = Выборка.ХарактерЗатрат;
			
		КонецЕсли;
		
		ПроцедурыРасчетаСебестоимостиВыпуска.СформироватьДвиженияПоРегиструБухгалтерииВыпускПродукции(
			СтруктураШапкиДокумента,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
			Выборка,
			Выборка.ФактическаяСтоимость - Выборка.ПлановаяСтоимость, // СуммаКорректировки,
			Выборка.ФактическаяСтоимостьНУ - Выборка.ПлановаяСтоимостьНУ, // СуммаНУКорректировки,
			ХарактерЗатрат,
			Ложь, // КосвенныеЗатраты,
			Ложь, // ЗатратыВстречногоВыпуска,
			СоответствиеКодОперацииСодержание,
			СтруктураНаборыЗаписей.Хозрасчетный
		);
		
	КонецЦикла;
	
КонецПроцедуры // ФормированиеПроводокПоВыпускуПродукции()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПРОВОДОК ПО РАСПРЕДЕЛЕННЫМ ЗАТРАТАМ

// Процедура формирует временную таблицу кодов операций списания затрат
Процедура СформироватьВременнуюТаблицуКодовОперацийСписанияЗатрат(МенеджерВременныхТаблиц)
	
	МассивКодовОперацийСписанияЗатрат = КорректировкаСтоимостиУчетЗатрат.ПолучитьМассивКодовОперацийСписаниеЗатрат();
	
	ТаблицаКодовОперацийСписанияЗатрат = Новый ТаблицаЗначений;
	
	ОписаниеТипов = Новый ОписаниеТипов("ПеречислениеСсылка.КодыОперацийЗатраты, 
		|ПеречислениеСсылка.КодыОперацийНезавершенноеПроизводство,
		|ПеречислениеСсылка.КодыОперацийЗатратыНаВыпускПродукции,
		|ПеречислениеСсылка.КодыОперацийБракВПроизводстве");
	ТаблицаКодовОперацийСписанияЗатрат.Колонки.Добавить("КодОперации", ОписаниеТипов);
	
	Для каждого КодОперации Из МассивКодовОперацийСписанияЗатрат Цикл
		НоваяСтрока = ТаблицаКодовОперацийСписанияЗатрат.Добавить();
		НоваяСтрока.КодОперации = КодОперации;
	КонецЦикла;
	
	// Поместим таблицу значений во временную таблицу
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодОперации
		|	
		|ПОМЕСТИТЬ КодыОперацийСписанияЗатрат
		|ИЗ
		|	&ТаблицаКодовОперацийСписанияЗатрат КАК ТаблицаКодовОперацийСписанияЗатрат";
	Запрос.УстановитьПараметр("ТаблицаКодовОперацийСписанияЗатрат", ТаблицаКодовОперацийСписанияЗатрат);
	Запрос.Выполнить();

КонецПроцедуры // СформироватьВременнуюТаблицуКодовОперацийСписанияЗатрат

// Процедура формирует временную таблицу кодов операций прямых затрат
Процедура СформироватьВременнуюТаблицуКодовОперацийПрямыхЗатрат(МенеджерВременныхТаблиц)
	
	МассивКодовОперацийПрямыеЗатраты = Новый Массив;
	МассивКодовОперацийПрямыеЗатраты.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты);
	МассивКодовОперацийПрямыеЗатраты.Добавить(Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ОтрицательныеЗатраты);
	
	ТаблицаКодовОперацийПрямыхЗатрат = Новый ТаблицаЗначений;
	ТаблицаКодовОперацийПрямыхЗатрат.Колонки.Добавить("КодОперации", Новый ОписаниеТипов("ПеречислениеСсылка.КодыОперацийЗатратыНаВыпускПродукции"));
	
	Для каждого КодОперации Из МассивКодовОперацийПрямыеЗатраты Цикл
		НоваяСтрока = ТаблицаКодовОперацийПрямыхЗатрат.Добавить();
		НоваяСтрока.КодОперации = КодОперации;
	КонецЦикла;
	
	// Поместим таблицу значений во временную таблицу
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодОперации
		|	
		|ПОМЕСТИТЬ КодыОперацийПрямыхЗатрат
		|ИЗ
		|	&ТаблицаКодовОперацийПрямыхЗатрат КАК ТаблицаКодовОперацийПрямыхЗатрат";
	Запрос.УстановитьПараметр("ТаблицаКодовОперацийПрямыхЗатрат", ТаблицаКодовОперацийПрямыхЗатрат);
	Запрос.Выполнить();
	
КонецПроцедуры // СформироватьВременнуюТаблицуКодовОперацийПрямыхЗатрат

// Функция формирует текст запроса по регистру "Учет затрат".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоСтоимостиРаспределенныхЗатрат()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.КодОперации,
	|	
	|	СУММА(УчетЗатрат.Стоимость) КАК Стоимость,
	|	СУММА(УчетЗатрат.СтоимостьНУ) КАК СтоимостьНУ,
	|	СУММА(УчетЗатрат.НДСВходящий) КАК НДСВходящий,
	|	СУММА(УчетЗатрат.НДСКредит) КАК НДСКредит
	|	
	|ПОМЕСТИТЬ Затраты 
	|ИЗ
	|	РегистрНакопления.УчетЗатратРегл КАК УчетЗатрат
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		УчетЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		И РегистрАналитикаВидаУчета.Организация = &Организация
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		КодыОперацийСписанияЗатрат КАК КодыОперацийСписанияЗатрат
	|	ПО 
	|		УчетЗатрат.КодОперации = КодыОперацийСписанияЗатрат.КодОперации
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КодыОперацийПрямыхЗатрат КАК КодыОперацийПрямыхЗатрат
	|	ПО
	|		УчетЗатрат.КодОперации = КодыОперацийПрямыхЗатрат.КодОперации
	|
	|ГДЕ
	|	УчетЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|	И УчетЗатрат.Активность
	|	И (УчетЗатрат.Регистратор = &Регистратор
	|		ИЛИ НЕ КодыОперацийПрямыхЗатрат.КодОперации ЕСТЬ NULL)
	|	И УчетЗатрат.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|СГРУППИРОВАТЬ ПО
	|	УчетЗатрат.АналитикаВидаУчета,
	|	УчетЗатрат.АналитикаУчетаЗатрат,
	|	УчетЗатрат.АналитикаРаспределенияЗатрат,
	|	
	|	УчетЗатрат.КорАналитикаВидаУчета,
	|	УчетЗатрат.КорАналитикаУчетаЗатрат,
	|	УчетЗатрат.КорАналитикаРаспределенияЗатрат,
	|	УчетЗатрат.КодОперации
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|
	|ВЫБРАТЬ
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации КАК Подразделение,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчета, РегистрАналитикаУчетаПрочихЗатрат.СчетУчета) КАК СчетУчетаПолучатель,
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.НалоговоеНазначение, РегистрАналитикаУчетаПрочихЗатрат.НалоговоеНазначение) КАК НалоговоеНазначениеПолучатель,
	|	РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации КАК ПодразделениеПолучатель,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ЕСТЬNULL(РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат, РегистрАналитикаУчетаЗатрат.ХарактерЗатрат) КАК ХарактерЗатрат,
	|	ЕСТЬNULL(РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, РегистрАналитикаУчетаПрочихЗатрат.Субконто1) КАК НоменклатурнаяГруппаПолучатель,
	|	
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто1 КАК Субконто1,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто2 КАК Субконто2,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто3 КАК Субконто3,
	|	
	|
	|	Затраты.КодОперации,
	|	
	|	СУММА(Затраты.Стоимость) КАК Стоимость,
	|	СУММА(Затраты.СтоимостьНУ) КАК СтоимостьНУ,
	|	СУММА(Затраты.НДСВходящий) КАК НДСВходящий,
	|	СУММА(Затраты.НДСКредит) КАК НДСКредит
	|
	|ИЗ 
	|	Затраты КАК Затраты
	|		
	|	// Аналитика затрат
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|	ПО
	|		Затраты.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		
	|	// Аналитика распределения
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидаУчета КАК РегистрКорАналитикаВидаУчета
	|	ПО
	|		Затраты.КорАналитикаВидаУчета = РегистрКорАналитикаВидаУчета.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПрочихЗатрат КАК РегистрАналитикаУчетаПрочихЗатрат
	|	ПО
	|		Затраты.КорАналитикаВидаУчета = РегистрАналитикаУчетаПрочихЗатрат.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрКорАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.КорАналитикаУчетаЗатрат = РегистрКорАналитикаУчетаЗатрат.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрКорАналитикаРаспределенияЗатрат
	|	ПО
	|		Затраты.КорАналитикаРаспределенияЗатрат = РегистрКорАналитикаРаспределенияЗатрат.Ссылка	
	|			
	|СГРУППИРОВАТЬ ПО
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчета, РегистрАналитикаУчетаПрочихЗатрат.СчетУчета),
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.НалоговоеНазначение, РегистрАналитикаУчетаПрочихЗатрат.НалоговоеНазначение),
	|	РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	ЕСТЬNULL(РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат, РегистрАналитикаУчетаЗатрат.ХарактерЗатрат),
	|	ЕСТЬNULL(РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, РегистрАналитикаУчетаПрочихЗатрат.Субконто1),
	|	
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто1,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто2,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто3,
	|	
	|	
	|	Затраты.КодОперации
	|			
	|УПОРЯДОЧИТЬ ПО
	|	РегистрАналитикаВидаУчета.СчетУчета,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение,
	|	РегистрАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.СчетУчета, РегистрАналитикаУчетаПрочихЗатрат.СчетУчета),
	|	ЕСТЬNULL(РегистрКорАналитикаВидаУчета.НалоговоеНазначение, РегистрАналитикаУчетаПрочихЗатрат.НалоговоеНазначение),
	|	РегистрКорАналитикаВидаУчета.ПодразделениеОрганизации,
	|	РегистрКорАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	ЕСТЬNULL(РегистрКорАналитикаУчетаЗатрат.ХарактерЗатрат, РегистрАналитикаУчетаЗатрат.ХарактерЗатрат),
	|	ЕСТЬNULL(РегистрКорАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа, РегистрАналитикаУчетаПрочихЗатрат.Субконто1),
	|
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто1,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто2,
	|	РегистрАналитикаУчетаПрочихЗатрат.Субконто3,
	|	
	|
	|	Затраты.КодОперации
	|";
		
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоСтоимостиРаспределенныхЗатрат()

// Функция формирует запрос по регистру "Учет затрат организаций".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//
// Возвращаемое значение:
//   Запрос – Запрос по регистру "Учет затрат организаций".
//
Функция СформироватьЗапросПоСтоимостиРаспределенныхЗатрат(
	СтруктураШапкиДокумента
	)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВременнуюТаблицуКодовОперацийСписанияЗатрат(МенеджерВременныхТаблиц);
	СформироватьВременнуюТаблицуКодовОперацийПрямыхЗатрат(МенеджерВременныхТаблиц);
	
	ТекстЗапроса = СформироватьТекстЗапросаПоСтоимостиРаспределенныхЗатрат();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("Регистратор", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	
	Возврат Запрос;

КонецФункции // СформироватьЗапросПоСтоимостиРаспределенныхЗатрат()

// Процедура формирует проводки по распределению затрат.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров.
//
Процедура ФормированиеПроводокПоРаспределениюЗатрат(
	СтруктураШапкиДокумента,
	СтруктураНаборыЗаписей
	)
	
	Запрос = СформироватьЗапросПоСтоимостиРаспределенныхЗатрат(СтруктураШапкиДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.КодОперации = Перечисления.КодыОперацийЗатраты.СписаниеЗатрат Тогда
			
			СтруктураЗатраты = Новый Структура;
			СтруктураЗатраты.Вставить("СчетУчета", Выборка.СчетУчета);
			СтруктураЗатраты.Вставить("Подразделение", Выборка.Подразделение);
			СтруктураЗатраты.Вставить("НоменклатурнаяГруппа", Выборка.НоменклатурнаяГруппа);
			СтруктураЗатраты.Вставить("СтатьяЗатрат", Выборка.СтатьяЗатрат);
			СтруктураЗатраты.Вставить("Организация", СтруктураШапкиДокумента.Организация);
			СтруктураЗатраты.Вставить("Заказ");
			
			СтруктураЗатраты.Вставить("НалоговоеНазначение", Выборка.НалоговоеНазначение);
			
			СчетУчетаПолучатель = Выборка.СчетУчетаПолучатель;
			Если Не ЗначениеЗаполнено(СчетУчетаПолучатель) Тогда
				СчетУчетаПолучатель	= ПланыСчетов.Хозрасчетный.РезультатОперационнойДеятельности;
			КонецЕсли; 
			
			ПроцедурыРасчетаСебестоимостиВыпуска.СформироватьДвиженияПоРегиструБухгалтерииСписаниеЗатрат(
				СтруктураШапкиДокумента,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
				СтруктураЗатраты,
				СчетУчетаПолучатель,
				Выборка.НоменклатурнаяГруппаПолучатель,
				Выборка.ХарактерЗатрат,
				Выборка.Стоимость,
				Выборка.СтоимостьНУ,
				СтруктураНаборыЗаписей.Хозрасчетный,
				Новый Структура("Субконто1, Субконто2, Субконто3",
					Выборка.Субконто1,
					Выборка.Субконто2,
					Выборка.Субконто3)
			);
			
		Иначе
			СтруктураЗатраты = Новый Структура;
			СтруктураЗатраты.Вставить("Организация", СтруктураШапкиДокумента.Организация);
			СтруктураЗатраты.Вставить("СчетУчета", Выборка.СчетУчета);
			СтруктураЗатраты.Вставить("Подразделение", Выборка.Подразделение);
			СтруктураЗатраты.Вставить("НоменклатурнаяГруппа", Выборка.НоменклатурнаяГруппа);
			СтруктураЗатраты.Вставить("СтатьяЗатрат", Выборка.СтатьяЗатрат);
			СтруктураЗатраты.Вставить("Заказ");
			
			СтруктураЗатраты.Вставить("НалоговоеНазначение", Выборка.НалоговоеНазначение);
			
			СтруктураРаспределение = Новый Структура;
			СтруктураРаспределение.Вставить("Организация", СтруктураШапкиДокумента.Организация);
			СтруктураРаспределение.Вставить("СчетУчета", Выборка.СчетУчетаПолучатель);
			СтруктураРаспределение.Вставить("Подразделение", Выборка.ПодразделениеПолучатель);
			СтруктураРаспределение.Вставить("НоменклатурнаяГруппа", Выборка.НоменклатурнаяГруппаПолучатель);
			СтруктураРаспределение.Вставить("Организация", СтруктураШапкиДокумента.Организация);
			СтруктураРаспределение.Вставить("СпособРаспределения");
			СтруктураРаспределение.Вставить("Заказ");
			
			СтруктураРаспределение.Вставить("НалоговоеНазначениеПоФакту", Выборка.НалоговоеНазначениеПолучатель);
			
			ПроцедурыРасчетаСебестоимостиВыпуска.СформироватьДвиженияПоРегиструБухгалтерииРаспределениеЗатрат(
				СтруктураШапкиДокумента,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете,
				СтруктураЗатраты,
				СтруктураРаспределение,
				Выборка.СтатьяЗатрат,
				Выборка.ХарактерЗатрат,
				Выборка.Стоимость,
				Выборка.СтоимостьНУ,
				СтруктураНаборыЗаписей.Хозрасчетный
			);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ФормированиеПроводокПоРаспределениюЗатрат()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ПРОВОДОК ПО БУХГАЛТЕРСКОМУ И НАЛОГОВОМУ УЧЕТУ

// Процедура формирует проводки по бухгалтерскому и налоговому учету.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//
Процедура ФормированиеДвиженийПоАналитическимРегистрам(СтруктураШапкиДокумента)
	
	СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	СформироватьВременнуюТаблицуАналитикаВидаУчетаВыпуск(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ссылка", СтруктураШапкиДокумента.Ссылка);
	СтруктураПараметров.Вставить("Дата", СтруктураШапкиДокумента.Дата);
	СтруктураПараметров.Вставить("Движения", СтруктураНаборыЗаписей);
	СтруктураПараметров.Вставить("ОтражатьВБухгалтерскомУчете", СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете);
	СтруктураПараметров.Вставить("СтруктураКлючиАналитики", Новый Структура());

	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		
		КорректировкаСтоимостиУчетЗатрат.СформироватьДвиженияПоРезультатамКорректировкиУпр(СтруктураПараметров);
		
	Иначе
		Если Не СтруктураШапкиДокумента.Свойство("ЕстьНалогНаПрибыль") Тогда
		  	ПараметрыУчетнойПолитикиРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация, Ложь);
		  	Если ЗначениеЗаполнено(ПараметрыУчетнойПолитикиРегл) Тогда
		  		СтруктураПараметров.Вставить("ЕстьНалогНаПрибыль", ПараметрыУчетнойПолитикиРегл.ЕстьНалогНаПрибыль);
				СтруктураПараметров.Вставить("ЕстьНалогНаПрибыльДо2015", ПараметрыУчетнойПолитикиРегл.ЕстьНалогНаПрибыльДо2015);
				СтруктураПараметров.Вставить("ЕстьНалогНаПрибыльС2015", ПараметрыУчетнойПолитикиРегл.ЕстьНалогНаПрибыльС2015);
		  	Иначе
		  		СтруктураПараметров.Вставить("ЕстьНалогНаПрибыль", Ложь);
				СтруктураПараметров.Вставить("ЕстьНалогНаПрибыльДо2015", Ложь);
				СтруктураПараметров.Вставить("ЕстьНалогНаПрибыльС2015", Ложь);
		  	КонецЕсли; 
		Иначе
		  	СтруктураПараметров.Вставить("ЕстьНалогНаПрибыль", СтруктураШапкиДокумента.ЕстьНалогНаПрибыль);
			СтруктураПараметров.Вставить("ЕстьНалогНаПрибыльДо2015", СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015);
			СтруктураПараметров.Вставить("ЕстьНалогНаПрибыльС2015", СтруктураШапкиДокумента.ЕстьНалогНаПрибыльС2015);
		КонецЕсли;			
		
		КорректировкаСтоимостиУчетЗатрат.СформироватьДвиженияПоРезультатамКорректировкиРегл(СтруктураПараметров);
		
		// Сформируем проводки по распределению затрат.
		ФормированиеПроводокПоРаспределениюЗатрат(
			СтруктураШапкиДокумента,
			СтруктураНаборыЗаписей
		);
				
		// Сформируем проводки по выпуску продукции и услуг.
		ФормированиеПроводокПоВыпускуПродукции(
			СтруктураШапкиДокумента,
			МенеджерВременныхТаблиц,
			СтруктураНаборыЗаписей
		);
	
		Если СтруктураНаборыЗаписей.Хозрасчетный.Модифицированность() Тогда
			СтруктураНаборыЗаписей.Хозрасчетный.Записать(Ложь);
		КонецЕсли;
		
	
	КонецЕсли;
	
КонецПроцедуры // ФормированиеПроводокПоРегламентированномуУчету()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СПИСАНИЯ ЗАТРАТ

// Функция формирует текст запроса по регистру "Учет затрат".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоСписываемымЗатратам()
	
	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	
	|	Затраты.АналитикаВидаУчета,
	|	Затраты.АналитикаУчетаЗатрат,
	|	Затраты.АналитикаУчетаПартий,
	|	Затраты.АналитикаРаспределенияЗатрат,
	|	
	// |	РегистрАналитикаУчетаЗатрат.ХарактерЗатрат,
	|
	|	//ДляРеглУчета 	Затраты.СтоимостьНУОстаток  КАК СтоимостьНУОстаток,
	|   //ДляРеглУчета 	Затраты.КоличествоНУОстаток КАК КоличествоНУОстаток,
	|
	|	//ДляРеглУчета 	Затраты.НДСВходящийОстаток  КАК НДСВходящийОстаток,
	|	//ДляРеглУчета 	Затраты.НДСКредитОстаток    КАК НДСКредитОстаток,
	|
	|	Затраты.СтоимостьОстаток  КАК СтоимостьОстаток,
	|	Затраты.КоличествоОстаток КАК КоличествоОстаток
	|
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(&КонГраница,
	|		АналитикаВидаУчета В (
	|			ВЫБРАТЬ
	|				РегистрАналитикаВидаУчета.Ссылка
	|			ИЗ
	|				АналитикаВидаУчетаЗатраты КАК РегистрАналитикаВидаУчета
	|			)
	|		) КАК Затраты
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|	ПО
	|		Затраты.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|		
	|ГДЕ
	|	РегистрАналитикаУчетаЗатрат.ХарактерЗатрат В (&МассивХарактеровЗатрат)
	|
    |";
		
	Возврат ТекстЗапросаСКомментариями;
	
КонецФункции // СформироватьТекстЗапросаПоСписываемымЗатратам()

// Функция формирует запрос по регистру "Затраты".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска"
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//   Запрос – Запрос по регистру "Затраты".
//
Функция СформироватьЗапросПоСписываемымЗатратам(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	МассивХарактеровЗатрат
	)
	
	ТекстЗапросаСКомментариями = СформироватьТекстЗапросаПоСписываемымЗатратам();
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("МассивХарактеровЗатрат", МассивХарактеровЗатрат);
		
	Возврат Запрос;

КонецФункции // СформироватьЗапросПоСписываемымЗатратам()

// Процедура производит списание затрат
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//
Процедура СписаниеЗатрат(
	СтруктураШапкиДокумента
	)
	
	СтруктураНаборыЗаписей = РасширеннаяАналитикаУчета.ПолучитьНаборыЗаписейРегистров(СтруктураШапкиДокумента);
	
	Если СтруктураНаборыЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Формируется временная таблица "АналитикаВидаУчетаЗатраты"
	// с ключами аналитики вида учета по разделу учета "Затраты".
	СформироватьВременнуюТаблицуАналитикаВидаУчетаЗатраты(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	МассивХарактеровЗатрат = Новый Массив;
	
	Если СтруктураШапкиДокумента.ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
		
		МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.РасходыНаСбыт);
		МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.ПрочиеОперационныеРасходы);
		МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.Прочие);
		
		Если СтруктураШапкиДокумента.ДиректКостингАдминистративныеЗатраты Тогда
			МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.АдминистративныеРасходы);
		КонецЕсли;	
		
		Если СтруктураШапкиДокумента.ДиректКостингОбщепроизводственныеЗатраты Тогда
			МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.ОбщепроизводственныеРасходы);
		КонецЕсли;	
		
	Иначе
		
		МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.РасходыНаСбыт);
		МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.ПрочиеОперационныеРасходы);
		МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.Прочие);
		МассивХарактеровЗатрат.Добавить(Перечисления.ХарактерЗатрат.АдминистративныеРасходы);
		
	КонецЕсли;	
	
	// Формируется запрос по остаткам затрат, подлежащим списанию
	Запрос = СформироватьЗапросПоСписываемымЗатратам(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		МассивХарактеровЗатрат
	);
	
	РезультатЗапросаЗатраты = Запрос.Выполнить();
		
	Выборка = РезультатЗапросаЗатраты.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
			КоличествоНУОстаток = Выборка.КоличествоНУОстаток;
			СтоимостьНУОстаток  = Выборка.СтоимостьНУОстаток;
			НДСВходящийОстаток  = Выборка.НДСВходящийОстаток;
			НДСКредитОстаток    = Выборка.НДСКредитОстаток;
		Иначе
			КоличествоНУОстаток = 0;
			СтоимостьНУОстаток  = 0;
			НДСВходящийОстаток  = 0;
			НДСКредитОстаток    = 0;
		КонецЕсли;
		
		// Списание остатков списуемых затрат 
		РасширеннаяАналитикаУчета.СформироватьДвиженияПоРегиструУчетЗатрат(
			СтруктураШапкиДокумента,
			
			Выборка.АналитикаВидаУчета,
			Выборка.АналитикаУчетаЗатрат,
			Выборка.АналитикаУчетаПартий,
			Выборка.АналитикаРаспределенияЗатрат,
			
			Неопределено,
			Неопределено,
			Неопределено,
			Неопределено,
			
			ВидДвиженияНакопления.Расход,
			Перечисления.КодыОперацийЗатраты.СписаниеЗатрат,
			Выборка.КоличествоОстаток,
			Выборка.СтоимостьОстаток,
			КоличествоНУОстаток,
			СтоимостьНУОстаток,
			НДСВходящийОстаток,
			НДСКредитОстаток,
			СтруктураНаборыЗаписей.УчетЗатрат
		);
		
	КонецЦикла;
	
	Если СтруктураНаборыЗаписей.УчетЗатрат.Модифицированность() Тогда
		СтруктураНаборыЗаписей.УчетЗатрат.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры // СписаниеЗатрат()

