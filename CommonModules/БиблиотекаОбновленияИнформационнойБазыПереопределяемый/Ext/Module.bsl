// ИНТЕРФЕЙСНАЯ ЧАСТЬ ПЕРЕОПРЕДЕЛЯЕМОГО МОДУЛЯ

// Возвращает список процедур-обработчиков обновления ИБ для всех поддерживаемых версий ИБ.
//
// Пример добавления процедуры-обработчика в список:
//    Обработчик = Обработчики.Добавить();
//    Обработчик.Версия = "1.0.0.0";
//    Обработчик.Процедура = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
//
// Вызывается перед началом обновления данных ИБ.
//
Функция ОбработчикиОбновления() Экспорт
	
	Обработчики = ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления();
	
	// Библиотеки УПП (укр) и ЗУП (укр)
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия    = "*";
	Обработчик.Процедура = "БиблиотекаОбновленияИнформационнойБазы.ВыполнитьОбновлениеИнформационнойБазы";
	
	// При создании новой базы
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия    = "1.3.1.10";
	Обработчик.Процедура = "БиблиотекаОбновленияИнформационнойБазыПереопределяемый.НастроитьРаспределениеЗатрат";
	
	Возврат Обработчики;
	
КонецФункции

Функция СоответствиеВерсийБиблиотек() Экспорт
	
	// Поддерживаем обновление только с версии 1.3.15 
	
	СоответствиеВерсийБиблиотек = Новый Соответствие();
	
	// Библиотека УПП (укр)
	ВерсииБиблиотеки = Новый Соответствие();
	
	
	
	ВерсииБиблиотеки.Вставить("1.3.15.6", "1.3.15.6");
	СоответствиеВерсийБиблиотек.Вставить("УПП (укр)", ВерсииБиблиотеки);
	
	// Библиотека ЗУП (укр)
	ВерсииБиблиотеки = Новый Соответствие();
	
	ВерсииБиблиотеки.Вставить("2.1.24.2", "1.3.15.6");  // ЗУП (укр) 2.1.24.2 - в версии УПП (укр) 1.3.15.6
	ВерсииБиблиотеки.Вставить("2.1.25.3", "1.3.17.2");  // ЗУП (укр) 2.1.25.3 - в версии УПП (укр) 1.3.17.2
	ВерсииБиблиотеки.Вставить("2.1.25.3", "1.3.18.1");  // ЗУП (укр) 2.1.25.3 - в версии УПП (укр) 1.3.18.1
	ВерсииБиблиотеки.Вставить("2.1.26.2", "1.3.19.2");  // ЗУП (укр) 2.1.26.2 - в версии УПП (укр) 1.3.19.1
	ВерсииБиблиотеки.Вставить("2.1.26.2", "1.3.20.2");  // ЗУП (укр) 2.1.26.2 - в версии УПП (укр) 1.3.20.2
	ВерсииБиблиотеки.Вставить("2.1.28.1", "1.3.21.2");  // ЗУП (укр) 2.1.28.1 - в версии УПП (укр) 1.3.21.2
	ВерсииБиблиотеки.Вставить("2.1.28.1", "1.3.22.2");  // ЗУП (укр) 2.1.28.1 - в версии УПП (укр) 1.3.22.1
	ВерсииБиблиотеки.Вставить("2.1.30.2", "1.3.23.7");  // ЗУП (укр) 2.1.30.2 - в версии УПП (укр) 1.3.23.7
	ВерсииБиблиотеки.Вставить("2.1.31.1", "1.3.24.5");  // ЗУП (укр) 2.1.31.1 - в версии УПП (укр) 1.3.24.5
	ВерсииБиблиотеки.Вставить("2.1.31.1", "1.3.25.4");  // ЗУП (укр) 2.1.31.1 - в версии УПП (укр) 1.3.25.4
	ВерсииБиблиотеки.Вставить("2.1.32.1", "1.3.26.3");  // ЗУП (укр) 2.1.32.1 - в версии УПП (укр) 1.3.26.3
	ВерсииБиблиотеки.Вставить("2.1.32.1", "1.3.27.1");  // ЗУП (укр) 2.1.32.1 - в версии УПП (укр) 1.3.27.1
	ВерсииБиблиотеки.Вставить("2.1.33.3", "1.3.28.12"); // ЗУП (укр) 2.1.33.3 - в версии УПП (укр) 1.3.28.12
	ВерсииБиблиотеки.Вставить("2.1.33.3", "1.3.29.2");  // ЗУП (укр) 2.1.33.3 - в версии УПП (укр) 1.3.29.2
	ВерсииБиблиотеки.Вставить("2.1.33.3", "1.3.30.1");  // ЗУП (укр) 2.1.33.3 - в версии УПП (укр) 1.3.30.1
	ВерсииБиблиотеки.Вставить("2.1.34.1", "1.3.31.2");  // ЗУП (укр) 2.1.34.1 - в версии УПП (укр) 1.3.31.2
	ВерсииБиблиотеки.Вставить("2.1.34.1", "1.3.32.1");  // ЗУП (укр) 2.1.34.1 - в версии УПП (укр) 1.3.32.1
	ВерсииБиблиотеки.Вставить("2.1.34.1", "1.3.33.6");  // ЗУП (укр) 2.1.34.1 - в версии УПП (укр) 1.3.33.6
	ВерсииБиблиотеки.Вставить("2.1.34.1", "1.3.34.5");  // ЗУП (укр) 2.1.34.1 - в версии УПП (укр) 1.3.34.5
	ВерсииБиблиотеки.Вставить("2.1.35.2", "1.3.35.2");  // ЗУП (укр) 2.1.35.2 - в версии УПП (укр) 1.3.35.2
	ВерсииБиблиотеки.Вставить("2.1.36.1", "1.3.36.5");  // ЗУП (укр) 2.1.36.1 - в версии УПП (укр) 1.3.36.5
	ВерсииБиблиотеки.Вставить("2.1.37.1", "1.3.37.2");  // ЗУП (укр) 2.1.37.1 - в версии УПП (укр) 1.3.37.2
	ВерсииБиблиотеки.Вставить("2.1.38.2", "1.3.38.2");  // ЗУП (укр) 2.1.38.2 - в версии УПП (укр) 1.3.38.2
	ВерсииБиблиотеки.Вставить("2.1.39.1", "1.3.39.1");  // ЗУП (укр) 2.1.39.1 - в версии УПП (укр) 1.3.39.1
	ВерсииБиблиотеки.Вставить("2.1.40.1", "1.3.40.1");  // ЗУП (укр) 2.1.40.1 - в версии УПП (укр) 1.3.40.1
	ВерсииБиблиотеки.Вставить("2.1.40.1", "1.3.41.1");  // ЗУП (укр) 2.1.40.1 - в версии УПП (укр) 1.3.41.1
	ВерсииБиблиотеки.Вставить("2.1.41.1", "1.3.42.2");  // ЗУП (укр) 2.1.41.1 - в версии УПП (укр) 1.3.42.2
	ВерсииБиблиотеки.Вставить("2.1.42.2", "1.3.43.2");  // ЗУП (укр) 2.1.42.2 - в версии УПП (укр) 1.3.43.2
	ВерсииБиблиотеки.Вставить("2.1.43.1", "1.3.44.2");  // ЗУП (укр) 2.1.43.1 - в версии УПП (укр) 1.3.44.2
	ВерсииБиблиотеки.Вставить("2.1.43.1", "1.3.45.2");  // ЗУП (укр) 2.1.43.1 - в версии УПП (укр) 1.3.45.2
	ВерсииБиблиотеки.Вставить("2.1.43.2", "1.3.46.1");  // ЗУП (укр) 2.1.43.2 - в версии УПП (укр) 1.3.46.1
	ВерсииБиблиотеки.Вставить("2.1.44.1", "1.3.47.2");  // ЗУП (укр) 2.1.44.1 - в версии УПП (укр) 1.3.47.2
	ВерсииБиблиотеки.Вставить("2.1.45.2", "1.3.48.2");  // ЗУП (укр) 2.1.45.2 - в версии УПП (укр) 1.3.48.2
	ВерсииБиблиотеки.Вставить("2.1.45.3", "1.3.49.1");  // ЗУП (укр) 2.1.45.3 - в версии УПП (укр) 1.3.49.1
	ВерсииБиблиотеки.Вставить("2.1.45.3", "1.3.50.1");  // ЗУП (укр) 2.1.45.3 - в версии УПП (укр) 1.3.50.1
	ВерсииБиблиотеки.Вставить("2.1.45.3", "1.3.51.1");  // ЗУП (укр) 2.1.45.3 - в версии УПП (укр) 1.3.51.1
	ВерсииБиблиотеки.Вставить("2.1.45.3", "1.3.51.2");  // ЗУП (укр) 2.1.45.3 - в версии УПП (укр) 1.3.51.2
	ВерсииБиблиотеки.Вставить("2.1.45.3", "1.3.52.1");  // ЗУП (укр) 2.1.45.3 - в версии УПП (укр) 1.3.52.1
	ВерсииБиблиотеки.Вставить("2.1.45.3", "1.3.53.1");  // ЗУП (укр) 2.1.45.3 - в версии УПП (укр) 1.3.53.1
    ВерсииБиблиотеки.Вставить("2.1.46.2", "1.3.54.1");  // ЗУП (укр) 2.1.46.2 - в версии УПП (укр) 1.3.54.1
	
	СоответствиеВерсийБиблиотек.Вставить("ЗУП (укр)", ВерсииБиблиотеки);	
	
	Возврат СоответствиеВерсийБиблиотек;
	
КонецФункции

// НАСТРОЙКИ УЧЕТА ПРИ ПЕРВОМ ЗАПУСКЕ

// Процедура заполняет предопределенные элементы справочника "Способы распределения затрат".
Процедура НастроитьРаспределениеЗатрат() Экспорт
	
	СправочникОбъект = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПоОбъемуВыпуска.ПолучитьОбъект();
	Если НЕ ЗначениеЗаполнено(СправочникОбъект.БазаРаспределенияЗатрат) Тогда
		СправочникОбъект.БазаРаспределенияЗатрат 		= Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска;
		СправочникОбъект.ПоказательБазыРаспределения 	= Перечисления.ВидыПоказателейБазыРаспределения.НатуральныеЕдиницыИзмерения;
		СправочникОбъект.РаспределятьНаСобственнуюПродукцию 			= Истина;
		СправочникОбъект.РаспределятьНаПродукциюИзДавальческогоСырья 	= Истина;
		СправочникОбъект.РаспределятьНаПродукциюСтороннегоПереработчика = Истина;
		СправочникОбъект.Записать();
	КонецЕсли;
	
	СправочникОбъект = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПоПлановойСебестоимости.ПолучитьОбъект();
	Если НЕ ЗначениеЗаполнено(СправочникОбъект.БазаРаспределенияЗатрат) Тогда
		СправочникОбъект.БазаРаспределенияЗатрат 		= Перечисления.БазыРаспределенияЗатрат.ПоОбъемуВыпуска;
		СправочникОбъект.ПоказательБазыРаспределения 	= Перечисления.ВидыПоказателейБазыРаспределения.ЦеныНоменклатуры;
		СправочникОбъект.ТипЦен 						= Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
		СправочникОбъект.РаспределятьНаСобственнуюПродукцию 			= Истина;
		СправочникОбъект.РаспределятьНаПродукциюИзДавальческогоСырья 	= Истина;
		СправочникОбъект.РаспределятьНаПродукциюСтороннегоПереработчика = Истина;
		СправочникОбъект.Записать();
	КонецЕсли;
	
	СправочникОбъект = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПоНормативам.ПолучитьОбъект();
	Если НЕ ЗначениеЗаполнено(СправочникОбъект.БазаРаспределенияЗатрат) Тогда
		СправочникОбъект.БазаРаспределенияЗатрат 		= Перечисления.БазыРаспределенияЗатрат.ПоНормативам;
		СправочникОбъект.РаспределятьНаСобственнуюПродукцию 			= Истина;
		СправочникОбъект.РаспределятьНаПродукциюИзДавальческогоСырья 	= Истина;
		СправочникОбъект.РаспределятьНаПродукциюСтороннегоПереработчика = Истина;
		СправочникОбъект.Записать();
	КонецЕсли;
	
	СправочникОбъект = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПоВыручкеОтРеализации.ПолучитьОбъект();
	Если НЕ ЗначениеЗаполнено(СправочникОбъект.БазаРаспределенияЗатрат) Тогда
		СправочникОбъект.БазаРаспределенияЗатрат 		= Перечисления.БазыРаспределенияЗатрат.ПоОбъемуПродаж;
		СправочникОбъект.ПоказательБазыРаспределения 	= Перечисления.ВидыПоказателейБазыРаспределения.ФактическаяЦенаРеализации;
		СправочникОбъект.РаспределятьНаСобственнуюПродукцию 			= Истина;
		СправочникОбъект.РаспределятьНаПродукциюИзДавальческогоСырья 	= Истина;
		СправочникОбъект.РаспределятьНаПродукциюСтороннегоПереработчика = Истина;
		СправочникОбъект.Записать();
	КонецЕсли;
	
	СправочникОбъект = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПоОплатеТруда.ПолучитьОбъект();
	Если НЕ ЗначениеЗаполнено(СправочникОбъект.БазаРаспределенияЗатрат) Тогда
		СправочникОбъект.БазаРаспределенияЗатрат 		= Перечисления.БазыРаспределенияЗатрат.ПоСтоимостиЗатрат;
		СправочникОбъект.РаспределятьНаСобственнуюПродукцию 			= Истина;
		СправочникОбъект.РаспределятьНаПродукциюИзДавальческогоСырья 	= Истина;
		СправочникОбъект.РаспределятьНаПродукциюСтороннегоПереработчика = Истина;
		
		ПостроительОтчета = Новый ПостроительОтчета;
		СправочникОбъект.ЗаполнитьНачальныеНастройки(ПостроительОтчета);
		
		ПостроительОтчета.Отбор.ВидЗатрат.Значение = Перечисления.ВидыЗатрат.ОплатаТруда;
		ПостроительОтчета.Отбор.ВидЗатрат.Использование = Истина;
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки());
		СтруктураНастроек.Вставить("Отбор", ПостроительОтчета.Отбор);
	
		ХранилищеДанных = Новый ХранилищеЗначения(СтруктураНастроек);
		СправочникОбъект.НастройкиПостроителя = ХранилищеДанных;
		
		СправочникОбъект.Записать();
	КонецЕсли;
	
	СправочникОбъект = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПоМатериальнымЗатратам.ПолучитьОбъект();
	Если НЕ ЗначениеЗаполнено(СправочникОбъект.БазаРаспределенияЗатрат) Тогда
		СправочникОбъект.БазаРаспределенияЗатрат 		= Перечисления.БазыРаспределенияЗатрат.ПоСтоимостиЗатрат;
		СправочникОбъект.РаспределятьНаСобственнуюПродукцию 			= Истина;
		СправочникОбъект.РаспределятьНаПродукциюИзДавальческогоСырья 	= Истина;
		СправочникОбъект.РаспределятьНаПродукциюСтороннегоПереработчика = Истина;
		
		ПостроительОтчета = Новый ПостроительОтчета;
		СправочникОбъект.ЗаполнитьНачальныеНастройки(ПостроительОтчета);
		
		ПостроительОтчета.Отбор.ВидЗатрат.Значение = Перечисления.ВидыЗатрат.Материальные;
		ПостроительОтчета.Отбор.ВидЗатрат.Использование = Истина;
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки());
		СтруктураНастроек.Вставить("Отбор", ПостроительОтчета.Отбор);
	
		ХранилищеДанных = Новый ХранилищеЗначения(СтруктураНастроек);
		СправочникОбъект.НастройкиПостроителя = ХранилищеДанных;
		
		СправочникОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры // НастроитьРаспределениеЗатрат()

///////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ДАННЫХ, НАКОПЛЕННЫХ В ИНФОРМАЦИОННОЙ БАЗЕ ("ОПЦИОНАЛЬНЫЕ")
