// Идентификатор библиотеки - "УПП (укр)"

// Устанавливает параметры табличного документа с описанием изменений системы,
// который выводится пользователю в режиме обычного приложения
//
Функция ПараметрыМакетаОписаниеОбновлений() Экспорт
	
	Параметры = Новый Структура();
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
	
	// Выполнение настроек
	Параметры.Вставить("ФормаКонстант",                                    Константы.ПолучитьФорму()); // Основная форма констант доступна роли Пользователь
	Параметры.Вставить("ФормаНастройкаПрограммы",                          РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ИзменениеНастроекУчета, Обработки.ИзменениеНастроекУчета,, "НастройкаПрограммы"));
	Параметры.Вставить("ФормаНастройкиПараметровУчета",                    РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ИзменениеНастроекУчета, Обработки.ИзменениеНастроекУчета,, "НастройкаПараметровУчета"));
	Параметры.Вставить("ФормаИспользованиеРегистраСвободныеОстатки",       РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ИзменениеНастроекУчета, Обработки.ИзменениеНастроекУчета,, "ИспользованиеРегистраСвободныеОстатки"));
	Параметры.Вставить("ФормаНастройкиСогласованияЗаявокНаРасходованиеДС", РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.РегистрыСведений.НастройкиСогласованияЗаявокНаРасходованиеДС, РегистрыСведений.НастройкиСогласованияЗаявокНаРасходованиеДС,, "ФормаСписка"));
	Параметры.Вставить("ФормаНастройкаТорговогоОборудования",              РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ИзменениеНастроекУчета,                             Обработки.ИзменениеНастроекУчета,, "НастройкаТорговогоОборудования"));
	Параметры.Вставить("ФормаПодключаемоеОборудование",                    РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.ПодключаемоеОборудование,                         Справочники.ПодключаемоеОборудование,,"ПодключениеИНастройкаОборудования"));
	
	// Настройка прав доступа
	Параметры.Вставить("ФормаНастройкаПараметровОграниченияДоступа",  РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ИзменениеНастроекУчета, Обработки.ИзменениеНастроекУчета,, "ПараметрыДоступаНаУровнеЗаписей"));
	Параметры.Вставить("ФормаНастройкаПравДоступа",                   РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.НастройкаПравДоступа, Обработки.НастройкаПравДоступа));
	
	// Загрузка классификаторов
	Параметры.Вставить("ФормаПодбораВалют",    РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Валюты, Справочники.Валюты, ,"ФормаПодбораИзКлассификатора"));
	Параметры.Вставить("ФормаСпискаВалют",     РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Валюты, Справочники.Валюты, "ФормаСписка"));
	Параметры.Вставить("ФормаПодбораЕдиниц",   РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.КлассификаторЕдиницИзмерения, Справочники.КлассификаторЕдиницИзмерения,, "ФормаПодбораИзКлассификатора"));
	Параметры.Вставить("ФормаСпискаЕдиниц",    РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.КлассификаторЕдиницИзмерения, Справочники.КлассификаторЕдиницИзмерения, "ФормаСписка"));

	// Заполнение справочников
	Параметры.Вставить("ФормаСпискаКонтрагентов",         РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Контрагенты, Справочники.Контрагенты, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаНоменклатуры",         РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Номенклатура, Справочники.Номенклатура, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаТиповЦенНоменклатуры", РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.ТипыЦенНоменклатуры, Справочники.ТипыЦенНоменклатуры, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаТиповСкидокНаценок",   РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.ТипыСкидокНаценок, Справочники.ТипыСкидокНаценок, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаОрганизаций",          РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Организации, Справочники.Организации, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаПодразделений",        РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Подразделения, Справочники.Подразделения, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаСкладов",              РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Склады, Справочники.Склады, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаКасс",                 РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Кассы, Справочники.Кассы, "ФормаСписка"));
	Параметры.Вставить("ФормаСпискаКассККМ",              РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.КассыККМ, Справочники.КассыККМ, "ФормаСписка"));
	
	// Заполнение списка пользователей и настройка параметров текущего пользователя
	Параметры.Вставить("ФормаСпискаПользователей", РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Справочники.Пользователи, Справочники.Пользователи, "ФормаСписка"));
	Параметры.Вставить("ФормаПользователя",        глЗначениеПеременной("глТекущийПользователь"));
	
	// Обработка данных
	Параметры.Вставить("ФормаЗагрузкаНастроекТиповыхОтчетов",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ОбновлениеИнформационнойБазы, Обработки.ОбновлениеИнформационнойБазы,, "ЗагрузкаНастроекТиповыхОтчетов"));
		
	Параметры.Вставить("ОбновлениеПроизвольныхОтчетов",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ОбновлениеИнформационнойБазы, Обработки.ОбновлениеИнформационнойБазы,, "ОбновлениеПроизвольныхОтчетов"));
	
	Параметры.Вставить("ЗаполнениеСинонимовОбъектов",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ЗаполнениеСинонимовОбъектов, Обработки.ЗаполнениеСинонимовОбъектов,, "Форма"));
	
	
	Параметры.Вставить("КакПодготовитьсяКУчетуРазницНКУ2015",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ОбновлениеИнформационнойБазы, Обработки.ОбновлениеИнформационнойБазы,, "КакПодготовитьсяКУчетуРазницНКУ2015"));
	
	Параметры.Вставить("ОчисткаНеиспользуемыхРеквизитовНКУ2015",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ОбновлениеИнформационнойБазы, Обработки.ОбновлениеИнформационнойБазы,, "ОчисткаНеиспользуемыхРеквизитовНКУ2015"));
	
	Параметры.Вставить("КорректировкаПересчетаПропорциональногоНДС_2015",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ОбновлениеИнформационнойБазы, Обработки.ОбновлениеИнформационнойБазы,, "КорректировкаПересчетаПропорциональногоНДС_2015"));
		
	Параметры.Вставить("ФормаПереходЕСВ2016",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ОбновлениеИнформационнойБазы, Обработки.ОбновлениеИнформационнойБазы,, "ФормаПереходЕСВ2016"));	
		
	Параметры.Вставить("ЗаполнениеВидовКодовВКлассификатореКодовДляНН",
		РаботаСДиалогами.ВернутьФормуЕслиДоступна(Метаданные.Обработки.ОбновлениеИнформационнойБазы, Обработки.ОбновлениеИнформационнойБазы,, "ЗаполнениеВидовКодовВКлассификатореКодовДляНН"));	
		
	#КонецЕсли
	
	Возврат Параметры;
	
КонецФункции // ПараметрыМакетаОписаниеОбновлений()

// Вызывается в управляемом приложении при нажатии на гиперссылку 
// или двойном щелчке на ячейке табличного документа с описанием изменений системы.
//
// Параметры:
//   Область - ОбластьЯчеекТабличногоДокумента - область документа, на 
//             которой произошло нажатие.
//
Процедура ПриНажатииНаГиперссылкуВДокументеОписанияОбновлений(Знач Область) Экспорт
	
	Если Найти(Область.Имя, "ФормаПодключаемоеОборудование") = 1 Тогда
		ОткрытьФорму("Справочник.ПодключаемоеОборудование.ФормаСписка");
	КонецЕсли;
	
КонецПроцедуры
